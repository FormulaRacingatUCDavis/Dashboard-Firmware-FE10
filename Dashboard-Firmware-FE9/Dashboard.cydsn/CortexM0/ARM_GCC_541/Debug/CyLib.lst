ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoDisableWcoLock
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoDisableWcoLock, %function
  25              	CySysClkImoDisableWcoLock:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.10
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2021, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 4


 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 5


 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0u;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 6


 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  28              		.loc 1 284 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  33              		.loc 1 294 0
  34 0000 0023     		movs	r3, #0
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  35              		.loc 1 296 0
  36 0002 3F20     		movs	r0, #63
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
  37              		.loc 1 284 0
  38 0004 30B5     		push	{r4, r5, lr}
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 296 0
  44 0006 0C49     		ldr	r1, .L7
  45 0008 0C4C     		ldr	r4, .L7+4
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 7


  46              	.LVL1:
  47              	.L4:
  48 000a 0A68     		ldr	r2, [r1]
  49 000c 1D5D     		ldrb	r5, [r3, r4]
  50 000e 0240     		ands	r2, r0
  51 0010 AA42     		cmp	r2, r5
  52 0012 01D1     		bne	.L2
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  53              		.loc 1 298 0
  54 0014 0333     		adds	r3, r3, #3
  55              	.LVL2:
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
  56              		.loc 1 299 0
  57 0016 03E0     		b	.L3
  58              	.LVL3:
  59              	.L2:
 294:Generated_Source\PSoC4/CyLib.c ****             {
  60              		.loc 1 294 0 discriminator 2
  61 0018 0133     		adds	r3, r3, #1
  62              	.LVL4:
  63 001a 2E2B     		cmp	r3, #46
  64 001c F5D1     		bne	.L4
 293:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  65              		.loc 1 293 0
  66 001e 2B3B     		subs	r3, r3, #43
  67              	.LVL5:
  68              	.L3:
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  69              		.loc 1 316 0
  70 0020 0749     		ldr	r1, .L7+8
  71 0022 084A     		ldr	r2, .L7+12
  72 0024 0868     		ldr	r0, [r1]
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
  73              		.loc 1 323 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 8


  74              		@ sp needed
 316:Generated_Source\PSoC4/CyLib.c **** 
  75              		.loc 1 316 0
  76 0026 0240     		ands	r2, r0
  77 0028 0A60     		str	r2, [r1]
 321:Generated_Source\PSoC4/CyLib.c ****         #endif
  78              		.loc 1 321 0
  79 002a 074A     		ldr	r2, .L7+16
  80 002c 9B18     		adds	r3, r3, r2
  81              	.LVL6:
  82 002e 1B78     		ldrb	r3, [r3]
  83              	.LVL7:
  84 0030 064A     		ldr	r2, .L7+20
  85 0032 DBB2     		uxtb	r3, r3
  86 0034 1360     		str	r3, [r2]
  87              		.loc 1 323 0
  88 0036 30BD     		pop	{r4, r5, pc}
  89              	.L8:
  90              		.align	2
  91              	.L7:
  92 0038 2CFF0B40 		.word	1074528044
  93 003c 00000000 		.word	.LANCHOR0
  94 0040 00002240 		.word	1075970048
  95 0044 FFFFFFBF 		.word	-1073741825
  96 0048 CDF1FF0F 		.word	268431821
  97 004c 28FF0B40 		.word	1074528040
  98              		.cfi_endproc
  99              	.LFE4:
 100              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 101              		.section	.text.CySysClkImoStop,"ax",%progbits
 102              		.align	1
 103              		.global	CySysClkImoStop
 104              		.code	16
 105              		.thumb_func
 106              		.type	CySysClkImoStop, %function
 107              	CySysClkImoStop:
 108              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109              		.loc 1 139 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117              		.loc 1 141 0
 118 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 119              	.LVL8:
 148:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 148 0
 121 0006 034A     		ldr	r2, .L10
 149:Generated_Source\PSoC4/CyLib.c **** 
 122              		.loc 1 149 0
 123              		@ sp needed
 148:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 9


 124              		.loc 1 148 0
 125 0008 1368     		ldr	r3, [r2]
 126 000a 5B00     		lsls	r3, r3, #1
 127 000c 5B08     		lsrs	r3, r3, #1
 128 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 129              		.loc 1 149 0
 130 0010 10BD     		pop	{r4, pc}
 131              	.L11:
 132 0012 C046     		.align	2
 133              	.L10:
 134 0014 08010B40 		.word	1074462984
 135              		.cfi_endproc
 136              	.LFE2:
 137              		.size	CySysClkImoStop, .-CySysClkImoStop
 138              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 139              		.align	1
 140              		.global	CySysClkImoGetWcoLock
 141              		.code	16
 142              		.thumb_func
 143              		.type	CySysClkImoGetWcoLock, %function
 144              	CySysClkImoGetWcoLock:
 145              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 146              		.loc 1 340 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 151              		.loc 1 341 0
 152 0000 024B     		ldr	r3, .L13
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 153              		.loc 1 344 0
 154              		@ sp needed
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 155              		.loc 1 341 0
 156 0002 1868     		ldr	r0, [r3]
 157 0004 4000     		lsls	r0, r0, #1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 10


 158 0006 C00F     		lsrs	r0, r0, #31
 159              		.loc 1 344 0
 160 0008 7047     		bx	lr
 161              	.L14:
 162 000a C046     		.align	2
 163              	.L13:
 164 000c 00002240 		.word	1075970048
 165              		.cfi_endproc
 166              	.LFE5:
 167              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 168              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 169              		.align	1
 170              		.global	CySysClkWriteHfclkDirect
 171              		.code	16
 172              		.thumb_func
 173              		.type	CySysClkWriteHfclkDirect, %function
 174              	CySysClkWriteHfclkDirect:
 175              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 11


 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 12


 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 13


 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 14


 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 176              		.loc 1 585 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              	.LVL9:
 181 0000 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185              		.loc 1 585 0
 186 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 187              		.loc 1 593 0
 188 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 189              	.LVL10:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 15


 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 190              		.loc 1 625 0
 191 0008 0723     		movs	r3, #7
 192 000a 0449     		ldr	r1, .L16
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 642:Generated_Source\PSoC4/CyLib.c **** }
 193              		.loc 1 642 0
 194              		@ sp needed
 625:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 195              		.loc 1 625 0
 196 000c 0A68     		ldr	r2, [r1]
 197 000e 9A43     		bics	r2, r3
 198              	.LVL11:
 636:Generated_Source\PSoC4/CyLib.c ****     }
 199              		.loc 1 636 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 16


 200 0010 2340     		ands	r3, r4
 201 0012 1343     		orrs	r3, r2
 202              	.LVL12:
 639:Generated_Source\PSoC4/CyLib.c **** 
 203              		.loc 1 639 0
 204 0014 0B60     		str	r3, [r1]
 641:Generated_Source\PSoC4/CyLib.c **** }
 205              		.loc 1 641 0
 206 0016 FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL13:
 208              	.LVL14:
 209              		.loc 1 642 0
 210 001a 10BD     		pop	{r4, pc}
 211              	.L17:
 212              		.align	2
 213              	.L16:
 214 001c 00010B40 		.word	1074462976
 215              		.cfi_endproc
 216              	.LFE6:
 217              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 218              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 219              		.align	1
 220              		.global	CySysEnablePumpClock
 221              		.code	16
 222              		.thumb_func
 223              		.type	CySysEnablePumpClock, %function
 224              	CySysEnablePumpClock:
 225              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 226              		.loc 1 662 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL15:
 231 0000 10B5     		push	{r4, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 17


 235 0002 094B     		ldr	r3, .L22
 236 0004 094C     		ldr	r4, .L22+4
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 237              		.loc 1 664 0
 238 0006 C207     		lsls	r2, r0, #31
 239 0008 04D5     		bpl	.L19
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 240              		.loc 1 666 0
 241 000a 2268     		ldr	r2, [r4]
 242 000c 1968     		ldr	r1, [r3]
 243 000e 5206     		lsls	r2, r2, #25
 244 0010 0A43     		orrs	r2, r1
 245 0012 06E0     		b	.L21
 246              	.L19:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 247              		.loc 1 670 0
 248 0014 1A68     		ldr	r2, [r3]
 249 0016 1201     		lsls	r2, r2, #4
 250 0018 520F     		lsrs	r2, r2, #29
 251 001a 2260     		str	r2, [r4]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 252              		.loc 1 672 0
 253 001c 1968     		ldr	r1, [r3]
 254 001e 044A     		ldr	r2, .L22+8
 255 0020 0A40     		ands	r2, r1
 256              	.L21:
 257 0022 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 258              		.loc 1 686 0
 259              		@ sp needed
 260 0024 10BD     		pop	{r4, pc}
 261              	.L23:
 262 0026 C046     		.align	2
 263              	.L22:
 264 0028 08010B40 		.word	1074462984
 265 002c 00000000 		.word	.LANCHOR1
 266 0030 FFFFFFF1 		.word	-234881025
 267              		.cfi_endproc
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 18


 268              	.LFE7:
 269              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 270              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 271              		.align	1
 272              		.global	CySysClkGetSysclkSource
 273              		.code	16
 274              		.thumb_func
 275              		.type	CySysClkGetSysclkSource, %function
 276              	CySysClkGetSysclkSource:
 277              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 278              		.loc 1 699 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 286              		.loc 1 703 0
 287 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 288              	.LVL16:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 289              		.loc 1 713 0
 290 0006 034B     		ldr	r3, .L25
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 19


 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 291              		.loc 1 725 0
 292              		@ sp needed
 713:Generated_Source\PSoC4/CyLib.c **** 
 293              		.loc 1 713 0
 294 0008 1C68     		ldr	r4, [r3]
 295              	.LVL17:
 722:Generated_Source\PSoC4/CyLib.c **** 
 296              		.loc 1 722 0
 297 000a FFF7FEFF 		bl	CyExitCriticalSection
 298              	.LVL18:
 724:Generated_Source\PSoC4/CyLib.c **** }
 299              		.loc 1 724 0
 300 000e 0720     		movs	r0, #7
 301 0010 2040     		ands	r0, r4
 302              	.LVL19:
 303              		.loc 1 725 0
 304 0012 10BD     		pop	{r4, pc}
 305              	.L26:
 306              		.align	2
 307              	.L25:
 308 0014 00010B40 		.word	1074462976
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 312              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 313              		.align	1
 314              		.global	CySysClkWriteSysclkDiv
 315              		.code	16
 316              		.thumb_func
 317              		.type	CySysClkWriteSysclkDiv, %function
 318              	CySysClkWriteSysclkDiv:
 319              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 20


 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 320              		.loc 1 760 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL20:
 325 0000 70B5     		push	{r4, r5, r6, lr}
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 4, -16
 328              		.cfi_offset 5, -12
 329              		.cfi_offset 6, -8
 330              		.cfi_offset 14, -4
 331              		.loc 1 760 0
 332 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 333              		.loc 1 763 0
 334 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 335              	.LVL21:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 336              		.loc 1 766 0
 337 0008 E104     		lsls	r1, r4, #19
 338 000a E024     		movs	r4, #224
 339              	.LVL22:
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 340              		.loc 1 767 0
 341 000c 054D     		ldr	r5, .L28
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 342              		.loc 1 766 0
 343 000e A403     		lsls	r4, r4, #14
 344              		.loc 1 767 0
 345 0010 2B68     		ldr	r3, [r5]
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 346              		.loc 1 766 0
 347 0012 054A     		ldr	r2, .L28+4
 348 0014 2140     		ands	r1, r4
 349 0016 1A40     		ands	r2, r3
 350 0018 0B00     		movs	r3, r1
 351 001a 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 21


 352              		.loc 1 765 0
 353 001c 2B60     		str	r3, [r5]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 354              		.loc 1 770 0
 355 001e FFF7FEFF 		bl	CyExitCriticalSection
 356              	.LVL23:
 771:Generated_Source\PSoC4/CyLib.c **** }
 357              		.loc 1 771 0
 358              		@ sp needed
 359 0022 70BD     		pop	{r4, r5, r6, pc}
 360              	.L29:
 361              		.align	2
 362              	.L28:
 363 0024 00010B40 		.word	1074462976
 364 0028 FFFFC7FF 		.word	-3670017
 365              		.cfi_endproc
 366              	.LFE9:
 367              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 368              		.section	.text.CySysLvdDisable,"ax",%progbits
 369              		.align	1
 370              		.global	CySysLvdDisable
 371              		.code	16
 372              		.thumb_func
 373              		.type	CySysLvdDisable, %function
 374              	CySysLvdDisable:
 375              	.LFB12:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 22


 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 23


 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 24


 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 25


 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 26


1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 27


1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 28


1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 29


1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 30


1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 31


1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 32


1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 33


1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 34


1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 35


1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 36


1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000u) * (
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 37


1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 38


1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < (uint32)CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 39


1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 40


1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 41


1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 42


1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 43


1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 44


2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 45


2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 46


2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 47


2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 48


2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 49


2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 50


2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 51


2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 52


2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 53


2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 54


2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 55


2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 376              		.loc 1 2693 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 381              		.loc 1 2694 0
 382 0000 0221     		movs	r1, #2
 383 0002 054A     		ldr	r2, .L31
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
 384              		.loc 1 2696 0
 385              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 386              		.loc 1 2694 0
 387 0004 1368     		ldr	r3, [r2]
 388 0006 8B43     		bics	r3, r1
 389 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 390              		.loc 1 2695 0
 391 000a 044A     		ldr	r2, .L31+4
 392 000c 0139     		subs	r1, r1, #1
 393 000e 1368     		ldr	r3, [r2]
 394 0010 8B43     		bics	r3, r1
 395 0012 1360     		str	r3, [r2]
 396              		.loc 1 2696 0
 397 0014 7047     		bx	lr
 398              	.L32:
 399 0016 C046     		.align	2
 400              	.L31:
 401 0018 08000B40 		.word	1074462728
 402 001c 18000B40 		.word	1074462744
 403              		.cfi_endproc
 404              	.LFE12:
 405              		.size	CySysLvdDisable, .-CySysLvdDisable
 406              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 407              		.align	1
 408              		.global	CySysLvdGetInterruptSource
 409              		.code	16
 410              		.thumb_func
 411              		.type	CySysLvdGetInterruptSource, %function
 412              	CySysLvdGetInterruptSource:
 413              	.LFB13:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 56


2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 414              		.loc 1 2711 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 419              		.loc 1 2712 0
 420 0000 024B     		ldr	r3, .L34
2713:Generated_Source\PSoC4/CyLib.c ****     }
 421              		.loc 1 2713 0
 422              		@ sp needed
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 423              		.loc 1 2712 0
 424 0002 1868     		ldr	r0, [r3]
 425 0004 0223     		movs	r3, #2
 426 0006 1840     		ands	r0, r3
 427              		.loc 1 2713 0
 428 0008 7047     		bx	lr
 429              	.L35:
 430 000a C046     		.align	2
 431              	.L34:
 432 000c 04000B40 		.word	1074462724
 433              		.cfi_endproc
 434              	.LFE13:
 435              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 436              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 437              		.align	1
 438              		.global	CySysLvdClearInterrupt
 439              		.code	16
 440              		.thumb_func
 441              		.type	CySysLvdClearInterrupt, %function
 442              	CySysLvdClearInterrupt:
 443              	.LFB14:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 57


2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 444              		.loc 1 2727 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 449              		.loc 1 2728 0
 450 0000 0222     		movs	r2, #2
 451 0002 014B     		ldr	r3, .L37
2729:Generated_Source\PSoC4/CyLib.c ****     }
 452              		.loc 1 2729 0
 453              		@ sp needed
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 454              		.loc 1 2728 0
 455 0004 1A60     		str	r2, [r3]
 456              		.loc 1 2729 0
 457 0006 7047     		bx	lr
 458              	.L38:
 459              		.align	2
 460              	.L37:
 461 0008 04000B40 		.word	1074462724
 462              		.cfi_endproc
 463              	.LFE14:
 464              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 465              		.section	.text.CySysGetResetReason,"ax",%progbits
 466              		.align	1
 467              		.global	CySysGetResetReason
 468              		.code	16
 469              		.thumb_func
 470              		.type	CySysGetResetReason, %function
 471              	CySysGetResetReason:
 472              	.LFB15:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 58


2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 473              		.loc 1 2753 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL24:
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 479              		.loc 1 2756 0
 480 0000 1923     		movs	r3, #25
 481 0002 0200     		movs	r2, r0
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 482              		.loc 1 2757 0
 483 0004 0249     		ldr	r1, .L40
2756:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 484              		.loc 1 2756 0
 485 0006 1A40     		ands	r2, r3
 486              	.LVL25:
 487              		.loc 1 2757 0
 488 0008 0868     		ldr	r0, [r1]
 489              	.LVL26:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 490              		.loc 1 2762 0
 491              		@ sp needed
2761:Generated_Source\PSoC4/CyLib.c **** }
 492              		.loc 1 2761 0
 493 000a 1840     		ands	r0, r3
 494              	.LVL27:
2759:Generated_Source\PSoC4/CyLib.c **** 
 495              		.loc 1 2759 0
 496 000c 0A60     		str	r2, [r1]
 497              		.loc 1 2762 0
 498 000e 7047     		bx	lr
 499              	.L41:
 500              		.align	2
 501              	.L40:
 502 0010 00030B40 		.word	1074463488
 503              		.cfi_endproc
 504              	.LFE15:
 505              		.size	CySysGetResetReason, .-CySysGetResetReason
 506              		.section	.text.CyDisableInts,"ax",%progbits
 507              		.align	1
 508              		.global	CyDisableInts
 509              		.code	16
 510              		.thumb_func
 511              		.type	CyDisableInts, %function
 512              	CyDisableInts:
 513              	.LFB16:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 59


2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 514              		.loc 1 2776 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 519              		.loc 1 2783 0
 520 0000 0122     		movs	r2, #1
2780:Generated_Source\PSoC4/CyLib.c **** 
 521              		.loc 1 2780 0
 522 0002 024B     		ldr	r3, .L43
 523              		.loc 1 2783 0
 524 0004 5242     		rsbs	r2, r2, #0
2780:Generated_Source\PSoC4/CyLib.c **** 
 525              		.loc 1 2780 0
 526 0006 1868     		ldr	r0, [r3]
 527              	.LVL28:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 528              		.loc 1 2786 0
 529              		@ sp needed
2783:Generated_Source\PSoC4/CyLib.c **** 
 530              		.loc 1 2783 0
 531 0008 1A60     		str	r2, [r3]
 532              		.loc 1 2786 0
 533 000a 7047     		bx	lr
 534              	.L44:
 535              		.align	2
 536              	.L43:
 537 000c 80E100E0 		.word	-536813184
 538              		.cfi_endproc
 539              	.LFE16:
 540              		.size	CyDisableInts, .-CyDisableInts
 541              		.section	.text.CyEnableInts,"ax",%progbits
 542              		.align	1
 543              		.global	CyEnableInts
 544              		.code	16
 545              		.thumb_func
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 60


 546              		.type	CyEnableInts, %function
 547              	CyEnableInts:
 548              	.LFB17:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 549              		.loc 1 2799 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL29:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 555              		.loc 1 2800 0
 556 0000 014B     		ldr	r3, .L46
2801:Generated_Source\PSoC4/CyLib.c **** }
 557              		.loc 1 2801 0
 558              		@ sp needed
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 559              		.loc 1 2800 0
 560 0002 1860     		str	r0, [r3]
 561              		.loc 1 2801 0
 562 0004 7047     		bx	lr
 563              	.L47:
 564 0006 C046     		.align	2
 565              	.L46:
 566 0008 00E100E0 		.word	-536813312
 567              		.cfi_endproc
 568              	.LFE17:
 569              		.size	CyEnableInts, .-CyEnableInts
 570              		.section	.text.CyIntSetSysVector,"ax",%progbits
 571              		.align	1
 572              		.global	CyIntSetSysVector
 573              		.code	16
 574              		.thumb_func
 575              		.type	CyIntSetSysVector, %function
 576              	CyIntSetSysVector:
 577              	.LFB18:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 61


2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
 578              		.loc 1 2824 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL30:
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 584              		.loc 1 2828 0
 585 0000 0F28     		cmp	r0, #15
 586 0002 00D9     		bls	.L49
 587              	.LVL31:
 588              	.LBB30:
 589              	.LBB31:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 62


2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 63


2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 64


2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2984:Generated_Source\PSoC4/CyLib.c **** }
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
3003:Generated_Source\PSoC4/CyLib.c **** }
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3018:Generated_Source\PSoC4/CyLib.c **** }
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 65


3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3032:Generated_Source\PSoC4/CyLib.c **** }
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3047:Generated_Source\PSoC4/CyLib.c **** }
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 590              		.loc 1 3069 0
 591              		.syntax divided
 592              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 593 0004 01BE     		    bkpt    1
 594              	@ 0 "" 2
 595              	.LVL32:
 596              		.thumb
 597              		.syntax unified
 598              	.L49:
 599              	.LBE31:
 600              	.LBE30:
2831:Generated_Source\PSoC4/CyLib.c **** 
 601              		.loc 1 2831 0
 602 0006 8023     		movs	r3, #128
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 66


 603 0008 8000     		lsls	r0, r0, #2
 604              	.LVL33:
 605 000a 9B05     		lsls	r3, r3, #22
 606 000c C318     		adds	r3, r0, r3
 607 000e 1868     		ldr	r0, [r3]
 608              	.LVL34:
2837:Generated_Source\PSoC4/CyLib.c **** 
 609              		.loc 1 2837 0
 610              		@ sp needed
2834:Generated_Source\PSoC4/CyLib.c **** 
 611              		.loc 1 2834 0
 612 0010 1960     		str	r1, [r3]
2837:Generated_Source\PSoC4/CyLib.c **** 
 613              		.loc 1 2837 0
 614 0012 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE18:
 617              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 618              		.section	.text.CyIntGetSysVector,"ax",%progbits
 619              		.align	1
 620              		.global	CyIntGetSysVector
 621              		.code	16
 622              		.thumb_func
 623              		.type	CyIntGetSysVector, %function
 624              	CyIntGetSysVector:
 625              	.LFB19:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 626              		.loc 1 2858 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL35:
2861:Generated_Source\PSoC4/CyLib.c **** 
 632              		.loc 1 2861 0
 633 0000 0F28     		cmp	r0, #15
 634 0002 00D9     		bls	.L51
 635              	.LVL36:
 636              	.LBB32:
 637              	.LBB33:
 638              		.loc 1 3069 0
 639              		.syntax divided
 640              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 641 0004 01BE     		    bkpt    1
 642              	@ 0 "" 2
 643              	.LVL37:
 644              		.thumb
 645              		.syntax unified
 646              	.L51:
 647              	.LBE33:
 648              	.LBE32:
2863:Generated_Source\PSoC4/CyLib.c **** }
 649              		.loc 1 2863 0
 650 0006 8023     		movs	r3, #128
 651 0008 8000     		lsls	r0, r0, #2
 652              	.LVL38:
 653 000a 9B05     		lsls	r3, r3, #22
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 67


 654 000c C018     		adds	r0, r0, r3
 655 000e 0068     		ldr	r0, [r0]
2864:Generated_Source\PSoC4/CyLib.c **** 
 656              		.loc 1 2864 0
 657              		@ sp needed
 658 0010 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE19:
 661              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 662              		.section	.text.CyIntSetVector,"ax",%progbits
 663              		.align	1
 664              		.global	CyIntSetVector
 665              		.code	16
 666              		.thumb_func
 667              		.type	CyIntSetVector, %function
 668              	CyIntSetVector:
 669              	.LFB20:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 670              		.loc 1 2880 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675              	.LVL39:
2884:Generated_Source\PSoC4/CyLib.c **** 
 676              		.loc 1 2884 0
 677 0000 1F28     		cmp	r0, #31
 678 0002 00D9     		bls	.L53
 679              	.LVL40:
 680              	.LBB34:
 681              	.LBB35:
 682              		.loc 1 3069 0
 683              		.syntax divided
 684              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 685 0004 01BE     		    bkpt    1
 686              	@ 0 "" 2
 687              	.LVL41:
 688              		.thumb
 689              		.syntax unified
 690              	.L53:
 691              	.LBE35:
 692              	.LBE34:
2887:Generated_Source\PSoC4/CyLib.c **** 
 693              		.loc 1 2887 0
 694 0006 034B     		ldr	r3, .L54
 695 0008 8000     		lsls	r0, r0, #2
 696              	.LVL42:
 697 000a C318     		adds	r3, r0, r3
 698 000c 1868     		ldr	r0, [r3]
 699              	.LVL43:
2893:Generated_Source\PSoC4/CyLib.c **** 
 700              		.loc 1 2893 0
 701              		@ sp needed
2890:Generated_Source\PSoC4/CyLib.c **** 
 702              		.loc 1 2890 0
 703 000e 1960     		str	r1, [r3]
2893:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 68


 704              		.loc 1 2893 0
 705 0010 7047     		bx	lr
 706              	.L55:
 707 0012 C046     		.align	2
 708              	.L54:
 709 0014 40000020 		.word	536870976
 710              		.cfi_endproc
 711              	.LFE20:
 712              		.size	CyIntSetVector, .-CyIntSetVector
 713              		.section	.text.CyIntGetVector,"ax",%progbits
 714              		.align	1
 715              		.global	CyIntGetVector
 716              		.code	16
 717              		.thumb_func
 718              		.type	CyIntGetVector, %function
 719              	CyIntGetVector:
 720              	.LFB21:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 721              		.loc 1 2908 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 726              	.LVL44:
2911:Generated_Source\PSoC4/CyLib.c **** 
 727              		.loc 1 2911 0
 728 0000 1F28     		cmp	r0, #31
 729 0002 00D9     		bls	.L57
 730              	.LVL45:
 731              	.LBB36:
 732              	.LBB37:
 733              		.loc 1 3069 0
 734              		.syntax divided
 735              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 736 0004 01BE     		    bkpt    1
 737              	@ 0 "" 2
 738              	.LVL46:
 739              		.thumb
 740              		.syntax unified
 741              	.L57:
 742              	.LBE37:
 743              	.LBE36:
2913:Generated_Source\PSoC4/CyLib.c **** }
 744              		.loc 1 2913 0
 745 0006 024B     		ldr	r3, .L58
 746 0008 8000     		lsls	r0, r0, #2
 747              	.LVL47:
 748 000a C018     		adds	r0, r0, r3
 749 000c 0068     		ldr	r0, [r0]
2914:Generated_Source\PSoC4/CyLib.c **** 
 750              		.loc 1 2914 0
 751              		@ sp needed
 752 000e 7047     		bx	lr
 753              	.L59:
 754              		.align	2
 755              	.L58:
 756 0010 40000020 		.word	536870976
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 69


 757              		.cfi_endproc
 758              	.LFE21:
 759              		.size	CyIntGetVector, .-CyIntGetVector
 760              		.section	.text.CyIntSetPriority,"ax",%progbits
 761              		.align	1
 762              		.global	CyIntSetPriority
 763              		.code	16
 764              		.thumb_func
 765              		.type	CyIntSetPriority, %function
 766              	CyIntSetPriority:
 767              	.LFB22:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 768              		.loc 1 2927 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              	.LVL48:
 773 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 774              		.cfi_def_cfa_offset 24
 775              		.cfi_offset 3, -24
 776              		.cfi_offset 4, -20
 777              		.cfi_offset 5, -16
 778              		.cfi_offset 6, -12
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 781              		.loc 1 2927 0
 782 0002 0400     		movs	r4, r0
 783 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 784              		.loc 1 2932 0
 785 0006 0329     		cmp	r1, #3
 786 0008 00D9     		bls	.L61
 787              	.LVL49:
 788              	.LBB38:
 789              	.LBB39:
 790              		.loc 1 3069 0
 791              		.syntax divided
 792              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 793 000a 01BE     		    bkpt    1
 794              	@ 0 "" 2
 795              	.LVL50:
 796              		.thumb
 797              		.syntax unified
 798              	.L61:
 799              	.LBE39:
 800              	.LBE38:
2933:Generated_Source\PSoC4/CyLib.c **** 
 801              		.loc 1 2933 0
 802 000c 1F2C     		cmp	r4, #31
 803 000e 00D9     		bls	.L62
 804              	.LVL51:
 805              	.LBB40:
 806              	.LBB41:
 807              		.loc 1 3069 0
 808              		.syntax divided
 809              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 70


 810 0010 01BE     		    bkpt    1
 811              	@ 0 "" 2
 812              	.LVL52:
 813              		.thumb
 814              		.syntax unified
 815              	.L62:
 816              	.LBE41:
 817              	.LBE40:
2935:Generated_Source\PSoC4/CyLib.c **** 
 818              		.loc 1 2935 0
 819 0012 0327     		movs	r7, #3
 820 0014 2500     		movs	r5, r4
 821 0016 3D40     		ands	r5, r7
 822 0018 BD40     		lsls	r5, r5, r7
 823 001a 0635     		adds	r5, r5, #6
 824              	.LVL53:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 825              		.loc 1 2940 0
 826 001c AF40     		lsls	r7, r7, r5
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 827              		.loc 1 2941 0
 828 001e AE40     		lsls	r6, r6, r5
2937:Generated_Source\PSoC4/CyLib.c **** 
 829              		.loc 1 2937 0
 830 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 831              	.LVL54:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 832              		.loc 1 2939 0
 833 0024 A408     		lsrs	r4, r4, #2
 834 0026 054B     		ldr	r3, .L63
 835 0028 A400     		lsls	r4, r4, #2
 836 002a E418     		adds	r4, r4, r3
 837 002c 2368     		ldr	r3, [r4]
 838              	.LVL55:
2945:Generated_Source\PSoC4/CyLib.c **** 
 839              		.loc 1 2945 0
 840              		@ sp needed
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 841              		.loc 1 2940 0
 842 002e BB43     		bics	r3, r7
 843              	.LVL56:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 844              		.loc 1 2941 0
 845 0030 1E43     		orrs	r6, r3
 846              	.LVL57:
2942:Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2942 0
 848 0032 2660     		str	r6, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 849              		.loc 1 2944 0
 850 0034 FFF7FEFF 		bl	CyExitCriticalSection
 851              	.LVL58:
 852              	.LVL59:
 853              	.LVL60:
2945:Generated_Source\PSoC4/CyLib.c **** 
 854              		.loc 1 2945 0
 855 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 71


 856              	.L64:
 857 003a C046     		.align	2
 858              	.L63:
 859 003c 00E400E0 		.word	-536812544
 860              		.cfi_endproc
 861              	.LFE22:
 862              		.size	CyIntSetPriority, .-CyIntSetPriority
 863              		.section	.text.CyIntGetPriority,"ax",%progbits
 864              		.align	1
 865              		.global	CyIntGetPriority
 866              		.code	16
 867              		.thumb_func
 868              		.type	CyIntGetPriority, %function
 869              	CyIntGetPriority:
 870              	.LFB23:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 871              		.loc 1 2961 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876              	.LVL61:
2964:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2964 0
 878 0000 1F28     		cmp	r0, #31
 879 0002 00D9     		bls	.L66
 880              	.LVL62:
 881              	.LBB42:
 882              	.LBB43:
 883              		.loc 1 3069 0
 884              		.syntax divided
 885              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 886 0004 01BE     		    bkpt    1
 887              	@ 0 "" 2
 888              	.LVL63:
 889              		.thumb
 890              		.syntax unified
 891              	.L66:
 892              	.LBE43:
 893              	.LBE42:
2966:Generated_Source\PSoC4/CyLib.c **** 
 894              		.loc 1 2966 0
 895 0006 8308     		lsrs	r3, r0, #2
 896 0008 064A     		ldr	r2, .L67
 897 000a 9B00     		lsls	r3, r3, #2
 898 000c 9B18     		adds	r3, r3, r2
 899 000e 1968     		ldr	r1, [r3]
 900              	.LVL64:
2968:Generated_Source\PSoC4/CyLib.c **** }
 901              		.loc 1 2968 0
 902 0010 0322     		movs	r2, #3
 903 0012 0300     		movs	r3, r0
 904 0014 1340     		ands	r3, r2
 905 0016 9340     		lsls	r3, r3, r2
 906 0018 0633     		adds	r3, r3, #6
 907 001a D940     		lsrs	r1, r1, r3
 908              	.LVL65:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 72


 909 001c 0800     		movs	r0, r1
 910              	.LVL66:
2969:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2969 0
 912              		@ sp needed
2968:Generated_Source\PSoC4/CyLib.c **** }
 913              		.loc 1 2968 0
 914 001e 1040     		ands	r0, r2
2969:Generated_Source\PSoC4/CyLib.c **** 
 915              		.loc 1 2969 0
 916 0020 7047     		bx	lr
 917              	.L68:
 918 0022 C046     		.align	2
 919              	.L67:
 920 0024 00E400E0 		.word	-536812544
 921              		.cfi_endproc
 922              	.LFE23:
 923              		.size	CyIntGetPriority, .-CyIntGetPriority
 924              		.section	.text.CyIntEnable,"ax",%progbits
 925              		.align	1
 926              		.global	CyIntEnable
 927              		.code	16
 928              		.thumb_func
 929              		.type	CyIntEnable, %function
 930              	CyIntEnable:
 931              	.LFB24:
2982:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 932              		.loc 1 2982 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937              	.LVL67:
2983:Generated_Source\PSoC4/CyLib.c **** }
 938              		.loc 1 2983 0
 939 0000 1F23     		movs	r3, #31
 940 0002 1840     		ands	r0, r3
 941              	.LVL68:
 942 0004 1E3B     		subs	r3, r3, #30
 943 0006 8340     		lsls	r3, r3, r0
 944 0008 014A     		ldr	r2, .L70
2984:Generated_Source\PSoC4/CyLib.c **** 
 945              		.loc 1 2984 0
 946              		@ sp needed
2983:Generated_Source\PSoC4/CyLib.c **** }
 947              		.loc 1 2983 0
 948 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2984 0
 950 000c 7047     		bx	lr
 951              	.L71:
 952 000e C046     		.align	2
 953              	.L70:
 954 0010 00E100E0 		.word	-536813312
 955              		.cfi_endproc
 956              	.LFE24:
 957              		.size	CyIntEnable, .-CyIntEnable
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 73


 958              		.section	.text.CyIntGetState,"ax",%progbits
 959              		.align	1
 960              		.global	CyIntGetState
 961              		.code	16
 962              		.thumb_func
 963              		.type	CyIntGetState, %function
 964              	CyIntGetState:
 965              	.LFB25:
3000:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 966              		.loc 1 3000 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL69:
3002:Generated_Source\PSoC4/CyLib.c **** }
 972              		.loc 1 3002 0
 973 0000 1F22     		movs	r2, #31
 974 0002 044B     		ldr	r3, .L73
 975 0004 1040     		ands	r0, r2
 976              	.LVL70:
 977 0006 1B68     		ldr	r3, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** 
 978              		.loc 1 3003 0
 979              		@ sp needed
3002:Generated_Source\PSoC4/CyLib.c **** }
 980              		.loc 1 3002 0
 981 0008 C340     		lsrs	r3, r3, r0
 982 000a 1800     		movs	r0, r3
 983 000c 0123     		movs	r3, #1
 984 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 3003 0
 986 0010 7047     		bx	lr
 987              	.L74:
 988 0012 C046     		.align	2
 989              	.L73:
 990 0014 00E100E0 		.word	-536813312
 991              		.cfi_endproc
 992              	.LFE25:
 993              		.size	CyIntGetState, .-CyIntGetState
 994              		.section	.text.CyIntDisable,"ax",%progbits
 995              		.align	1
 996              		.global	CyIntDisable
 997              		.code	16
 998              		.thumb_func
 999              		.type	CyIntDisable, %function
 1000              	CyIntDisable:
 1001              	.LFB26:
3016:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1002              		.loc 1 3016 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007              	.LVL71:
3017:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 74


 1008              		.loc 1 3017 0
 1009 0000 1F23     		movs	r3, #31
 1010 0002 1840     		ands	r0, r3
 1011              	.LVL72:
 1012 0004 1E3B     		subs	r3, r3, #30
 1013 0006 8340     		lsls	r3, r3, r0
 1014 0008 014A     		ldr	r2, .L76
3018:Generated_Source\PSoC4/CyLib.c **** 
 1015              		.loc 1 3018 0
 1016              		@ sp needed
3017:Generated_Source\PSoC4/CyLib.c **** }
 1017              		.loc 1 3017 0
 1018 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** 
 1019              		.loc 1 3018 0
 1020 000c 7047     		bx	lr
 1021              	.L77:
 1022 000e C046     		.align	2
 1023              	.L76:
 1024 0010 80E100E0 		.word	-536813184
 1025              		.cfi_endproc
 1026              	.LFE26:
 1027              		.size	CyIntDisable, .-CyIntDisable
 1028              		.section	.text.CyIntSetPending,"ax",%progbits
 1029              		.align	1
 1030              		.global	CyIntSetPending
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CyIntSetPending, %function
 1034              	CyIntSetPending:
 1035              	.LFB27:
3030:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1036              		.loc 1 3030 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041              	.LVL73:
3031:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 3031 0
 1043 0000 1F23     		movs	r3, #31
 1044 0002 1840     		ands	r0, r3
 1045              	.LVL74:
 1046 0004 1E3B     		subs	r3, r3, #30
 1047 0006 8340     		lsls	r3, r3, r0
 1048 0008 014A     		ldr	r2, .L79
3032:Generated_Source\PSoC4/CyLib.c **** 
 1049              		.loc 1 3032 0
 1050              		@ sp needed
3031:Generated_Source\PSoC4/CyLib.c **** }
 1051              		.loc 1 3031 0
 1052 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** 
 1053              		.loc 1 3032 0
 1054 000c 7047     		bx	lr
 1055              	.L80:
 1056 000e C046     		.align	2
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 75


 1057              	.L79:
 1058 0010 00E200E0 		.word	-536813056
 1059              		.cfi_endproc
 1060              	.LFE27:
 1061              		.size	CyIntSetPending, .-CyIntSetPending
 1062              		.section	.text.CyIntClearPending,"ax",%progbits
 1063              		.align	1
 1064              		.global	CyIntClearPending
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	CyIntClearPending, %function
 1068              	CyIntClearPending:
 1069              	.LFB28:
3045:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1070              		.loc 1 3045 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075              	.LVL75:
3046:Generated_Source\PSoC4/CyLib.c **** }
 1076              		.loc 1 3046 0
 1077 0000 1F23     		movs	r3, #31
 1078 0002 1840     		ands	r0, r3
 1079              	.LVL76:
 1080 0004 1E3B     		subs	r3, r3, #30
 1081 0006 8340     		lsls	r3, r3, r0
 1082 0008 014A     		ldr	r2, .L82
3047:Generated_Source\PSoC4/CyLib.c **** 
 1083              		.loc 1 3047 0
 1084              		@ sp needed
3046:Generated_Source\PSoC4/CyLib.c **** }
 1085              		.loc 1 3046 0
 1086 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** 
 1087              		.loc 1 3047 0
 1088 000c 7047     		bx	lr
 1089              	.L83:
 1090 000e C046     		.align	2
 1091              	.L82:
 1092 0010 80E200E0 		.word	-536812928
 1093              		.cfi_endproc
 1094              	.LFE28:
 1095              		.size	CyIntClearPending, .-CyIntClearPending
 1096              		.section	.text.CyHalt,"ax",%progbits
 1097              		.align	1
 1098              		.global	CyHalt
 1099              		.code	16
 1100              		.thumb_func
 1101              		.type	CyHalt, %function
 1102              	CyHalt:
 1103              	.LFB29:
3060:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1104              		.loc 1 3060 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 76


 1108              		@ link register save eliminated.
 1109              	.LVL77:
 1110              		.loc 1 3069 0
 1111              		.syntax divided
 1112              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 1113 0000 01BE     		    bkpt    1
 1114              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 3073 0
 1116              		.thumb
 1117              		.syntax unified
 1118              		@ sp needed
 1119 0002 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE29:
 1122              		.size	CyHalt, .-CyHalt
 1123              		.section	.text.CySoftwareReset,"ax",%progbits
 1124              		.align	1
 1125              		.global	CySoftwareReset
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CySoftwareReset, %function
 1129              	CySoftwareReset:
 1130              	.LFB30:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1131              		.loc 1 3084 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1136              		.loc 1 3089 0
 1137 0000 034A     		ldr	r2, .L86
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1138              		.loc 1 3090 0
 1139 0002 0449     		ldr	r1, .L86+4
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1140              		.loc 1 3089 0
 1141 0004 1368     		ldr	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 77


 1142              		.loc 1 3091 0
 1143              		@ sp needed
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1144              		.loc 1 3090 0
 1145 0006 9BB2     		uxth	r3, r3
 1146 0008 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1147              		.loc 1 3089 0
 1148 000a 1360     		str	r3, [r2]
 1149              		.loc 1 3091 0
 1150 000c 7047     		bx	lr
 1151              	.L87:
 1152 000e C046     		.align	2
 1153              	.L86:
 1154 0010 0CED00E0 		.word	-536810228
 1155 0014 0400FA05 		.word	100270084
 1156              		.cfi_endproc
 1157              	.LFE30:
 1158              		.size	CySoftwareReset, .-CySoftwareReset
 1159              		.section	.text.CyDelay,"ax",%progbits
 1160              		.align	1
 1161              		.global	CyDelay
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	CyDelay, %function
 1165              	CyDelay:
 1166              	.LFB31:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1167              		.loc 1 3104 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL78:
 1172 0000 70B5     		push	{r4, r5, r6, lr}
 1173              		.cfi_def_cfa_offset 16
 1174              		.cfi_offset 4, -16
 1175              		.cfi_offset 5, -12
 1176              		.cfi_offset 6, -8
 1177              		.cfi_offset 14, -4
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1178              		.loc 1 3105 0
 1179 0002 8025     		movs	r5, #128
3104:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1180              		.loc 1 3104 0
 1181 0004 0400     		movs	r4, r0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 78


 1182              		.loc 1 3105 0
 1183 0006 2D02     		lsls	r5, r5, #8
 1184              	.LVL79:
 1185              	.L89:
 1186 0008 064B     		ldr	r3, .L92
 1187 000a AC42     		cmp	r4, r5
 1188 000c 05D9     		bls	.L91
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1189              		.loc 1 3110 0
 1190 000e 5868     		ldr	r0, [r3, #4]
 1191 0010 FFF7FEFF 		bl	CyDelayCycles
 1192              	.LVL80:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1193              		.loc 1 3111 0
 1194 0014 044B     		ldr	r3, .L92+4
 1195 0016 E418     		adds	r4, r4, r3
 1196              	.LVL81:
 1197 0018 F6E7     		b	.L89
 1198              	.L91:
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1199              		.loc 1 3114 0
 1200 001a 9868     		ldr	r0, [r3, #8]
3115:Generated_Source\PSoC4/CyLib.c **** }
 1201              		.loc 1 3115 0
 1202              		@ sp needed
3114:Generated_Source\PSoC4/CyLib.c **** }
 1203              		.loc 1 3114 0
 1204 001c 6043     		muls	r0, r4
 1205 001e FFF7FEFF 		bl	CyDelayCycles
 1206              	.LVL82:
 1207              	.LVL83:
 1208              		.loc 1 3115 0
 1209 0022 70BD     		pop	{r4, r5, r6, pc}
 1210              	.L93:
 1211              		.align	2
 1212              	.L92:
 1213 0024 00000000 		.word	.LANCHOR1
 1214 0028 0080FFFF 		.word	-32768
 1215              		.cfi_endproc
 1216              	.LFE31:
 1217              		.size	CyDelay, .-CyDelay
 1218              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1219              		.align	1
 1220              		.global	CySysClkImoEnableWcoLock
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CySysClkImoEnableWcoLock, %function
 1224              	CySysClkImoEnableWcoLock:
 1225              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1226              		.loc 1 175 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 79


 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 16
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL84:
 1231 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1232              		.cfi_def_cfa_offset 20
 1233              		.cfi_offset 4, -20
 1234              		.cfi_offset 5, -16
 1235              		.cfi_offset 6, -12
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238 0002 85B0     		sub	sp, sp, #20
 1239              		.cfi_def_cfa_offset 40
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1240              		.loc 1 186 0
 1241 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1242              	.LVL85:
 1243 0008 0028     		cmp	r0, #0
 1244 000a 55D0     		beq	.L94
 1245              	.LBB46:
 1246              	.LBB47:
 188:Generated_Source\PSoC4/CyLib.c **** 
 1247              		.loc 1 188 0
 1248 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1249              	.LVL86:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1250              		.loc 1 200 0
 1251 0010 0023     		movs	r3, #0
 188:Generated_Source\PSoC4/CyLib.c **** 
 1252              		.loc 1 188 0
 1253 0012 0190     		str	r0, [sp, #4]
 1254              	.LVL87:
 202:Generated_Source\PSoC4/CyLib.c ****                     {
 1255              		.loc 1 202 0
 1256 0014 3F20     		movs	r0, #63
 1257 0016 2949     		ldr	r1, .L106
 1258 0018 294C     		ldr	r4, .L106+4
 1259              	.LVL88:
 1260              	.L98:
 1261 001a 0A68     		ldr	r2, [r1]
 1262 001c 1D5D     		ldrb	r5, [r3, r4]
 1263 001e 0240     		ands	r2, r0
 1264 0020 AA42     		cmp	r2, r5
 1265 0022 01D1     		bne	.L96
 204:Generated_Source\PSoC4/CyLib.c ****                         break;
 1266              		.loc 1 204 0
 1267 0024 0333     		adds	r3, r3, #3
 1268              	.LVL89:
 1269 0026 03E0     		b	.L97
 1270              	.LVL90:
 1271              	.L96:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1272              		.loc 1 200 0
 1273 0028 0133     		adds	r3, r3, #1
 1274              	.LVL91:
 1275 002a 2E2B     		cmp	r3, #46
 1276 002c F5D1     		bne	.L98
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 80


 199:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1277              		.loc 1 199 0
 1278 002e 2B3B     		subs	r3, r3, #43
 1279              	.LVL92:
 1280              	.L97:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1281              		.loc 1 222 0
 1282 0030 0021     		movs	r1, #0
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1283              		.loc 1 226 0
 1284 0032 1F20     		movs	r0, #31
 222:Generated_Source\PSoC4/CyLib.c **** 
 1285              		.loc 1 222 0
 1286 0034 234A     		ldr	r2, .L106+8
 1287 0036 1160     		str	r1, [r2]
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1288              		.loc 1 226 0
 1289 0038 2349     		ldr	r1, .L106+12
 1290 003a 0A68     		ldr	r2, [r1]
 1291 003c 0242     		tst	r2, r0
 1292 003e 04D1     		bne	.L99
 228:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1293              		.loc 1 228 0
 1294 0040 0A68     		ldr	r2, [r1]
 1295 0042 8243     		bics	r2, r0
 1296 0044 1338     		subs	r0, r0, #19
 1297 0046 0243     		orrs	r2, r0
 1298 0048 0A60     		str	r2, [r1]
 1299              	.L99:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1300              		.loc 1 233 0
 1301 004a 204C     		ldr	r4, .L106+16
 1302 004c 204A     		ldr	r2, .L106+20
 1303 004e 2168     		ldr	r1, [r4]
 1304              	.LVL93:
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1305              		.loc 1 246 0
 1306 0050 204E     		ldr	r6, .L106+24
 1307 0052 1140     		ands	r1, r2
 1308              	.LVL94:
 1309 0054 A022     		movs	r2, #160
 1310 0056 5203     		lsls	r2, r2, #13
 1311 0058 1143     		orrs	r1, r2
 1312              	.LVL95:
 242:Generated_Source\PSoC4/CyLib.c **** 
 1313              		.loc 1 242 0
 1314 005a 1F4A     		ldr	r2, .L106+28
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1315              		.loc 1 247 0
 1316 005c 3020     		movs	r0, #48
 242:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 242 0
 1318 005e 5343     		muls	r3, r2
 1319              	.LVL96:
 1320 0060 8022     		movs	r2, #128
 1321 0062 D201     		lsls	r2, r2, #7
 1322 0064 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 81


 1323 0066 DB0B     		lsrs	r3, r3, #15
 1324 0068 013B     		subs	r3, r3, #1
 1325 006a 0B43     		orrs	r3, r1
 1326              	.LVL97:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1327              		.loc 1 244 0
 1328 006c 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1329              		.loc 1 246 0
 1330 006e 3368     		ldr	r3, [r6]
 1331              	.LVL98:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1332              		.loc 1 183 0
 1333 0070 0025     		movs	r5, #0
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1334              		.loc 1 246 0
 1335 0072 0393     		str	r3, [sp, #12]
 1336              	.LVL99:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1337              		.loc 1 247 0
 1338 0074 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1339              	.LVL100:
 248:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 248 0
 1341 0078 8021     		movs	r1, #128
 1342 007a 184A     		ldr	r2, .L106+32
 1343 007c C905     		lsls	r1, r1, #23
 1344 007e 1368     		ldr	r3, [r2]
 1345 0080 0B43     		orrs	r3, r1
 1346 0082 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1347              		.loc 1 250 0
 1348 0084 2268     		ldr	r2, [r4]
 1349 0086 164B     		ldr	r3, .L106+36
 1350 0088 1A40     		ands	r2, r3
 1351 008a 1700     		movs	r7, r2
 1352              	.LVL101:
 1353              	.L100:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1354              		.loc 1 254 0
 1355 008c 0120     		movs	r0, #1
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1356              		.loc 1 255 0
 1357 008e 1035     		adds	r5, r5, #16
 1358              	.LVL102:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1359              		.loc 1 254 0
 1360 0090 FFF7FEFF 		bl	CyDelay
 1361              	.LVL103:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1362              		.loc 1 256 0
 1363 0094 AB05     		lsls	r3, r5, #22
 1364 0096 3B43     		orrs	r3, r7
 1365 0098 2360     		str	r3, [r4]
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1366              		.loc 1 252 0
 1367 009a F02D     		cmp	r5, #240
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 82


 1368 009c F6D1     		bne	.L100
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1369              		.loc 1 259 0
 1370 009e 0120     		movs	r0, #1
 1371 00a0 FFF7FEFF 		bl	CyDelay
 1372              	.LVL104:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1373              		.loc 1 260 0
 1374 00a4 FF23     		movs	r3, #255
 1375 00a6 094A     		ldr	r2, .L106+16
 1376 00a8 9B05     		lsls	r3, r3, #22
 1377 00aa 3B43     		orrs	r3, r7
 1378 00ac 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1379              		.loc 1 263 0
 1380 00ae 039B     		ldr	r3, [sp, #12]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1381              		.loc 1 265 0
 1382 00b0 0198     		ldr	r0, [sp, #4]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1383              		.loc 1 263 0
 1384 00b2 3360     		str	r3, [r6]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1385              		.loc 1 265 0
 1386 00b4 FFF7FEFF 		bl	CyExitCriticalSection
 1387              	.LVL105:
 1388              	.L94:
 1389              	.LBE47:
 1390              	.LBE46:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1391              		.loc 1 267 0
 1392 00b8 05B0     		add	sp, sp, #20
 1393              		@ sp needed
 1394 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1395              	.L107:
 1396              		.align	2
 1397              	.L106:
 1398 00bc 2CFF0B40 		.word	1074528044
 1399 00c0 00000000 		.word	.LANCHOR0
 1400 00c4 28FF0B40 		.word	1074528040
 1401 00c8 34FF0B40 		.word	1074528052
 1402 00cc 08002240 		.word	1075970056
 1403 00d0 00F800C0 		.word	-1073678336
 1404 00d4 30001040 		.word	1074790448
 1405 00d8 40420F00 		.word	1000000
 1406 00dc 00002240 		.word	1075970048
 1407 00e0 FFFF3FC0 		.word	-1069547521
 1408              		.cfi_endproc
 1409              	.LFE3:
 1410              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1411              		.section	.text.CySysClkImoStart,"ax",%progbits
 1412              		.align	1
 1413              		.global	CySysClkImoStart
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CySysClkImoStart, %function
 1417              	CySysClkImoStart:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 83


 1418              	.LFB1:
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 1419              		.loc 1 106 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 107 0
 1424 0000 8021     		movs	r1, #128
 1425 0002 044A     		ldr	r2, .L109
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 1426              		.loc 1 106 0
 1427 0004 10B5     		push	{r4, lr}
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 4, -8
 1430              		.cfi_offset 14, -4
 107:Generated_Source\PSoC4/CyLib.c **** 
 1431              		.loc 1 107 0
 1432 0006 1368     		ldr	r3, [r2]
 1433 0008 0906     		lsls	r1, r1, #24
 1434 000a 0B43     		orrs	r3, r1
 1435 000c 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 1436              		.loc 1 111 0
 1437 000e FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1438              	.LVL106:
 122:Generated_Source\PSoC4/CyLib.c **** 
 1439              		.loc 1 122 0
 1440              		@ sp needed
 1441 0012 10BD     		pop	{r4, pc}
 1442              	.L110:
 1443              		.align	2
 1444              	.L109:
 1445 0014 08010B40 		.word	1074462984
 1446              		.cfi_endproc
 1447              	.LFE1:
 1448              		.size	CySysClkImoStart, .-CySysClkImoStart
 1449              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1450              		.align	1
 1451              		.global	CySysClkWriteImoFreq
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	CySysClkWriteImoFreq, %function
 1455              	CySysClkWriteImoFreq:
 1456              	.LFB10:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1457              		.loc 1 818 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 24
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461              	.LVL107:
 1462 0000 30B5     		push	{r4, r5, lr}
 1463              		.cfi_def_cfa_offset 12
 1464              		.cfi_offset 4, -12
 1465              		.cfi_offset 5, -8
 1466              		.cfi_offset 14, -4
 1467 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 84


 1468              		.cfi_def_cfa_offset 40
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1469              		.loc 1 818 0
 1470 0004 0400     		movs	r4, r0
 840:Generated_Source\PSoC4/CyLib.c **** 
 1471              		.loc 1 840 0
 1472 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1473              	.LVL108:
 1474 000a 0500     		movs	r5, r0
 1475              	.LVL109:
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1476              		.loc 1 843 0
 1477 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1478              	.LVL110:
 830:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1479              		.loc 1 830 0
 1480 0010 0022     		movs	r2, #0
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1481              		.loc 1 843 0
 1482 0012 9042     		cmp	r0, r2
 1483 0014 02D0     		beq	.L112
 1484              	.LVL111:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 1485              		.loc 1 846 0
 1486 0016 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1487              	.LVL112:
 845:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1488              		.loc 1 845 0
 1489 001a 0122     		movs	r2, #1
 1490              	.LVL113:
 1491              	.L112:
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1492              		.loc 1 874 0
 1493 001c 104B     		ldr	r3, .L116
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1494              		.loc 1 885 0
 1495 001e 1148     		ldr	r0, .L116+4
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1496              		.loc 1 874 0
 1497 0020 1968     		ldr	r1, [r3]
 1498 0022 02AB     		add	r3, sp, #8
 1499 0024 0291     		str	r1, [sp, #8]
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1500              		.loc 1 875 0
 1501 0026 1049     		ldr	r1, .L116+8
 1502 0028 0968     		ldr	r1, [r1]
 1503 002a 0391     		str	r1, [sp, #12]
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1504              		.loc 1 876 0
 1505 002c 0F49     		ldr	r1, .L116+12
 1506 002e 0C19     		adds	r4, r1, r4
 1507              	.LVL114:
 1508 0030 033C     		subs	r4, r4, #3
 1509 0032 2178     		ldrb	r1, [r4]
 1510 0034 0491     		str	r1, [sp, #16]
 877:Generated_Source\PSoC4/CyLib.c **** 
 1511              		.loc 1 877 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 85


 1512 0036 0E49     		ldr	r1, .L116+16
 1513 0038 0968     		ldr	r1, [r1]
 1514 003a 0591     		str	r1, [sp, #20]
 879:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1515              		.loc 1 879 0
 1516 003c 0D49     		ldr	r1, .L116+20
 1517 003e 0091     		str	r1, [sp]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1518              		.loc 1 884 0
 1519 0040 6946     		mov	r1, sp
 882:Generated_Source\PSoC4/CyLib.c **** 
 1520              		.loc 1 882 0
 1521 0042 0193     		str	r3, [sp, #4]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1522              		.loc 1 884 0
 1523 0044 0C4B     		ldr	r3, .L116+24
 1524 0046 1960     		str	r1, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1525              		.loc 1 885 0
 1526 0048 0C49     		ldr	r1, .L116+28
 1527 004a 0860     		str	r0, [r1]
 886:Generated_Source\PSoC4/CyLib.c **** 
 1528              		.loc 1 886 0
 1529 004c 1B68     		ldr	r3, [r3]
 984:Generated_Source\PSoC4/CyLib.c ****             {
 1530              		.loc 1 984 0
 1531 004e 012A     		cmp	r2, #1
 1532 0050 01D1     		bne	.L113
 986:Generated_Source\PSoC4/CyLib.c ****             }
 1533              		.loc 1 986 0
 1534 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1535              	.LVL115:
 1536              	.L113:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1537              		.loc 1 997 0
 1538 0056 2800     		movs	r0, r5
 1539 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1540              	.LVL116:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1541              		.loc 1 998 0
 1542 005c 07B0     		add	sp, sp, #28
 1543              		@ sp needed
 1544              	.LVL117:
 1545 005e 30BD     		pop	{r4, r5, pc}
 1546              	.L117:
 1547              		.align	2
 1548              	.L116:
 1549 0060 08010B40 		.word	1074462984
 1550 0064 17000080 		.word	-2147483625
 1551 0068 00010B40 		.word	1074462976
 1552 006c 00000000 		.word	.LANCHOR0
 1553 0070 30001040 		.word	1074790448
 1554 0074 B6EA0000 		.word	60086
 1555 0078 08001040 		.word	1074790408
 1556 007c 04001040 		.word	1074790404
 1557              		.cfi_endproc
 1558              	.LFE10:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 86


 1559              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1560              		.section	.text.CyDelayUs,"ax",%progbits
 1561              		.align	1
 1562              		.global	CyDelayUs
 1563              		.code	16
 1564              		.thumb_func
 1565              		.type	CyDelayUs, %function
 1566              	CyDelayUs:
 1567              	.LFB32:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1568              		.loc 1 3127 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 0
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 1572              	.LVL118:
 1573 0000 10B5     		push	{r4, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 4, -8
 1576              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1577              		.loc 1 3128 0
 1578 0002 034B     		ldr	r3, .L119
3129:Generated_Source\PSoC4/CyLib.c **** }
 1579              		.loc 1 3129 0
 1580              		@ sp needed
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1581              		.loc 1 3128 0
 1582 0004 1B7B     		ldrb	r3, [r3, #12]
 1583 0006 5843     		muls	r0, r3
 1584              	.LVL119:
 1585 0008 FFF7FEFF 		bl	CyDelayCycles
 1586              	.LVL120:
 1587              		.loc 1 3129 0
 1588 000c 10BD     		pop	{r4, pc}
 1589              	.L120:
 1590 000e C046     		.align	2
 1591              	.L119:
 1592 0010 00000000 		.word	.LANCHOR1
 1593              		.cfi_endproc
 1594              	.LFE32:
 1595              		.size	CyDelayUs, .-CyDelayUs
 1596              		.section	.text.CySysLvdEnable,"ax",%progbits
 1597              		.align	1
 1598              		.global	CySysLvdEnable
 1599              		.code	16
 1600              		.thumb_func
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 87


 1601              		.type	CySysLvdEnable, %function
 1602              	CySysLvdEnable:
 1603              	.LFB11:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1604              		.loc 1 2663 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              	.LVL121:
 1609 0000 70B5     		push	{r4, r5, r6, lr}
 1610              		.cfi_def_cfa_offset 16
 1611              		.cfi_offset 4, -16
 1612              		.cfi_offset 5, -12
 1613              		.cfi_offset 6, -8
 1614              		.cfi_offset 14, -4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1615              		.loc 1 2665 0
 1616 0002 0225     		movs	r5, #2
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1617              		.loc 1 2668 0
 1618 0004 1E21     		movs	r1, #30
2665:Generated_Source\PSoC4/CyLib.c **** 
 1619              		.loc 1 2665 0
 1620 0006 0C4C     		ldr	r4, .L122
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1621              		.loc 1 2668 0
 1622 0008 0C4A     		ldr	r2, .L122+4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1623              		.loc 1 2665 0
 1624 000a 2368     		ldr	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1625              		.loc 1 2668 0
 1626 000c 4000     		lsls	r0, r0, #1
 1627              	.LVL122:
2665:Generated_Source\PSoC4/CyLib.c **** 
 1628              		.loc 1 2665 0
 1629 000e AB43     		bics	r3, r5
 1630 0010 2360     		str	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1631              		.loc 1 2668 0
 1632 0012 1368     		ldr	r3, [r2]
 1633 0014 0840     		ands	r0, r1
 1634 0016 8B43     		bics	r3, r1
 1635 0018 1843     		orrs	r0, r3
 1636 001a 1060     		str	r0, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 2675 0
 1638 001c FA20     		movs	r0, #250
2672:Generated_Source\PSoC4/CyLib.c **** 
 1639              		.loc 1 2672 0
 1640 001e 1368     		ldr	r3, [r2]
 1641 0020 1D39     		subs	r1, r1, #29
 1642 0022 0B43     		orrs	r3, r1
 1643 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1644              		.loc 1 2675 0
 1645 0026 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 88


 1646 0028 FFF7FEFF 		bl	CyDelayUs
 1647              	.LVL123:
 1648              	.LBB48:
 1649              	.LBB49:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1650              		.loc 1 2728 0
 1651 002c 044B     		ldr	r3, .L122+8
 1652              	.LBE49:
 1653              	.LBE48:
2682:Generated_Source\PSoC4/CyLib.c **** 
 1654              		.loc 1 2682 0
 1655              		@ sp needed
 1656              	.LBB51:
 1657              	.LBB50:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1658              		.loc 1 2728 0
 1659 002e 1D60     		str	r5, [r3]
 1660              	.LBE50:
 1661              	.LBE51:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1662              		.loc 1 2681 0
 1663 0030 2368     		ldr	r3, [r4]
 1664 0032 1D43     		orrs	r5, r3
 1665 0034 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1666              		.loc 1 2682 0
 1667 0036 70BD     		pop	{r4, r5, r6, pc}
 1668              	.L123:
 1669              		.align	2
 1670              	.L122:
 1671 0038 08000B40 		.word	1074462728
 1672 003c 18000B40 		.word	1074462744
 1673 0040 04000B40 		.word	1074462724
 1674              		.cfi_endproc
 1675              	.LFE11:
 1676              		.size	CySysLvdEnable, .-CySysLvdEnable
 1677              		.global	__aeabi_uidiv
 1678              		.section	.text.CyDelayFreq,"ax",%progbits
 1679              		.align	1
 1680              		.global	CyDelayFreq
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CyDelayFreq, %function
 1684              	CyDelayFreq:
 1685              	.LFB33:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 89


 1686              		.loc 1 3141 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              	.LVL124:
 1691 0000 70B5     		push	{r4, r5, r6, lr}
 1692              		.cfi_def_cfa_offset 16
 1693              		.cfi_offset 4, -16
 1694              		.cfi_offset 5, -12
 1695              		.cfi_offset 6, -8
 1696              		.cfi_offset 14, -4
 1697 0002 0C4C     		ldr	r4, .L127
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1698              		.loc 1 3142 0
 1699 0004 0028     		cmp	r0, #0
 1700 0006 01D0     		beq	.L125
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1701              		.loc 1 3144 0
 1702 0008 2061     		str	r0, [r4, #16]
 1703 000a 01E0     		b	.L126
 1704              	.L125:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1705              		.loc 1 3148 0
 1706 000c 0A4B     		ldr	r3, .L127+4
 1707 000e 2361     		str	r3, [r4, #16]
 1708              	.L126:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1709              		.loc 1 3151 0
 1710 0010 2569     		ldr	r5, [r4, #16]
 1711 0012 0A4B     		ldr	r3, .L127+8
 1712 0014 0A49     		ldr	r1, .L127+12
 1713 0016 E818     		adds	r0, r5, r3
 1714              	.LVL125:
 1715 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1716              	.LVL126:
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1717              		.loc 1 3152 0
 1718 001c FA21     		movs	r1, #250
 1719 001e 094B     		ldr	r3, .L127+16
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1720              		.loc 1 3151 0
 1721 0020 2073     		strb	r0, [r4, #12]
 1722              		.loc 1 3152 0
 1723 0022 8900     		lsls	r1, r1, #2
 1724 0024 E818     		adds	r0, r5, r3
 1725 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1726              	.LVL127:
 1727 002a A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1728              		.loc 1 3153 0
 1729 002c C003     		lsls	r0, r0, #15
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 90


 1730 002e 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1731              		.loc 1 3154 0
 1732              		@ sp needed
 1733 0030 70BD     		pop	{r4, r5, r6, pc}
 1734              	.L128:
 1735 0032 C046     		.align	2
 1736              	.L127:
 1737 0034 00000000 		.word	.LANCHOR1
 1738 0038 00366E01 		.word	24000000
 1739 003c 3F420F00 		.word	999999
 1740 0040 40420F00 		.word	1000000
 1741 0044 E7030000 		.word	999
 1742              		.cfi_endproc
 1743              	.LFE33:
 1744              		.size	CyDelayFreq, .-CyDelayFreq
 1745              		.section	.text.CySysTickInit,"ax",%progbits
 1746              		.align	1
 1747              		.global	CySysTickInit
 1748              		.code	16
 1749              		.thumb_func
 1750              		.type	CySysTickInit, %function
 1751              	CySysTickInit:
 1752              	.LFB35:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 91


3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
 1753              		.loc 1 3202 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757              	.LVL128:
 1758 0000 10B5     		push	{r4, lr}
 1759              		.cfi_def_cfa_offset 8
 1760              		.cfi_offset 4, -8
 1761              		.cfi_offset 14, -4
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1762              		.loc 1 3207 0
 1763 0002 0024     		movs	r4, #0
 1764              	.LBB62:
 1765              	.LBB63:
 1766              	.LBB64:
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 92


3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3251:Generated_Source\PSoC4/CyLib.c **** }
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3267:Generated_Source\PSoC4/CyLib.c **** }
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3283:Generated_Source\PSoC4/CyLib.c **** }
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 93


3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
3300:Generated_Source\PSoC4/CyLib.c **** }
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3316:Generated_Source\PSoC4/CyLib.c **** }
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3332:Generated_Source\PSoC4/CyLib.c **** }
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 94


3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1767              		.loc 1 3365 0
 1768 0004 0421     		movs	r1, #4
 1769              	.LBE64:
 1770              	.LBE63:
 1771              	.LBE62:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1772              		.loc 1 3207 0
 1773 0006 0C4B     		ldr	r3, .L130
 1774              	.LBB69:
 1775              	.LBB70:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1776              		.loc 1 2834 0
 1777 0008 0C4A     		ldr	r2, .L130+4
 1778              	.LBE70:
 1779              	.LBE69:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1780              		.loc 1 3207 0
 1781 000a 1C60     		str	r4, [r3]
 1782              	.LVL129:
 1783 000c 1C61     		str	r4, [r3, #16]
 1784 000e 5C60     		str	r4, [r3, #4]
 1785              	.LVL130:
 1786 0010 9C60     		str	r4, [r3, #8]
 1787              	.LVL131:
 1788 0012 DC60     		str	r4, [r3, #12]
 1789              	.LVL132:
 1790              	.LBB73:
 1791              	.LBB71:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1792              		.loc 1 2834 0
 1793 0014 0A4B     		ldr	r3, .L130+8
 1794              	.LVL133:
 1795              	.LBE71:
 1796              	.LBE73:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1797              		.loc 1 3218 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 95


 1798              		@ sp needed
 1799              	.LBB74:
 1800              	.LBB72:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1801              		.loc 1 2834 0
 1802 0016 1A60     		str	r2, [r3]
 1803              	.LVL134:
 1804              	.LBE72:
 1805              	.LBE74:
 1806              	.LBB75:
 1807              	.LBB67:
 1808              	.LBB65:
 1809              		.loc 1 3365 0
 1810 0018 0A4A     		ldr	r2, .L130+12
 1811 001a 1368     		ldr	r3, [r2]
 1812 001c 0B43     		orrs	r3, r1
 1813              	.LBE65:
 1814              	.LBE67:
 1815              	.LBE75:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1816              		.loc 1 3216 0
 1817 001e FA21     		movs	r1, #250
 1818              	.LBB76:
 1819              	.LBB68:
 1820              	.LBB66:
 1821              		.loc 1 3365 0
 1822 0020 1360     		str	r3, [r2]
 1823              	.LVL135:
 1824              	.LBE66:
 1825              	.LBE68:
 1826              	.LBE76:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1827              		.loc 1 3216 0
 1828 0022 094B     		ldr	r3, .L130+16
 1829 0024 8900     		lsls	r1, r1, #2
 1830 0026 1869     		ldr	r0, [r3, #16]
 1831 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1832              	.LVL136:
 1833              	.LBB77:
 1834              	.LBB78:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1835              		.loc 1 3299 0
 1836 002c 074B     		ldr	r3, .L130+20
 1837 002e 1860     		str	r0, [r3]
 1838              	.LVL137:
 1839              	.LBE78:
 1840              	.LBE77:
 1841              	.LBB79:
 1842              	.LBB80:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 96


3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3412:Generated_Source\PSoC4/CyLib.c **** }
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1843              		.loc 1 3424 0
 1844 0030 074B     		ldr	r3, .L130+24
 1845 0032 1C60     		str	r4, [r3]
 1846              	.LBE80:
 1847              	.LBE79:
3218:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 97


 1848              		.loc 1 3218 0
 1849 0034 10BD     		pop	{r4, pc}
 1850              	.L131:
 1851 0036 C046     		.align	2
 1852              	.L130:
 1853 0038 00000000 		.word	.LANCHOR2
 1854 003c 00000000 		.word	CySysTickServiceCallbacks
 1855 0040 3C000020 		.word	536870972
 1856 0044 10E000E0 		.word	-536813552
 1857 0048 00000000 		.word	.LANCHOR1
 1858 004c 14E000E0 		.word	-536813548
 1859 0050 18E000E0 		.word	-536813544
 1860              		.cfi_endproc
 1861              	.LFE35:
 1862              		.size	CySysTickInit, .-CySysTickInit
 1863              		.section	.text.CySysTickStop,"ax",%progbits
 1864              		.align	1
 1865              		.global	CySysTickStop
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	CySysTickStop, %function
 1869              	CySysTickStop:
 1870              	.LFB37:
3249:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1871              		.loc 1 3249 0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 0
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 1875              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c **** }
 1876              		.loc 1 3250 0
 1877 0000 0121     		movs	r1, #1
 1878 0002 024A     		ldr	r2, .L133
3251:Generated_Source\PSoC4/CyLib.c **** 
 1879              		.loc 1 3251 0
 1880              		@ sp needed
3250:Generated_Source\PSoC4/CyLib.c **** }
 1881              		.loc 1 3250 0
 1882 0004 1368     		ldr	r3, [r2]
 1883 0006 8B43     		bics	r3, r1
 1884 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** 
 1885              		.loc 1 3251 0
 1886 000a 7047     		bx	lr
 1887              	.L134:
 1888              		.align	2
 1889              	.L133:
 1890 000c 10E000E0 		.word	-536813552
 1891              		.cfi_endproc
 1892              	.LFE37:
 1893              		.size	CySysTickStop, .-CySysTickStop
 1894              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1895              		.align	1
 1896              		.global	CySysTickEnableInterrupt
 1897              		.code	16
 1898              		.thumb_func
 1899              		.type	CySysTickEnableInterrupt, %function
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 98


 1900              	CySysTickEnableInterrupt:
 1901              	.LFB38:
3265:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1902              		.loc 1 3265 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 3266 0
 1908 0000 0221     		movs	r1, #2
 1909 0002 024A     		ldr	r2, .L136
3267:Generated_Source\PSoC4/CyLib.c **** 
 1910              		.loc 1 3267 0
 1911              		@ sp needed
3266:Generated_Source\PSoC4/CyLib.c **** }
 1912              		.loc 1 3266 0
 1913 0004 1368     		ldr	r3, [r2]
 1914 0006 0B43     		orrs	r3, r1
 1915 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** 
 1916              		.loc 1 3267 0
 1917 000a 7047     		bx	lr
 1918              	.L137:
 1919              		.align	2
 1920              	.L136:
 1921 000c 10E000E0 		.word	-536813552
 1922              		.cfi_endproc
 1923              	.LFE38:
 1924              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1925              		.section	.text.CySysTickEnable,"ax",%progbits
 1926              		.align	1
 1927              		.global	CySysTickEnable
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	CySysTickEnable, %function
 1931              	CySysTickEnable:
 1932              	.LFB36:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1933              		.loc 1 3232 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937 0000 10B5     		push	{r4, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 4, -8
 1940              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1941              		.loc 1 3233 0
 1942 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1943              	.LVL138:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1944              		.loc 1 3234 0
 1945 0006 0121     		movs	r1, #1
 1946 0008 024A     		ldr	r2, .L139
3235:Generated_Source\PSoC4/CyLib.c **** 
 1947              		.loc 1 3235 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 99


 1948              		@ sp needed
3234:Generated_Source\PSoC4/CyLib.c **** }
 1949              		.loc 1 3234 0
 1950 000a 1368     		ldr	r3, [r2]
 1951 000c 0B43     		orrs	r3, r1
 1952 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1953              		.loc 1 3235 0
 1954 0010 10BD     		pop	{r4, pc}
 1955              	.L140:
 1956 0012 C046     		.align	2
 1957              	.L139:
 1958 0014 10E000E0 		.word	-536813552
 1959              		.cfi_endproc
 1960              	.LFE36:
 1961              		.size	CySysTickEnable, .-CySysTickEnable
 1962              		.section	.text.CySysTickStart,"ax",%progbits
 1963              		.align	1
 1964              		.global	CySysTickStart
 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysTickStart, %function
 1968              	CySysTickStart:
 1969              	.LFB34:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1970              		.loc 1 3173 0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 1974 0000 10B5     		push	{r4, lr}
 1975              		.cfi_def_cfa_offset 8
 1976              		.cfi_offset 4, -8
 1977              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1978              		.loc 1 3174 0
 1979 0002 054C     		ldr	r4, .L143
 1980 0004 6369     		ldr	r3, [r4, #20]
 1981 0006 002B     		cmp	r3, #0
 1982 0008 03D1     		bne	.L142
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1983              		.loc 1 3176 0
 1984 000a FFF7FEFF 		bl	CySysTickInit
 1985              	.LVL139:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1986              		.loc 1 3177 0
 1987 000e 0123     		movs	r3, #1
 1988 0010 6361     		str	r3, [r4, #20]
 1989              	.L142:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1990              		.loc 1 3180 0
 1991 0012 FFF7FEFF 		bl	CySysTickEnable
 1992              	.LVL140:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1993              		.loc 1 3181 0
 1994              		@ sp needed
 1995 0016 10BD     		pop	{r4, pc}
 1996              	.L144:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 100


 1997              		.align	2
 1998              	.L143:
 1999 0018 00000000 		.word	.LANCHOR2
 2000              		.cfi_endproc
 2001              	.LFE34:
 2002              		.size	CySysTickStart, .-CySysTickStart
 2003              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2004              		.align	1
 2005              		.global	CySysTickDisableInterrupt
 2006              		.code	16
 2007              		.thumb_func
 2008              		.type	CySysTickDisableInterrupt, %function
 2009              	CySysTickDisableInterrupt:
 2010              	.LFB39:
3281:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2011              		.loc 1 3281 0
 2012              		.cfi_startproc
 2013              		@ args = 0, pretend = 0, frame = 0
 2014              		@ frame_needed = 0, uses_anonymous_args = 0
 2015              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c **** }
 2016              		.loc 1 3282 0
 2017 0000 0221     		movs	r1, #2
 2018 0002 024A     		ldr	r2, .L146
3283:Generated_Source\PSoC4/CyLib.c **** 
 2019              		.loc 1 3283 0
 2020              		@ sp needed
3282:Generated_Source\PSoC4/CyLib.c **** }
 2021              		.loc 1 3282 0
 2022 0004 1368     		ldr	r3, [r2]
 2023 0006 8B43     		bics	r3, r1
 2024 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** 
 2025              		.loc 1 3283 0
 2026 000a 7047     		bx	lr
 2027              	.L147:
 2028              		.align	2
 2029              	.L146:
 2030 000c 10E000E0 		.word	-536813552
 2031              		.cfi_endproc
 2032              	.LFE39:
 2033              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2034              		.section	.text.CySysTickSetReload,"ax",%progbits
 2035              		.align	1
 2036              		.global	CySysTickSetReload
 2037              		.code	16
 2038              		.thumb_func
 2039              		.type	CySysTickSetReload, %function
 2040              	CySysTickSetReload:
 2041              	.LFB40:
3298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2042              		.loc 1 3298 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
 2047              	.LVL141:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 101


3299:Generated_Source\PSoC4/CyLib.c **** }
 2048              		.loc 1 3299 0
 2049 0000 024B     		ldr	r3, .L149
 2050 0002 0002     		lsls	r0, r0, #8
 2051              	.LVL142:
 2052 0004 000A     		lsrs	r0, r0, #8
 2053 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** 
 2054              		.loc 1 3300 0
 2055              		@ sp needed
 2056 0008 7047     		bx	lr
 2057              	.L150:
 2058 000a C046     		.align	2
 2059              	.L149:
 2060 000c 14E000E0 		.word	-536813548
 2061              		.cfi_endproc
 2062              	.LFE40:
 2063              		.size	CySysTickSetReload, .-CySysTickSetReload
 2064              		.section	.text.CySysTickGetReload,"ax",%progbits
 2065              		.align	1
 2066              		.global	CySysTickGetReload
 2067              		.code	16
 2068              		.thumb_func
 2069              		.type	CySysTickGetReload, %function
 2070              	CySysTickGetReload:
 2071              	.LFB41:
3314:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2072              		.loc 1 3314 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 0, uses_anonymous_args = 0
 2076              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c **** }
 2077              		.loc 1 3315 0
 2078 0000 024B     		ldr	r3, .L152
3316:Generated_Source\PSoC4/CyLib.c **** 
 2079              		.loc 1 3316 0
 2080              		@ sp needed
3315:Generated_Source\PSoC4/CyLib.c **** }
 2081              		.loc 1 3315 0
 2082 0002 1868     		ldr	r0, [r3]
 2083 0004 0002     		lsls	r0, r0, #8
 2084 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** 
 2085              		.loc 1 3316 0
 2086 0008 7047     		bx	lr
 2087              	.L153:
 2088 000a C046     		.align	2
 2089              	.L152:
 2090 000c 14E000E0 		.word	-536813548
 2091              		.cfi_endproc
 2092              	.LFE41:
 2093              		.size	CySysTickGetReload, .-CySysTickGetReload
 2094              		.section	.text.CySysTickGetValue,"ax",%progbits
 2095              		.align	1
 2096              		.global	CySysTickGetValue
 2097              		.code	16
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 102


 2098              		.thumb_func
 2099              		.type	CySysTickGetValue, %function
 2100              	CySysTickGetValue:
 2101              	.LFB42:
3330:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2102              		.loc 1 3330 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c **** }
 2107              		.loc 1 3331 0
 2108 0000 024B     		ldr	r3, .L155
3332:Generated_Source\PSoC4/CyLib.c **** 
 2109              		.loc 1 3332 0
 2110              		@ sp needed
3331:Generated_Source\PSoC4/CyLib.c **** }
 2111              		.loc 1 3331 0
 2112 0002 1868     		ldr	r0, [r3]
 2113 0004 0002     		lsls	r0, r0, #8
 2114 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** 
 2115              		.loc 1 3332 0
 2116 0008 7047     		bx	lr
 2117              	.L156:
 2118 000a C046     		.align	2
 2119              	.L155:
 2120 000c 18E000E0 		.word	-536813544
 2121              		.cfi_endproc
 2122              	.LFE42:
 2123              		.size	CySysTickGetValue, .-CySysTickGetValue
 2124              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2125              		.align	1
 2126              		.global	CySysTickSetClockSource
 2127              		.code	16
 2128              		.thumb_func
 2129              		.type	CySysTickSetClockSource, %function
 2130              	CySysTickSetClockSource:
 2131              	.LFB43:
3362:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2132              		.loc 1 3362 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL143:
 2138 0000 044B     		ldr	r3, .L161
 2139 0002 0421     		movs	r1, #4
 2140              	.LBB83:
 2141              	.LBB84:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2142              		.loc 1 3365 0
 2143 0004 1A68     		ldr	r2, [r3]
 2144              	.LBE84:
 2145              	.LBE83:
3363:Generated_Source\PSoC4/CyLib.c ****         {
 2146              		.loc 1 3363 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 103


 2147 0006 0128     		cmp	r0, #1
 2148 0008 01D1     		bne	.L158
 2149              	.LVL144:
 2150              	.LBB86:
 2151              	.LBB85:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2152              		.loc 1 3365 0
 2153 000a 0A43     		orrs	r2, r1
 2154 000c 00E0     		b	.L160
 2155              	.LVL145:
 2156              	.L158:
 2157              	.LBE85:
 2158              	.LBE86:
3369:Generated_Source\PSoC4/CyLib.c ****         }
 2159              		.loc 1 3369 0
 2160 000e 8A43     		bics	r2, r1
 2161              	.L160:
 2162 0010 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2163              		.loc 1 3371 0
 2164              		@ sp needed
 2165 0012 7047     		bx	lr
 2166              	.L162:
 2167              		.align	2
 2168              	.L161:
 2169 0014 10E000E0 		.word	-536813552
 2170              		.cfi_endproc
 2171              	.LFE43:
 2172              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2173              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2174              		.align	1
 2175              		.global	CySysTickGetClockSource
 2176              		.code	16
 2177              		.thumb_func
 2178              		.type	CySysTickGetClockSource, %function
 2179              	CySysTickGetClockSource:
 2180              	.LFB44:
3387:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2181              		.loc 1 3387 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 0, uses_anonymous_args = 0
 2185              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2186              		.loc 1 3388 0
 2187 0000 024B     		ldr	r3, .L164
3389:Generated_Source\PSoC4/CyLib.c **** 
 2188              		.loc 1 3389 0
 2189              		@ sp needed
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2190              		.loc 1 3388 0
 2191 0002 1868     		ldr	r0, [r3]
 2192 0004 4007     		lsls	r0, r0, #29
 2193 0006 C00F     		lsrs	r0, r0, #31
3389:Generated_Source\PSoC4/CyLib.c **** 
 2194              		.loc 1 3389 0
 2195 0008 7047     		bx	lr
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 104


 2196              	.L165:
 2197 000a C046     		.align	2
 2198              	.L164:
 2199 000c 10E000E0 		.word	-536813552
 2200              		.cfi_endproc
 2201              	.LFE44:
 2202              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2203              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2204              		.align	1
 2205              		.global	CySysTickGetCountFlag
 2206              		.code	16
 2207              		.thumb_func
 2208              		.type	CySysTickGetCountFlag, %function
 2209              	CySysTickGetCountFlag:
 2210              	.LFB45:
3410:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2211              		.loc 1 3410 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c **** }
 2216              		.loc 1 3411 0
 2217 0000 024B     		ldr	r3, .L167
3412:Generated_Source\PSoC4/CyLib.c **** 
 2218              		.loc 1 3412 0
 2219              		@ sp needed
3411:Generated_Source\PSoC4/CyLib.c **** }
 2220              		.loc 1 3411 0
 2221 0002 1868     		ldr	r0, [r3]
 2222 0004 C003     		lsls	r0, r0, #15
 2223 0006 C00F     		lsrs	r0, r0, #31
3412:Generated_Source\PSoC4/CyLib.c **** 
 2224              		.loc 1 3412 0
 2225 0008 7047     		bx	lr
 2226              	.L168:
 2227 000a C046     		.align	2
 2228              	.L167:
 2229 000c 10E000E0 		.word	-536813552
 2230              		.cfi_endproc
 2231              	.LFE45:
 2232              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2233              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2234              		.align	1
 2235              		.code	16
 2236              		.thumb_func
 2237              		.type	CySysTickServiceCallbacks, %function
 2238              	CySysTickServiceCallbacks:
 2239              	.LFB49:
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 105


3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 106


3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 2240              		.loc 1 3495 0
 2241              		.cfi_startproc
 2242              		@ args = 0, pretend = 0, frame = 0
 2243              		@ frame_needed = 0, uses_anonymous_args = 0
 2244 0000 10B5     		push	{r4, lr}
 2245              		.cfi_def_cfa_offset 8
 2246              		.cfi_offset 4, -8
 2247              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2248              		.loc 1 3499 0
 2249 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2250              	.LVL146:
 2251 0006 0128     		cmp	r0, #1
 2252 0008 08D1     		bne	.L169
 2253 000a 0024     		movs	r4, #0
 2254              	.L172:
 2255              	.LBB89:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2256              		.loc 1 3503 0
 2257 000c 044B     		ldr	r3, .L178
 2258 000e E358     		ldr	r3, [r4, r3]
 2259 0010 002B     		cmp	r3, #0
 2260 0012 00D0     		beq	.L171
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2261              		.loc 1 3505 0
 2262 0014 9847     		blx	r3
 2263              	.LVL147:
 2264              	.L171:
 2265 0016 0434     		adds	r4, r4, #4
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2266              		.loc 1 3501 0
 2267 0018 142C     		cmp	r4, #20
 2268 001a F7D1     		bne	.L172
 2269              	.L169:
 2270              	.LBE89:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2271              		.loc 1 3509 0
 2272              		@ sp needed
 2273 001c 10BD     		pop	{r4, pc}
 2274              	.L179:
 2275 001e C046     		.align	2
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 107


 2276              	.L178:
 2277 0020 00000000 		.word	.LANCHOR2
 2278              		.cfi_endproc
 2279              	.LFE49:
 2280              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2281              		.section	.text.CySysTickClear,"ax",%progbits
 2282              		.align	1
 2283              		.global	CySysTickClear
 2284              		.code	16
 2285              		.thumb_func
 2286              		.type	CySysTickClear, %function
 2287              	CySysTickClear:
 2288              	.LFB46:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2289              		.loc 1 3423 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2294              		.loc 1 3424 0
 2295 0000 0022     		movs	r2, #0
 2296 0002 014B     		ldr	r3, .L181
3425:Generated_Source\PSoC4/CyLib.c **** 
 2297              		.loc 1 3425 0
 2298              		@ sp needed
3424:Generated_Source\PSoC4/CyLib.c **** }
 2299              		.loc 1 3424 0
 2300 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2301              		.loc 1 3425 0
 2302 0006 7047     		bx	lr
 2303              	.L182:
 2304              		.align	2
 2305              	.L181:
 2306 0008 18E000E0 		.word	-536813544
 2307              		.cfi_endproc
 2308              	.LFE46:
 2309              		.size	CySysTickClear, .-CySysTickClear
 2310              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2311              		.align	1
 2312              		.global	CySysTickSetCallback
 2313              		.code	16
 2314              		.thumb_func
 2315              		.type	CySysTickSetCallback, %function
 2316              	CySysTickSetCallback:
 2317              	.LFB47:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2318              		.loc 1 3458 0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 0
 2321              		@ frame_needed = 0, uses_anonymous_args = 0
 2322              		@ link register save eliminated.
 2323              	.LVL148:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2324              		.loc 1 3461 0
 2325 0000 024A     		ldr	r2, .L184
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 108


 2326 0002 8300     		lsls	r3, r0, #2
 2327 0004 9858     		ldr	r0, [r3, r2]
 2328              	.LVL149:
3464:Generated_Source\PSoC4/CyLib.c **** 
 2329              		.loc 1 3464 0
 2330              		@ sp needed
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2331              		.loc 1 3462 0
 2332 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2333              		.loc 1 3464 0
 2334 0008 7047     		bx	lr
 2335              	.L185:
 2336 000a C046     		.align	2
 2337              	.L184:
 2338 000c 00000000 		.word	.LANCHOR2
 2339              		.cfi_endproc
 2340              	.LFE47:
 2341              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2342              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2343              		.align	1
 2344              		.global	CySysTickGetCallback
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	CySysTickGetCallback, %function
 2348              	CySysTickGetCallback:
 2349              	.LFB48:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2350              		.loc 1 3482 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 0, uses_anonymous_args = 0
 2354              		@ link register save eliminated.
 2355              	.LVL150:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2356              		.loc 1 3483 0
 2357 0000 014B     		ldr	r3, .L187
 2358 0002 8000     		lsls	r0, r0, #2
 2359              	.LVL151:
 2360 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2361              		.loc 1 3484 0
 2362              		@ sp needed
 2363 0006 7047     		bx	lr
 2364              	.L188:
 2365              		.align	2
 2366              	.L187:
 2367 0008 00000000 		.word	.LANCHOR2
 2368              		.cfi_endproc
 2369              	.LFE48:
 2370              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2371              		.section	.text.CyGetUniqueId,"ax",%progbits
 2372              		.align	1
 2373              		.global	CyGetUniqueId
 2374              		.code	16
 2375              		.thumb_func
 2376              		.type	CyGetUniqueId, %function
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 109


 2377              	CyGetUniqueId:
 2378              	.LFB50:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2379              		.loc 1 3527 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
 2384              	.LVL152:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2385              		.loc 1 3529 0
 2386 0000 144B     		ldr	r3, .L190
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2387              		.loc 1 3549 0
 2388              		@ sp needed
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2389              		.loc 1 3529 0
 2390 0002 1A78     		ldrb	r2, [r3]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2391              		.loc 1 3530 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 110


 2392 0004 144B     		ldr	r3, .L190+4
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2393              		.loc 1 3529 0
 2394 0006 D1B2     		uxtb	r1, r2
 2395 0008 0160     		str	r1, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2396              		.loc 1 3530 0
 2397 000a 1B78     		ldrb	r3, [r3]
 2398 000c 1B02     		lsls	r3, r3, #8
 2399 000e 0B43     		orrs	r3, r1
 2400 0010 1A00     		movs	r2, r3
 2401 0012 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2402              		.loc 1 3531 0
 2403 0014 114B     		ldr	r3, .L190+8
 2404 0016 1B78     		ldrb	r3, [r3]
 2405 0018 1B04     		lsls	r3, r3, #16
 2406 001a 1343     		orrs	r3, r2
3532:Generated_Source\PSoC4/CyLib.c **** 
 2407              		.loc 1 3532 0
 2408 001c 104A     		ldr	r2, .L190+12
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2409              		.loc 1 3531 0
 2410 001e 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c **** 
 2411              		.loc 1 3532 0
 2412 0020 1278     		ldrb	r2, [r2]
 2413 0022 1206     		lsls	r2, r2, #24
 2414 0024 1343     		orrs	r3, r2
 2415 0026 0360     		str	r3, [r0]
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2416              		.loc 1 3534 0
 2417 0028 0E4B     		ldr	r3, .L190+16
 2418 002a 1A78     		ldrb	r2, [r3]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2419              		.loc 1 3535 0
 2420 002c 0E4B     		ldr	r3, .L190+20
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2421              		.loc 1 3534 0
 2422 002e D1B2     		uxtb	r1, r2
 2423 0030 4160     		str	r1, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2424              		.loc 1 3535 0
 2425 0032 1B78     		ldrb	r3, [r3]
 2426 0034 1B02     		lsls	r3, r3, #8
 2427 0036 0B43     		orrs	r3, r1
 2428 0038 1A00     		movs	r2, r3
 2429 003a 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2430              		.loc 1 3536 0
 2431 003c 0B4B     		ldr	r3, .L190+24
 2432 003e 1B78     		ldrb	r3, [r3]
 2433 0040 1B04     		lsls	r3, r3, #16
 2434 0042 1343     		orrs	r3, r2
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2435              		.loc 1 3537 0
 2436 0044 0A4A     		ldr	r2, .L190+28
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 111


3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2437              		.loc 1 3536 0
 2438 0046 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2439              		.loc 1 3537 0
 2440 0048 1278     		ldrb	r2, [r2]
 2441 004a 1206     		lsls	r2, r2, #24
 2442 004c 1343     		orrs	r3, r2
 2443 004e 4360     		str	r3, [r0, #4]
 2444              		.loc 1 3549 0
 2445 0050 7047     		bx	lr
 2446              	.L191:
 2447 0052 C046     		.align	2
 2448              	.L190:
 2449 0054 78F1FF0F 		.word	268431736
 2450 0058 79F1FF0F 		.word	268431737
 2451 005c 7AF1FF0F 		.word	268431738
 2452 0060 7BF1FF0F 		.word	268431739
 2453 0064 7CF1FF0F 		.word	268431740
 2454 0068 7DF1FF0F 		.word	268431741
 2455 006c 7EF1FF0F 		.word	268431742
 2456 0070 7FF1FF0F 		.word	268431743
 2457              		.cfi_endproc
 2458              	.LFE50:
 2459              		.size	CyGetUniqueId, .-CyGetUniqueId
 2460              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2461              		.align	1
 2462              		.global	CySysSetRamAccessArbPriority
 2463              		.code	16
 2464              		.thumb_func
 2465              		.type	CySysSetRamAccessArbPriority, %function
 2466              	CySysSetRamAccessArbPriority:
 2467              	.LFB51:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2468              		.loc 1 3572 0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 112


 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 0
 2471              		@ frame_needed = 0, uses_anonymous_args = 0
 2472              		@ link register save eliminated.
 2473              	.LVL153:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2474              		.loc 1 3575 0
 2475 0000 0549     		ldr	r1, .L193
 2476 0002 064B     		ldr	r3, .L193+4
 2477 0004 0A68     		ldr	r2, [r1]
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2478              		.loc 1 3576 0
 2479 0006 4004     		lsls	r0, r0, #17
 2480              	.LVL154:
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2481              		.loc 1 3575 0
 2482 0008 1340     		ands	r3, r2
 2483              	.LVL155:
 2484              		.loc 1 3576 0
 2485 000a C022     		movs	r2, #192
 2486 000c D202     		lsls	r2, r2, #11
 2487 000e 1040     		ands	r0, r2
 2488 0010 1843     		orrs	r0, r3
 2489              	.LVL156:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2490              		.loc 1 3577 0
 2491 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 2492              		.loc 1 3578 0
 2493              		@ sp needed
 2494 0014 7047     		bx	lr
 2495              	.L194:
 2496 0016 C046     		.align	2
 2497              	.L193:
 2498 0018 38001040 		.word	1074790456
 2499 001c FFFFF9FF 		.word	-393217
 2500              		.cfi_endproc
 2501              	.LFE51:
 2502              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2503              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2504              		.align	1
 2505              		.global	CySysSetFlashAccessArbPriority
 2506              		.code	16
 2507              		.thumb_func
 2508              		.type	CySysSetFlashAccessArbPriority, %function
 2509              	CySysSetFlashAccessArbPriority:
 2510              	.LFB52:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 113


3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2511              		.loc 1 3600 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              		@ link register save eliminated.
 2516              	.LVL157:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2517              		.loc 1 3603 0
 2518 0000 0549     		ldr	r1, .L196
 2519 0002 064B     		ldr	r3, .L196+4
 2520 0004 0A68     		ldr	r2, [r1]
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2521              		.loc 1 3604 0
 2522 0006 4004     		lsls	r0, r0, #17
 2523              	.LVL158:
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2524              		.loc 1 3603 0
 2525 0008 1340     		ands	r3, r2
 2526              	.LVL159:
 2527              		.loc 1 3604 0
 2528 000a C022     		movs	r2, #192
 2529 000c D202     		lsls	r2, r2, #11
 2530 000e 1040     		ands	r0, r2
 2531 0010 1843     		orrs	r0, r3
 2532              	.LVL160:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2533              		.loc 1 3605 0
 2534 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2535              		.loc 1 3606 0
 2536              		@ sp needed
 2537 0014 7047     		bx	lr
 2538              	.L197:
 2539 0016 C046     		.align	2
 2540              	.L196:
 2541 0018 30001040 		.word	1074790448
 2542 001c FFFFF9FF 		.word	-393217
 2543              		.cfi_endproc
 2544              	.LFE52:
 2545              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2546              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 114


 2547              		.align	1
 2548              		.global	CySysSetDmacAccessArbPriority
 2549              		.code	16
 2550              		.thumb_func
 2551              		.type	CySysSetDmacAccessArbPriority, %function
 2552              	CySysSetDmacAccessArbPriority:
 2553              	.LFB53:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2554              		.loc 1 3628 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              		@ link register save eliminated.
 2559              	.LVL161:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2560              		.loc 1 3631 0
 2561 0000 0549     		ldr	r1, .L199
 2562 0002 064B     		ldr	r3, .L199+4
 2563 0004 0A68     		ldr	r2, [r1]
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2564              		.loc 1 3632 0
 2565 0006 4004     		lsls	r0, r0, #17
 2566              	.LVL162:
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2567              		.loc 1 3631 0
 2568 0008 1340     		ands	r3, r2
 2569              	.LVL163:
 2570              		.loc 1 3632 0
 2571 000a C022     		movs	r2, #192
 2572 000c D202     		lsls	r2, r2, #11
 2573 000e 1040     		ands	r0, r2
 2574 0010 1843     		orrs	r0, r3
 2575              	.LVL164:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 115


 2576              		.loc 1 3633 0
 2577 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2578              		.loc 1 3634 0
 2579              		@ sp needed
 2580 0014 7047     		bx	lr
 2581              	.L200:
 2582 0016 C046     		.align	2
 2583              	.L199:
 2584 0018 3C001040 		.word	1074790460
 2585 001c FFFFF9FF 		.word	-393217
 2586              		.cfi_endproc
 2587              	.LFE53:
 2588              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2589              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2590              		.align	1
 2591              		.global	CySysSetPeripheralAccessArbPriority
 2592              		.code	16
 2593              		.thumb_func
 2594              		.type	CySysSetPeripheralAccessArbPriority, %function
 2595              	CySysSetPeripheralAccessArbPriority:
 2596              	.LFB54:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2597              		.loc 1 3658 0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 0
 2600              		@ frame_needed = 0, uses_anonymous_args = 0
 2601              		@ link register save eliminated.
 2602              	.LVL165:
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2603              		.loc 1 3661 0
 2604 0000 0028     		cmp	r0, #0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 116


 2605 0002 01D1     		bne	.L202
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2606              		.loc 1 3663 0
 2607 0004 0A48     		ldr	r0, .L207
 2608              	.LVL166:
 2609 0006 06E0     		b	.L206
 2610              	.LVL167:
 2611              	.L202:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2612              		.loc 1 3668 0
 2613 0008 0128     		cmp	r0, #1
 2614 000a 01D1     		bne	.L204
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2615              		.loc 1 3670 0
 2616 000c 0948     		ldr	r0, .L207+4
 2617              	.LVL168:
 2618 000e 02E0     		b	.L206
 2619              	.LVL169:
 2620              	.L204:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2621              		.loc 1 3676 0
 2622 0010 0228     		cmp	r0, #2
 2623 0012 0AD1     		bne	.L205
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2624              		.loc 1 3678 0
 2625 0014 0848     		ldr	r0, .L207+8
 2626              	.LVL170:
 2627              	.L206:
 2628 0016 0268     		ldr	r2, [r0]
 2629 0018 084B     		ldr	r3, .L207+12
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2630              		.loc 1 3679 0
 2631 001a 4904     		lsls	r1, r1, #17
 2632              	.LVL171:
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2633              		.loc 1 3678 0
 2634 001c 1340     		ands	r3, r2
 2635              	.LVL172:
 2636              		.loc 1 3679 0
 2637 001e C022     		movs	r2, #192
 2638 0020 D202     		lsls	r2, r2, #11
 2639 0022 1140     		ands	r1, r2
 2640 0024 1943     		orrs	r1, r3
 2641              	.LVL173:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 117


 2642              		.loc 1 3680 0
 2643 0026 0160     		str	r1, [r0]
 2644 0028 00E0     		b	.L201
 2645              	.LVL174:
 2646              	.L205:
 2647              	.LBB90:
 2648              	.LBB91:
3069:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 2649              		.loc 1 3069 0
 2650              		.syntax divided
 2651              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 2652 002a 01BE     		    bkpt    1
 2653              	@ 0 "" 2
 2654              	.LVL175:
 2655              		.thumb
 2656              		.syntax unified
 2657              	.L201:
 2658              	.LBE91:
 2659              	.LBE90:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2660              		.loc 1 3687 0
 2661              		@ sp needed
 2662 002c 7047     		bx	lr
 2663              	.L208:
 2664 002e C046     		.align	2
 2665              	.L207:
 2666 0030 00011040 		.word	1074790656
 2667 0034 04011040 		.word	1074790660
 2668 0038 08011040 		.word	1074790664
 2669 003c FFFFF9FF 		.word	-393217
 2670              		.cfi_endproc
 2671              	.LFE54:
 2672              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2673              		.global	CySysClkPumpConfig
 2674              		.global	cyImoFreqMhz2Reg
 2675              		.global	CySysTickInitVar
 2676              		.global	cydelay32kMs
 2677              		.global	cydelayFreqMhz
 2678              		.global	cydelayFreqKhz
 2679              		.global	cydelayFreqHz
 2680              		.section	.rodata
 2681              		.set	.LANCHOR0,. + 0
 2682              		.type	cyImoFreqMhz2Reg, %object
 2683              		.size	cyImoFreqMhz2Reg, 46
 2684              	cyImoFreqMhz2Reg:
 2685 0000 03       		.byte	3
 2686 0001 04       		.byte	4
 2687 0002 05       		.byte	5
 2688 0003 06       		.byte	6
 2689 0004 07       		.byte	7
 2690 0005 08       		.byte	8
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 118


 2691 0006 09       		.byte	9
 2692 0007 0A       		.byte	10
 2693 0008 0B       		.byte	11
 2694 0009 0C       		.byte	12
 2695 000a 0E       		.byte	14
 2696 000b 0F       		.byte	15
 2697 000c 10       		.byte	16
 2698 000d 11       		.byte	17
 2699 000e 12       		.byte	18
 2700 000f 13       		.byte	19
 2701 0010 14       		.byte	20
 2702 0011 15       		.byte	21
 2703 0012 16       		.byte	22
 2704 0013 17       		.byte	23
 2705 0014 18       		.byte	24
 2706 0015 19       		.byte	25
 2707 0016 1B       		.byte	27
 2708 0017 1C       		.byte	28
 2709 0018 1D       		.byte	29
 2710 0019 1E       		.byte	30
 2711 001a 1F       		.byte	31
 2712 001b 20       		.byte	32
 2713 001c 21       		.byte	33
 2714 001d 22       		.byte	34
 2715 001e 23       		.byte	35
 2716 001f 25       		.byte	37
 2717 0020 26       		.byte	38
 2718 0021 27       		.byte	39
 2719 0022 28       		.byte	40
 2720 0023 29       		.byte	41
 2721 0024 2A       		.byte	42
 2722 0025 2B       		.byte	43
 2723 0026 2E       		.byte	46
 2724 0027 2F       		.byte	47
 2725 0028 30       		.byte	48
 2726 0029 31       		.byte	49
 2727 002a 32       		.byte	50
 2728 002b 33       		.byte	51
 2729 002c 34       		.byte	52
 2730 002d 35       		.byte	53
 2731              		.data
 2732              		.align	2
 2733              		.set	.LANCHOR1,. + 0
 2734              		.type	CySysClkPumpConfig, %object
 2735              		.size	CySysClkPumpConfig, 4
 2736              	CySysClkPumpConfig:
 2737 0000 01000000 		.word	1
 2738              		.type	cydelay32kMs, %object
 2739              		.size	cydelay32kMs, 4
 2740              	cydelay32kMs:
 2741 0004 0000E02E 		.word	786432000
 2742              		.type	cydelayFreqKhz, %object
 2743              		.size	cydelayFreqKhz, 4
 2744              	cydelayFreqKhz:
 2745 0008 C05D0000 		.word	24000
 2746              		.type	cydelayFreqMhz, %object
 2747              		.size	cydelayFreqMhz, 1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 119


 2748              	cydelayFreqMhz:
 2749 000c 18       		.byte	24
 2750 000d 000000   		.space	3
 2751              		.type	cydelayFreqHz, %object
 2752              		.size	cydelayFreqHz, 4
 2753              	cydelayFreqHz:
 2754 0010 00366E01 		.word	24000000
 2755              		.bss
 2756              		.align	2
 2757              		.set	.LANCHOR2,. + 0
 2758              		.type	CySysTickCallbacks, %object
 2759              		.size	CySysTickCallbacks, 20
 2760              	CySysTickCallbacks:
 2761 0000 00000000 		.space	20
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2762              		.type	CySysTickInitVar, %object
 2763              		.size	CySysTickInitVar, 4
 2764              	CySysTickInitVar:
 2765 0014 00000000 		.space	4
 2766              		.text
 2767              	.Letext0:
 2768              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2769              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2770              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2771              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2772              		.section	.debug_info,"",%progbits
 2773              	.Ldebug_info0:
 2774 0000 DD0E0000 		.4byte	0xedd
 2775 0004 0400     		.2byte	0x4
 2776 0006 00000000 		.4byte	.Ldebug_abbrev0
 2777 000a 04       		.byte	0x4
 2778 000b 01       		.uleb128 0x1
 2779 000c BA040000 		.4byte	.LASF119
 2780 0010 0C       		.byte	0xc
 2781 0011 CA070000 		.4byte	.LASF120
 2782 0015 67000000 		.4byte	.LASF121
 2783 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2784 001d 00000000 		.4byte	0
 2785 0021 00000000 		.4byte	.Ldebug_line0
 2786 0025 02       		.uleb128 0x2
 2787 0026 01       		.byte	0x1
 2788 0027 06       		.byte	0x6
 2789 0028 5A010000 		.4byte	.LASF0
 2790 002c 02       		.uleb128 0x2
 2791 002d 01       		.byte	0x1
 2792 002e 08       		.byte	0x8
 2793 002f 3A060000 		.4byte	.LASF1
 2794 0033 02       		.uleb128 0x2
 2795 0034 02       		.byte	0x2
 2796 0035 05       		.byte	0x5
 2797 0036 48060000 		.4byte	.LASF2
 2798 003a 02       		.uleb128 0x2
 2799 003b 02       		.byte	0x2
 2800 003c 07       		.byte	0x7
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 120


 2801 003d 7C030000 		.4byte	.LASF3
 2802 0041 02       		.uleb128 0x2
 2803 0042 04       		.byte	0x4
 2804 0043 05       		.byte	0x5
 2805 0044 BF010000 		.4byte	.LASF4
 2806 0048 02       		.uleb128 0x2
 2807 0049 04       		.byte	0x4
 2808 004a 07       		.byte	0x7
 2809 004b EF020000 		.4byte	.LASF5
 2810 004f 02       		.uleb128 0x2
 2811 0050 08       		.byte	0x8
 2812 0051 05       		.byte	0x5
 2813 0052 4C010000 		.4byte	.LASF6
 2814 0056 02       		.uleb128 0x2
 2815 0057 08       		.byte	0x8
 2816 0058 07       		.byte	0x7
 2817 0059 D6000000 		.4byte	.LASF7
 2818 005d 03       		.uleb128 0x3
 2819 005e 04       		.byte	0x4
 2820 005f 05       		.byte	0x5
 2821 0060 696E7400 		.ascii	"int\000"
 2822 0064 02       		.uleb128 0x2
 2823 0065 04       		.byte	0x4
 2824 0066 07       		.byte	0x7
 2825 0067 D3020000 		.4byte	.LASF8
 2826 006b 04       		.uleb128 0x4
 2827 006c F4010000 		.4byte	.LASF9
 2828 0070 02       		.byte	0x2
 2829 0071 FC01     		.2byte	0x1fc
 2830 0073 2C000000 		.4byte	0x2c
 2831 0077 04       		.uleb128 0x4
 2832 0078 0F000000 		.4byte	.LASF10
 2833 007c 02       		.byte	0x2
 2834 007d FD01     		.2byte	0x1fd
 2835 007f 3A000000 		.4byte	0x3a
 2836 0083 04       		.uleb128 0x4
 2837 0084 34020000 		.4byte	.LASF11
 2838 0088 02       		.byte	0x2
 2839 0089 FE01     		.2byte	0x1fe
 2840 008b 48000000 		.4byte	0x48
 2841 008f 02       		.uleb128 0x2
 2842 0090 04       		.byte	0x4
 2843 0091 04       		.byte	0x4
 2844 0092 A0050000 		.4byte	.LASF12
 2845 0096 02       		.uleb128 0x2
 2846 0097 08       		.byte	0x8
 2847 0098 04       		.byte	0x4
 2848 0099 10020000 		.4byte	.LASF13
 2849 009d 02       		.uleb128 0x2
 2850 009e 01       		.byte	0x1
 2851 009f 08       		.byte	0x8
 2852 00a0 8B060000 		.4byte	.LASF14
 2853 00a4 04       		.uleb128 0x4
 2854 00a5 07060000 		.4byte	.LASF15
 2855 00a9 02       		.byte	0x2
 2856 00aa A602     		.2byte	0x2a6
 2857 00ac B0000000 		.4byte	0xb0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 121


 2858 00b0 05       		.uleb128 0x5
 2859 00b1 6B000000 		.4byte	0x6b
 2860 00b5 04       		.uleb128 0x4
 2861 00b6 2D040000 		.4byte	.LASF16
 2862 00ba 02       		.byte	0x2
 2863 00bb A802     		.2byte	0x2a8
 2864 00bd C1000000 		.4byte	0xc1
 2865 00c1 05       		.uleb128 0x5
 2866 00c2 83000000 		.4byte	0x83
 2867 00c6 04       		.uleb128 0x4
 2868 00c7 90060000 		.4byte	.LASF17
 2869 00cb 02       		.byte	0x2
 2870 00cc B802     		.2byte	0x2b8
 2871 00ce D2000000 		.4byte	0xd2
 2872 00d2 06       		.uleb128 0x6
 2873 00d3 04       		.byte	0x4
 2874 00d4 D8000000 		.4byte	0xd8
 2875 00d8 07       		.uleb128 0x7
 2876 00d9 02       		.uleb128 0x2
 2877 00da 08       		.byte	0x8
 2878 00db 04       		.byte	0x4
 2879 00dc A6040000 		.4byte	.LASF18
 2880 00e0 02       		.uleb128 0x2
 2881 00e1 04       		.byte	0x4
 2882 00e2 07       		.byte	0x7
 2883 00e3 56040000 		.4byte	.LASF19
 2884 00e7 04       		.uleb128 0x4
 2885 00e8 CB050000 		.4byte	.LASF20
 2886 00ec 03       		.byte	0x3
 2887 00ed 0801     		.2byte	0x108
 2888 00ef D2000000 		.4byte	0xd2
 2889 00f3 08       		.uleb128 0x8
 2890 00f4 16060000 		.4byte	.LASF21
 2891 00f8 01       		.byte	0x1
 2892 00f9 F30B     		.2byte	0xbf3
 2893 00fb 01       		.byte	0x1
 2894 00fc 0D010000 		.4byte	0x10d
 2895 0100 09       		.uleb128 0x9
 2896 0101 84060000 		.4byte	.LASF29
 2897 0105 01       		.byte	0x1
 2898 0106 F30B     		.2byte	0xbf3
 2899 0108 6B000000 		.4byte	0x6b
 2900 010c 00       		.byte	0
 2901 010d 0A       		.uleb128 0xa
 2902 010e 58020000 		.4byte	.LASF22
 2903 0112 01       		.byte	0x1
 2904 0113 AE       		.byte	0xae
 2905 0114 01       		.byte	0x1
 2906 0115 5A010000 		.4byte	0x15a
 2907 0119 0B       		.uleb128 0xb
 2908 011a 6900     		.ascii	"i\000"
 2909 011c 01       		.byte	0x1
 2910 011d B1       		.byte	0xb1
 2911 011e 83000000 		.4byte	0x83
 2912 0122 0C       		.uleb128 0xc
 2913 0123 66010000 		.4byte	.LASF23
 2914 0127 01       		.byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 122


 2915 0128 B4       		.byte	0xb4
 2916 0129 83000000 		.4byte	0x83
 2917 012d 0C       		.uleb128 0xc
 2918 012e 77010000 		.4byte	.LASF24
 2919 0132 01       		.byte	0x1
 2920 0133 B5       		.byte	0xb5
 2921 0134 6B000000 		.4byte	0x6b
 2922 0138 0C       		.uleb128 0xc
 2923 0139 8F030000 		.4byte	.LASF25
 2924 013d 01       		.byte	0x1
 2925 013e B6       		.byte	0xb6
 2926 013f 83000000 		.4byte	0x83
 2927 0143 0C       		.uleb128 0xc
 2928 0144 86010000 		.4byte	.LASF26
 2929 0148 01       		.byte	0x1
 2930 0149 B7       		.byte	0xb7
 2931 014a 83000000 		.4byte	0x83
 2932 014e 0C       		.uleb128 0xc
 2933 014f F5060000 		.4byte	.LASF27
 2934 0153 01       		.byte	0x1
 2935 0154 B8       		.byte	0xb8
 2936 0155 C1000000 		.4byte	0xc1
 2937 0159 00       		.byte	0
 2938 015a 0D       		.uleb128 0xd
 2939 015b 1D020000 		.4byte	.LASF31
 2940 015f 01       		.byte	0x1
 2941 0160 A60A     		.2byte	0xaa6
 2942 0162 01       		.byte	0x1
 2943 0163 08       		.uleb128 0x8
 2944 0164 96030000 		.4byte	.LASF28
 2945 0168 01       		.byte	0x1
 2946 0169 210D     		.2byte	0xd21
 2947 016b 01       		.byte	0x1
 2948 016c 7D010000 		.4byte	0x17d
 2949 0170 09       		.uleb128 0x9
 2950 0171 A3020000 		.4byte	.LASF30
 2951 0175 01       		.byte	0x1
 2952 0176 210D     		.2byte	0xd21
 2953 0178 83000000 		.4byte	0x83
 2954 017c 00       		.byte	0
 2955 017d 0E       		.uleb128 0xe
 2956 017e 10080000 		.4byte	.LASF122
 2957 0182 01       		.byte	0x1
 2958 0183 A60D     		.2byte	0xda6
 2959 0185 01       		.byte	0x1
 2960 0186 95010000 		.4byte	0x195
 2961 018a 0F       		.uleb128 0xf
 2962 018b 6900     		.ascii	"i\000"
 2963 018d 01       		.byte	0x1
 2964 018e A80D     		.2byte	0xda8
 2965 0190 83000000 		.4byte	0x83
 2966 0194 00       		.byte	0
 2967 0195 0D       		.uleb128 0xd
 2968 0196 E0020000 		.4byte	.LASF32
 2969 019a 01       		.byte	0x1
 2970 019b 5E0D     		.2byte	0xd5e
 2971 019d 01       		.byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 123


 2972 019e 08       		.uleb128 0x8
 2973 019f FD070000 		.4byte	.LASF33
 2974 01a3 01       		.byte	0x1
 2975 01a4 E10C     		.2byte	0xce1
 2976 01a6 01       		.byte	0x1
 2977 01a7 B8010000 		.4byte	0x1b8
 2978 01ab 09       		.uleb128 0x9
 2979 01ac 9D020000 		.4byte	.LASF34
 2980 01b0 01       		.byte	0x1
 2981 01b1 E10C     		.2byte	0xce1
 2982 01b3 83000000 		.4byte	0x83
 2983 01b7 00       		.byte	0
 2984 01b8 10       		.uleb128 0x10
 2985 01b9 01040000 		.4byte	.LASF123
 2986 01bd 01       		.byte	0x1
 2987 01be 070B     		.2byte	0xb07
 2988 01c0 C6000000 		.4byte	0xc6
 2989 01c4 01       		.byte	0x1
 2990 01c5 FA010000 		.4byte	0x1fa
 2991 01c9 09       		.uleb128 0x9
 2992 01ca BD030000 		.4byte	.LASF35
 2993 01ce 01       		.byte	0x1
 2994 01cf 070B     		.2byte	0xb07
 2995 01d1 6B000000 		.4byte	0x6b
 2996 01d5 09       		.uleb128 0x9
 2997 01d6 B2040000 		.4byte	.LASF36
 2998 01da 01       		.byte	0x1
 2999 01db 070B     		.2byte	0xb07
 3000 01dd C6000000 		.4byte	0xc6
 3001 01e1 11       		.uleb128 0x11
 3002 01e2 4B000000 		.4byte	.LASF37
 3003 01e6 01       		.byte	0x1
 3004 01e7 090B     		.2byte	0xb09
 3005 01e9 C6000000 		.4byte	0xc6
 3006 01ed 11       		.uleb128 0x11
 3007 01ee 00000000 		.4byte	.LASF38
 3008 01f2 01       		.byte	0x1
 3009 01f3 0A0B     		.2byte	0xb0a
 3010 01f5 FA010000 		.4byte	0x1fa
 3011 01f9 00       		.byte	0
 3012 01fa 06       		.uleb128 0x6
 3013 01fb 04       		.byte	0x4
 3014 01fc C6000000 		.4byte	0xc6
 3015 0200 12       		.uleb128 0x12
 3016 0201 13040000 		.4byte	.LASF39
 3017 0205 01       		.byte	0x1
 3018 0206 1B01     		.2byte	0x11b
 3019 0208 00000000 		.4byte	.LFB4
 3020 020c 50000000 		.4byte	.LFE4-.LFB4
 3021 0210 01       		.uleb128 0x1
 3022 0211 9C       		.byte	0x9c
 3023 0212 35020000 		.4byte	0x235
 3024 0216 13       		.uleb128 0x13
 3025 0217 6900     		.ascii	"i\000"
 3026 0219 01       		.byte	0x1
 3027 021a 1E01     		.2byte	0x11e
 3028 021c 83000000 		.4byte	0x83
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 124


 3029 0220 00000000 		.4byte	.LLST0
 3030 0224 14       		.uleb128 0x14
 3031 0225 66010000 		.4byte	.LASF23
 3032 0229 01       		.byte	0x1
 3033 022a 2101     		.2byte	0x121
 3034 022c 83000000 		.4byte	0x83
 3035 0230 37000000 		.4byte	.LLST1
 3036 0234 00       		.byte	0
 3037 0235 15       		.uleb128 0x15
 3038 0236 1C030000 		.4byte	.LASF40
 3039 023a 01       		.byte	0x1
 3040 023b 8A       		.byte	0x8a
 3041 023c 00000000 		.4byte	.LFB2
 3042 0240 18000000 		.4byte	.LFE2-.LFB2
 3043 0244 01       		.uleb128 0x1
 3044 0245 9C       		.byte	0x9c
 3045 0246 54020000 		.4byte	0x254
 3046 024a 16       		.uleb128 0x16
 3047 024b 06000000 		.4byte	.LVL8
 3048 024f 00020000 		.4byte	0x200
 3049 0253 00       		.byte	0
 3050 0254 17       		.uleb128 0x17
 3051 0255 A1010000 		.4byte	.LASF49
 3052 0259 01       		.byte	0x1
 3053 025a 5301     		.2byte	0x153
 3054 025c 83000000 		.4byte	0x83
 3055 0260 00000000 		.4byte	.LFB5
 3056 0264 10000000 		.4byte	.LFE5-.LFB5
 3057 0268 01       		.uleb128 0x1
 3058 0269 9C       		.byte	0x9c
 3059 026a 12       		.uleb128 0x12
 3060 026b 1F000000 		.4byte	.LASF41
 3061 026f 01       		.byte	0x1
 3062 0270 4802     		.2byte	0x248
 3063 0272 00000000 		.4byte	.LFB6
 3064 0276 20000000 		.4byte	.LFE6-.LFB6
 3065 027a 01       		.uleb128 0x1
 3066 027b 9C       		.byte	0x9c
 3067 027c C3020000 		.4byte	0x2c3
 3068 0280 18       		.uleb128 0x18
 3069 0281 70060000 		.4byte	.LASF44
 3070 0285 01       		.byte	0x1
 3071 0286 4802     		.2byte	0x248
 3072 0288 83000000 		.4byte	0x83
 3073 028c 7E000000 		.4byte	.LLST2
 3074 0290 14       		.uleb128 0x14
 3075 0291 77010000 		.4byte	.LASF24
 3076 0295 01       		.byte	0x1
 3077 0296 4A02     		.2byte	0x24a
 3078 0298 6B000000 		.4byte	0x6b
 3079 029c AA000000 		.4byte	.LLST3
 3080 02a0 14       		.uleb128 0x14
 3081 02a1 F6070000 		.4byte	.LASF42
 3082 02a5 01       		.byte	0x1
 3083 02a6 4B02     		.2byte	0x24b
 3084 02a8 83000000 		.4byte	0x83
 3085 02ac BD000000 		.4byte	.LLST4
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 125


 3086 02b0 16       		.uleb128 0x16
 3087 02b1 08000000 		.4byte	.LVL10
 3088 02b5 A90E0000 		.4byte	0xea9
 3089 02b9 16       		.uleb128 0x16
 3090 02ba 1A000000 		.4byte	.LVL13
 3091 02be B40E0000 		.4byte	0xeb4
 3092 02c2 00       		.byte	0
 3093 02c3 12       		.uleb128 0x12
 3094 02c4 DF010000 		.4byte	.LASF43
 3095 02c8 01       		.byte	0x1
 3096 02c9 9502     		.2byte	0x295
 3097 02cb 00000000 		.4byte	.LFB7
 3098 02cf 34000000 		.4byte	.LFE7-.LFB7
 3099 02d3 01       		.uleb128 0x1
 3100 02d4 9C       		.byte	0x9c
 3101 02d5 E8020000 		.4byte	0x2e8
 3102 02d9 19       		.uleb128 0x19
 3103 02da 09020000 		.4byte	.LASF45
 3104 02de 01       		.byte	0x1
 3105 02df 9502     		.2byte	0x295
 3106 02e1 83000000 		.4byte	0x83
 3107 02e5 01       		.uleb128 0x1
 3108 02e6 50       		.byte	0x50
 3109 02e7 00       		.byte	0
 3110 02e8 1A       		.uleb128 0x1a
 3111 02e9 40020000 		.4byte	.LASF51
 3112 02ed 01       		.byte	0x1
 3113 02ee BA02     		.2byte	0x2ba
 3114 02f0 83000000 		.4byte	0x83
 3115 02f4 00000000 		.4byte	.LFB8
 3116 02f8 18000000 		.4byte	.LFE8-.LFB8
 3117 02fc 01       		.uleb128 0x1
 3118 02fd 9C       		.byte	0x9c
 3119 02fe 35030000 		.4byte	0x335
 3120 0302 14       		.uleb128 0x14
 3121 0303 77010000 		.4byte	.LASF24
 3122 0307 01       		.byte	0x1
 3123 0308 BC02     		.2byte	0x2bc
 3124 030a 6B000000 		.4byte	0x6b
 3125 030e DB000000 		.4byte	.LLST5
 3126 0312 14       		.uleb128 0x14
 3127 0313 48050000 		.4byte	.LASF46
 3128 0317 01       		.byte	0x1
 3129 0318 BD02     		.2byte	0x2bd
 3130 031a 83000000 		.4byte	0x83
 3131 031e EE000000 		.4byte	.LLST6
 3132 0322 16       		.uleb128 0x16
 3133 0323 06000000 		.4byte	.LVL16
 3134 0327 A90E0000 		.4byte	0xea9
 3135 032b 16       		.uleb128 0x16
 3136 032c 0E000000 		.4byte	.LVL18
 3137 0330 B40E0000 		.4byte	0xeb4
 3138 0334 00       		.byte	0
 3139 0335 12       		.uleb128 0x12
 3140 0336 AD060000 		.4byte	.LASF47
 3141 033a 01       		.byte	0x1
 3142 033b F702     		.2byte	0x2f7
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 126


 3143 033d 00000000 		.4byte	.LFB9
 3144 0341 2C000000 		.4byte	.LFE9-.LFB9
 3145 0345 01       		.uleb128 0x1
 3146 0346 9C       		.byte	0x9c
 3147 0347 7E030000 		.4byte	0x37e
 3148 034b 18       		.uleb128 0x18
 3149 034c 99070000 		.4byte	.LASF48
 3150 0350 01       		.byte	0x1
 3151 0351 F702     		.2byte	0x2f7
 3152 0353 83000000 		.4byte	0x83
 3153 0357 10010000 		.4byte	.LLST7
 3154 035b 14       		.uleb128 0x14
 3155 035c 77010000 		.4byte	.LASF24
 3156 0360 01       		.byte	0x1
 3157 0361 F902     		.2byte	0x2f9
 3158 0363 6B000000 		.4byte	0x6b
 3159 0367 3C010000 		.4byte	.LLST8
 3160 036b 16       		.uleb128 0x16
 3161 036c 08000000 		.4byte	.LVL21
 3162 0370 A90E0000 		.4byte	0xea9
 3163 0374 16       		.uleb128 0x16
 3164 0375 22000000 		.4byte	.LVL23
 3165 0379 B40E0000 		.4byte	0xeb4
 3166 037d 00       		.byte	0
 3167 037e 1B       		.uleb128 0x1b
 3168 037f 3B070000 		.4byte	.LASF70
 3169 0383 01       		.byte	0x1
 3170 0384 840A     		.2byte	0xa84
 3171 0386 00000000 		.4byte	.LFB12
 3172 038a 20000000 		.4byte	.LFE12-.LFB12
 3173 038e 01       		.uleb128 0x1
 3174 038f 9C       		.byte	0x9c
 3175 0390 17       		.uleb128 0x17
 3176 0391 01030000 		.4byte	.LASF50
 3177 0395 01       		.byte	0x1
 3178 0396 960A     		.2byte	0xa96
 3179 0398 83000000 		.4byte	0x83
 3180 039c 00000000 		.4byte	.LFB13
 3181 03a0 10000000 		.4byte	.LFE13-.LFB13
 3182 03a4 01       		.uleb128 0x1
 3183 03a5 9C       		.byte	0x9c
 3184 03a6 1C       		.uleb128 0x1c
 3185 03a7 5A010000 		.4byte	0x15a
 3186 03ab 00000000 		.4byte	.LFB14
 3187 03af 0C000000 		.4byte	.LFE14-.LFB14
 3188 03b3 01       		.uleb128 0x1
 3189 03b4 9C       		.byte	0x9c
 3190 03b5 1A       		.uleb128 0x1a
 3191 03b6 68030000 		.4byte	.LASF52
 3192 03ba 01       		.byte	0x1
 3193 03bb C00A     		.2byte	0xac0
 3194 03bd 83000000 		.4byte	0x83
 3195 03c1 00000000 		.4byte	.LFB15
 3196 03c5 14000000 		.4byte	.LFE15-.LFB15
 3197 03c9 01       		.uleb128 0x1
 3198 03ca 9C       		.byte	0x9c
 3199 03cb F0030000 		.4byte	0x3f0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 127


 3200 03cf 18       		.uleb128 0x18
 3201 03d0 84060000 		.4byte	.LASF29
 3202 03d4 01       		.byte	0x1
 3203 03d5 C00A     		.2byte	0xac0
 3204 03d7 83000000 		.4byte	0x83
 3205 03db 4F010000 		.4byte	.LLST9
 3206 03df 14       		.uleb128 0x14
 3207 03e0 42040000 		.4byte	.LASF53
 3208 03e4 01       		.byte	0x1
 3209 03e5 C20A     		.2byte	0xac2
 3210 03e7 83000000 		.4byte	0x83
 3211 03eb 6D010000 		.4byte	.LLST10
 3212 03ef 00       		.byte	0
 3213 03f0 1A       		.uleb128 0x1a
 3214 03f1 59000000 		.4byte	.LASF54
 3215 03f5 01       		.byte	0x1
 3216 03f6 D70A     		.2byte	0xad7
 3217 03f8 83000000 		.4byte	0x83
 3218 03fc 00000000 		.4byte	.LFB16
 3219 0400 10000000 		.4byte	.LFE16-.LFB16
 3220 0404 01       		.uleb128 0x1
 3221 0405 9C       		.byte	0x9c
 3222 0406 19040000 		.4byte	0x419
 3223 040a 1D       		.uleb128 0x1d
 3224 040b 16000000 		.4byte	.LASF55
 3225 040f 01       		.byte	0x1
 3226 0410 D90A     		.2byte	0xad9
 3227 0412 83000000 		.4byte	0x83
 3228 0416 01       		.uleb128 0x1
 3229 0417 50       		.byte	0x50
 3230 0418 00       		.byte	0
 3231 0419 12       		.uleb128 0x12
 3232 041a F8000000 		.4byte	.LASF56
 3233 041e 01       		.byte	0x1
 3234 041f EE0A     		.2byte	0xaee
 3235 0421 00000000 		.4byte	.LFB17
 3236 0425 0C000000 		.4byte	.LFE17-.LFB17
 3237 0429 01       		.uleb128 0x1
 3238 042a 9C       		.byte	0x9c
 3239 042b 3E040000 		.4byte	0x43e
 3240 042f 19       		.uleb128 0x19
 3241 0430 3B020000 		.4byte	.LASF57
 3242 0434 01       		.byte	0x1
 3243 0435 EE0A     		.2byte	0xaee
 3244 0437 83000000 		.4byte	0x83
 3245 043b 01       		.uleb128 0x1
 3246 043c 50       		.byte	0x50
 3247 043d 00       		.byte	0
 3248 043e 1E       		.uleb128 0x1e
 3249 043f B8010000 		.4byte	0x1b8
 3250 0443 00000000 		.4byte	.LFB18
 3251 0447 14000000 		.4byte	.LFE18-.LFB18
 3252 044b 01       		.uleb128 0x1
 3253 044c 9C       		.byte	0x9c
 3254 044d 8C040000 		.4byte	0x48c
 3255 0451 1F       		.uleb128 0x1f
 3256 0452 C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 128


 3257 0456 8F010000 		.4byte	.LLST11
 3258 045a 20       		.uleb128 0x20
 3259 045b D5010000 		.4byte	0x1d5
 3260 045f 01       		.uleb128 0x1
 3261 0460 51       		.byte	0x51
 3262 0461 21       		.uleb128 0x21
 3263 0462 E1010000 		.4byte	0x1e1
 3264 0466 01       		.uleb128 0x1
 3265 0467 50       		.byte	0x50
 3266 0468 22       		.uleb128 0x22
 3267 0469 ED010000 		.4byte	0x1ed
 3268 046d 00000020 		.4byte	0x20000000
 3269 0471 23       		.uleb128 0x23
 3270 0472 F3000000 		.4byte	0xf3
 3271 0476 04000000 		.4byte	.LBB30
 3272 047a 02000000 		.4byte	.LBE30-.LBB30
 3273 047e 01       		.byte	0x1
 3274 047f 0C0B     		.2byte	0xb0c
 3275 0481 1F       		.uleb128 0x1f
 3276 0482 00010000 		.4byte	0x100
 3277 0486 B0010000 		.4byte	.LLST12
 3278 048a 00       		.byte	0
 3279 048b 00       		.byte	0
 3280 048c 1A       		.uleb128 0x1a
 3281 048d 5E060000 		.4byte	.LASF58
 3282 0491 01       		.byte	0x1
 3283 0492 290B     		.2byte	0xb29
 3284 0494 C6000000 		.4byte	0xc6
 3285 0498 00000000 		.4byte	.LFB19
 3286 049c 12000000 		.4byte	.LFE19-.LFB19
 3287 04a0 01       		.uleb128 0x1
 3288 04a1 9C       		.byte	0x9c
 3289 04a2 E1040000 		.4byte	0x4e1
 3290 04a6 18       		.uleb128 0x18
 3291 04a7 BD030000 		.4byte	.LASF35
 3292 04ab 01       		.byte	0x1
 3293 04ac 290B     		.2byte	0xb29
 3294 04ae 6B000000 		.4byte	0x6b
 3295 04b2 C4010000 		.4byte	.LLST13
 3296 04b6 24       		.uleb128 0x24
 3297 04b7 00000000 		.4byte	.LASF38
 3298 04bb 01       		.byte	0x1
 3299 04bc 2B0B     		.2byte	0xb2b
 3300 04be FA010000 		.4byte	0x1fa
 3301 04c2 00000020 		.4byte	0x20000000
 3302 04c6 23       		.uleb128 0x23
 3303 04c7 F3000000 		.4byte	0xf3
 3304 04cb 04000000 		.4byte	.LBB32
 3305 04cf 02000000 		.4byte	.LBE32-.LBB32
 3306 04d3 01       		.byte	0x1
 3307 04d4 2D0B     		.2byte	0xb2d
 3308 04d6 1F       		.uleb128 0x1f
 3309 04d7 00010000 		.4byte	0x100
 3310 04db E5010000 		.4byte	.LLST14
 3311 04df 00       		.byte	0
 3312 04e0 00       		.byte	0
 3313 04e1 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 129


 3314 04e2 AE030000 		.4byte	.LASF59
 3315 04e6 01       		.byte	0x1
 3316 04e7 3F0B     		.2byte	0xb3f
 3317 04e9 C6000000 		.4byte	0xc6
 3318 04ed 00000000 		.4byte	.LFB20
 3319 04f1 18000000 		.4byte	.LFE20-.LFB20
 3320 04f5 01       		.uleb128 0x1
 3321 04f6 9C       		.byte	0x9c
 3322 04f7 52050000 		.4byte	0x552
 3323 04fb 18       		.uleb128 0x18
 3324 04fc BD030000 		.4byte	.LASF35
 3325 0500 01       		.byte	0x1
 3326 0501 3F0B     		.2byte	0xb3f
 3327 0503 6B000000 		.4byte	0x6b
 3328 0507 F9010000 		.4byte	.LLST15
 3329 050b 19       		.uleb128 0x19
 3330 050c B2040000 		.4byte	.LASF36
 3331 0510 01       		.byte	0x1
 3332 0511 3F0B     		.2byte	0xb3f
 3333 0513 C6000000 		.4byte	0xc6
 3334 0517 01       		.uleb128 0x1
 3335 0518 51       		.byte	0x51
 3336 0519 1D       		.uleb128 0x1d
 3337 051a 4B000000 		.4byte	.LASF37
 3338 051e 01       		.byte	0x1
 3339 051f 410B     		.2byte	0xb41
 3340 0521 C6000000 		.4byte	0xc6
 3341 0525 01       		.uleb128 0x1
 3342 0526 50       		.byte	0x50
 3343 0527 24       		.uleb128 0x24
 3344 0528 00000000 		.4byte	.LASF38
 3345 052c 01       		.byte	0x1
 3346 052d 420B     		.2byte	0xb42
 3347 052f FA010000 		.4byte	0x1fa
 3348 0533 00000020 		.4byte	0x20000000
 3349 0537 23       		.uleb128 0x23
 3350 0538 F3000000 		.4byte	0xf3
 3351 053c 04000000 		.4byte	.LBB34
 3352 0540 02000000 		.4byte	.LBE34-.LBB34
 3353 0544 01       		.byte	0x1
 3354 0545 440B     		.2byte	0xb44
 3355 0547 1F       		.uleb128 0x1f
 3356 0548 00010000 		.4byte	0x100
 3357 054c 1A020000 		.4byte	.LLST16
 3358 0550 00       		.byte	0
 3359 0551 00       		.byte	0
 3360 0552 1A       		.uleb128 0x1a
 3361 0553 DD050000 		.4byte	.LASF60
 3362 0557 01       		.byte	0x1
 3363 0558 5B0B     		.2byte	0xb5b
 3364 055a C6000000 		.4byte	0xc6
 3365 055e 00000000 		.4byte	.LFB21
 3366 0562 14000000 		.4byte	.LFE21-.LFB21
 3367 0566 01       		.uleb128 0x1
 3368 0567 9C       		.byte	0x9c
 3369 0568 A7050000 		.4byte	0x5a7
 3370 056c 18       		.uleb128 0x18
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 130


 3371 056d BD030000 		.4byte	.LASF35
 3372 0571 01       		.byte	0x1
 3373 0572 5B0B     		.2byte	0xb5b
 3374 0574 6B000000 		.4byte	0x6b
 3375 0578 2E020000 		.4byte	.LLST17
 3376 057c 24       		.uleb128 0x24
 3377 057d 00000000 		.4byte	.LASF38
 3378 0581 01       		.byte	0x1
 3379 0582 5D0B     		.2byte	0xb5d
 3380 0584 FA010000 		.4byte	0x1fa
 3381 0588 00000020 		.4byte	0x20000000
 3382 058c 23       		.uleb128 0x23
 3383 058d F3000000 		.4byte	0xf3
 3384 0591 04000000 		.4byte	.LBB36
 3385 0595 02000000 		.4byte	.LBE36-.LBB36
 3386 0599 01       		.byte	0x1
 3387 059a 5F0B     		.2byte	0xb5f
 3388 059c 1F       		.uleb128 0x1f
 3389 059d 00010000 		.4byte	0x100
 3390 05a1 4F020000 		.4byte	.LLST18
 3391 05a5 00       		.byte	0
 3392 05a6 00       		.byte	0
 3393 05a7 12       		.uleb128 0x12
 3394 05a8 8F050000 		.4byte	.LASF61
 3395 05ac 01       		.byte	0x1
 3396 05ad 6E0B     		.2byte	0xb6e
 3397 05af 00000000 		.4byte	.LFB22
 3398 05b3 40000000 		.4byte	.LFE22-.LFB22
 3399 05b7 01       		.uleb128 0x1
 3400 05b8 9C       		.byte	0x9c
 3401 05b9 5C060000 		.4byte	0x65c
 3402 05bd 18       		.uleb128 0x18
 3403 05be BD030000 		.4byte	.LASF35
 3404 05c2 01       		.byte	0x1
 3405 05c3 6E0B     		.2byte	0xb6e
 3406 05c5 6B000000 		.4byte	0x6b
 3407 05c9 63020000 		.4byte	.LLST19
 3408 05cd 18       		.uleb128 0x18
 3409 05ce C4030000 		.4byte	.LASF62
 3410 05d2 01       		.byte	0x1
 3411 05d3 6E0B     		.2byte	0xb6e
 3412 05d5 6B000000 		.4byte	0x6b
 3413 05d9 84020000 		.4byte	.LLST20
 3414 05dd 14       		.uleb128 0x14
 3415 05de 77010000 		.4byte	.LASF24
 3416 05e2 01       		.byte	0x1
 3417 05e3 700B     		.2byte	0xb70
 3418 05e5 6B000000 		.4byte	0x6b
 3419 05e9 A5020000 		.4byte	.LLST21
 3420 05ed 14       		.uleb128 0x14
 3421 05ee 17020000 		.4byte	.LASF63
 3422 05f2 01       		.byte	0x1
 3423 05f3 710B     		.2byte	0xb71
 3424 05f5 83000000 		.4byte	0x83
 3425 05f9 B8020000 		.4byte	.LLST22
 3426 05fd 14       		.uleb128 0x14
 3427 05fe 9D020000 		.4byte	.LASF34
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 131


 3428 0602 01       		.byte	0x1
 3429 0603 720B     		.2byte	0xb72
 3430 0605 83000000 		.4byte	0x83
 3431 0609 CB020000 		.4byte	.LLST23
 3432 060d 25       		.uleb128 0x25
 3433 060e F3000000 		.4byte	0xf3
 3434 0612 0A000000 		.4byte	.LBB38
 3435 0616 02000000 		.4byte	.LBE38-.LBB38
 3436 061a 01       		.byte	0x1
 3437 061b 740B     		.2byte	0xb74
 3438 061d 2B060000 		.4byte	0x62b
 3439 0621 1F       		.uleb128 0x1f
 3440 0622 00010000 		.4byte	0x100
 3441 0626 E9020000 		.4byte	.LLST24
 3442 062a 00       		.byte	0
 3443 062b 25       		.uleb128 0x25
 3444 062c F3000000 		.4byte	0xf3
 3445 0630 10000000 		.4byte	.LBB40
 3446 0634 02000000 		.4byte	.LBE40-.LBB40
 3447 0638 01       		.byte	0x1
 3448 0639 750B     		.2byte	0xb75
 3449 063b 49060000 		.4byte	0x649
 3450 063f 1F       		.uleb128 0x1f
 3451 0640 00010000 		.4byte	0x100
 3452 0644 FD020000 		.4byte	.LLST25
 3453 0648 00       		.byte	0
 3454 0649 16       		.uleb128 0x16
 3455 064a 24000000 		.4byte	.LVL54
 3456 064e A90E0000 		.4byte	0xea9
 3457 0652 16       		.uleb128 0x16
 3458 0653 38000000 		.4byte	.LVL58
 3459 0657 B40E0000 		.4byte	0xeb4
 3460 065b 00       		.byte	0
 3461 065c 1A       		.uleb128 0x1a
 3462 065d 71020000 		.4byte	.LASF64
 3463 0661 01       		.byte	0x1
 3464 0662 900B     		.2byte	0xb90
 3465 0664 6B000000 		.4byte	0x6b
 3466 0668 00000000 		.4byte	.LFB23
 3467 066c 28000000 		.4byte	.LFE23-.LFB23
 3468 0670 01       		.uleb128 0x1
 3469 0671 9C       		.byte	0x9c
 3470 0672 B1060000 		.4byte	0x6b1
 3471 0676 18       		.uleb128 0x18
 3472 0677 BD030000 		.4byte	.LASF35
 3473 067b 01       		.byte	0x1
 3474 067c 900B     		.2byte	0xb90
 3475 067e 6B000000 		.4byte	0x6b
 3476 0682 11030000 		.4byte	.LLST26
 3477 0686 14       		.uleb128 0x14
 3478 0687 C4030000 		.4byte	.LASF62
 3479 068b 01       		.byte	0x1
 3480 068c 920B     		.2byte	0xb92
 3481 068e 6B000000 		.4byte	0x6b
 3482 0692 32030000 		.4byte	.LLST27
 3483 0696 23       		.uleb128 0x23
 3484 0697 F3000000 		.4byte	0xf3
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 132


 3485 069b 04000000 		.4byte	.LBB42
 3486 069f 02000000 		.4byte	.LBE42-.LBB42
 3487 06a3 01       		.byte	0x1
 3488 06a4 940B     		.2byte	0xb94
 3489 06a6 1F       		.uleb128 0x1f
 3490 06a7 00010000 		.4byte	0x100
 3491 06ab 53030000 		.4byte	.LLST28
 3492 06af 00       		.byte	0
 3493 06b0 00       		.byte	0
 3494 06b1 12       		.uleb128 0x12
 3495 06b2 52060000 		.4byte	.LASF65
 3496 06b6 01       		.byte	0x1
 3497 06b7 A50B     		.2byte	0xba5
 3498 06b9 00000000 		.4byte	.LFB24
 3499 06bd 14000000 		.4byte	.LFE24-.LFB24
 3500 06c1 01       		.uleb128 0x1
 3501 06c2 9C       		.byte	0x9c
 3502 06c3 D8060000 		.4byte	0x6d8
 3503 06c7 18       		.uleb128 0x18
 3504 06c8 BD030000 		.4byte	.LASF35
 3505 06cc 01       		.byte	0x1
 3506 06cd A50B     		.2byte	0xba5
 3507 06cf 6B000000 		.4byte	0x6b
 3508 06d3 67030000 		.4byte	.LLST29
 3509 06d7 00       		.byte	0
 3510 06d8 1A       		.uleb128 0x1a
 3511 06d9 3E010000 		.4byte	.LASF66
 3512 06dd 01       		.byte	0x1
 3513 06de B70B     		.2byte	0xbb7
 3514 06e0 6B000000 		.4byte	0x6b
 3515 06e4 00000000 		.4byte	.LFB25
 3516 06e8 18000000 		.4byte	.LFE25-.LFB25
 3517 06ec 01       		.uleb128 0x1
 3518 06ed 9C       		.byte	0x9c
 3519 06ee 03070000 		.4byte	0x703
 3520 06f2 18       		.uleb128 0x18
 3521 06f3 BD030000 		.4byte	.LASF35
 3522 06f7 01       		.byte	0x1
 3523 06f8 B70B     		.2byte	0xbb7
 3524 06fa 6B000000 		.4byte	0x6b
 3525 06fe 88030000 		.4byte	.LLST30
 3526 0702 00       		.byte	0
 3527 0703 12       		.uleb128 0x12
 3528 0704 C8010000 		.4byte	.LASF67
 3529 0708 01       		.byte	0x1
 3530 0709 C70B     		.2byte	0xbc7
 3531 070b 00000000 		.4byte	.LFB26
 3532 070f 14000000 		.4byte	.LFE26-.LFB26
 3533 0713 01       		.uleb128 0x1
 3534 0714 9C       		.byte	0x9c
 3535 0715 2A070000 		.4byte	0x72a
 3536 0719 18       		.uleb128 0x18
 3537 071a BD030000 		.4byte	.LASF35
 3538 071e 01       		.byte	0x1
 3539 071f C70B     		.2byte	0xbc7
 3540 0721 6B000000 		.4byte	0x6b
 3541 0725 A9030000 		.4byte	.LLST31
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 133


 3542 0729 00       		.byte	0
 3543 072a 12       		.uleb128 0x12
 3544 072b 43030000 		.4byte	.LASF68
 3545 072f 01       		.byte	0x1
 3546 0730 D50B     		.2byte	0xbd5
 3547 0732 00000000 		.4byte	.LFB27
 3548 0736 14000000 		.4byte	.LFE27-.LFB27
 3549 073a 01       		.uleb128 0x1
 3550 073b 9C       		.byte	0x9c
 3551 073c 51070000 		.4byte	0x751
 3552 0740 18       		.uleb128 0x18
 3553 0741 BD030000 		.4byte	.LASF35
 3554 0745 01       		.byte	0x1
 3555 0746 D50B     		.2byte	0xbd5
 3556 0748 6B000000 		.4byte	0x6b
 3557 074c CA030000 		.4byte	.LLST32
 3558 0750 00       		.byte	0
 3559 0751 12       		.uleb128 0x12
 3560 0752 94040000 		.4byte	.LASF69
 3561 0756 01       		.byte	0x1
 3562 0757 E40B     		.2byte	0xbe4
 3563 0759 00000000 		.4byte	.LFB28
 3564 075d 14000000 		.4byte	.LFE28-.LFB28
 3565 0761 01       		.uleb128 0x1
 3566 0762 9C       		.byte	0x9c
 3567 0763 78070000 		.4byte	0x778
 3568 0767 18       		.uleb128 0x18
 3569 0768 BD030000 		.4byte	.LASF35
 3570 076c 01       		.byte	0x1
 3571 076d E40B     		.2byte	0xbe4
 3572 076f 6B000000 		.4byte	0x6b
 3573 0773 EB030000 		.4byte	.LLST33
 3574 0777 00       		.byte	0
 3575 0778 1E       		.uleb128 0x1e
 3576 0779 F3000000 		.4byte	0xf3
 3577 077d 00000000 		.4byte	.LFB29
 3578 0781 04000000 		.4byte	.LFE29-.LFB29
 3579 0785 01       		.uleb128 0x1
 3580 0786 9C       		.byte	0x9c
 3581 0787 93070000 		.4byte	0x793
 3582 078b 20       		.uleb128 0x20
 3583 078c 00010000 		.4byte	0x100
 3584 0790 01       		.uleb128 0x1
 3585 0791 50       		.byte	0x50
 3586 0792 00       		.byte	0
 3587 0793 1B       		.uleb128 0x1b
 3588 0794 15010000 		.4byte	.LASF71
 3589 0798 01       		.byte	0x1
 3590 0799 0B0C     		.2byte	0xc0b
 3591 079b 00000000 		.4byte	.LFB30
 3592 079f 18000000 		.4byte	.LFE30-.LFB30
 3593 07a3 01       		.uleb128 0x1
 3594 07a4 9C       		.byte	0x9c
 3595 07a5 12       		.uleb128 0x12
 3596 07a6 01070000 		.4byte	.LASF72
 3597 07aa 01       		.byte	0x1
 3598 07ab 1F0C     		.2byte	0xc1f
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 134


 3599 07ad 00000000 		.4byte	.LFB31
 3600 07b1 2C000000 		.4byte	.LFE31-.LFB31
 3601 07b5 01       		.uleb128 0x1
 3602 07b6 9C       		.byte	0x9c
 3603 07b7 DE070000 		.4byte	0x7de
 3604 07bb 18       		.uleb128 0x18
 3605 07bc EC050000 		.4byte	.LASF73
 3606 07c0 01       		.byte	0x1
 3607 07c1 1F0C     		.2byte	0xc1f
 3608 07c3 83000000 		.4byte	0x83
 3609 07c7 0C040000 		.4byte	.LLST34
 3610 07cb 16       		.uleb128 0x16
 3611 07cc 14000000 		.4byte	.LVL80
 3612 07d0 BF0E0000 		.4byte	0xebf
 3613 07d4 16       		.uleb128 0x16
 3614 07d5 22000000 		.4byte	.LVL82
 3615 07d9 BF0E0000 		.4byte	0xebf
 3616 07dd 00       		.byte	0
 3617 07de 1E       		.uleb128 0x1e
 3618 07df 0D010000 		.4byte	0x10d
 3619 07e3 00000000 		.4byte	.LFB3
 3620 07e7 E4000000 		.4byte	.LFE3-.LFB3
 3621 07eb 01       		.uleb128 0x1
 3622 07ec 9C       		.byte	0x9c
 3623 07ed B2080000 		.4byte	0x8b2
 3624 07f1 26       		.uleb128 0x26
 3625 07f2 19010000 		.4byte	0x119
 3626 07f6 26       		.uleb128 0x26
 3627 07f7 22010000 		.4byte	0x122
 3628 07fb 26       		.uleb128 0x26
 3629 07fc 2D010000 		.4byte	0x12d
 3630 0800 26       		.uleb128 0x26
 3631 0801 38010000 		.4byte	0x138
 3632 0805 27       		.uleb128 0x27
 3633 0806 43010000 		.4byte	0x143
 3634 080a 00       		.byte	0
 3635 080b 26       		.uleb128 0x26
 3636 080c 4E010000 		.4byte	0x14e
 3637 0810 28       		.uleb128 0x28
 3638 0811 0C000000 		.4byte	.LBB47
 3639 0815 AC000000 		.4byte	.LBE47-.LBB47
 3640 0819 A8080000 		.4byte	0x8a8
 3641 081d 29       		.uleb128 0x29
 3642 081e 19010000 		.4byte	0x119
 3643 0822 2A040000 		.4byte	.LLST35
 3644 0826 29       		.uleb128 0x29
 3645 0827 22010000 		.4byte	0x122
 3646 082b 61040000 		.4byte	.LLST36
 3647 082f 29       		.uleb128 0x29
 3648 0830 2D010000 		.4byte	0x12d
 3649 0834 97040000 		.4byte	.LLST37
 3650 0838 29       		.uleb128 0x29
 3651 0839 38010000 		.4byte	0x138
 3652 083d AB040000 		.4byte	.LLST38
 3653 0841 29       		.uleb128 0x29
 3654 0842 43010000 		.4byte	0x143
 3655 0846 F4040000 		.4byte	.LLST39
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 135


 3656 084a 21       		.uleb128 0x21
 3657 084b 4E010000 		.4byte	0x14e
 3658 084f 02       		.uleb128 0x2
 3659 0850 91       		.byte	0x91
 3660 0851 64       		.sleb128 -28
 3661 0852 16       		.uleb128 0x16
 3662 0853 10000000 		.4byte	.LVL86
 3663 0857 A90E0000 		.4byte	0xea9
 3664 085b 2A       		.uleb128 0x2a
 3665 085c 78000000 		.4byte	.LVL100
 3666 0860 CA0E0000 		.4byte	0xeca
 3667 0864 6F080000 		.4byte	0x86f
 3668 0868 2B       		.uleb128 0x2b
 3669 0869 01       		.uleb128 0x1
 3670 086a 50       		.byte	0x50
 3671 086b 02       		.uleb128 0x2
 3672 086c 08       		.byte	0x8
 3673 086d 30       		.byte	0x30
 3674 086e 00       		.byte	0
 3675 086f 2A       		.uleb128 0x2a
 3676 0870 94000000 		.4byte	.LVL103
 3677 0874 A5070000 		.4byte	0x7a5
 3678 0878 82080000 		.4byte	0x882
 3679 087c 2B       		.uleb128 0x2b
 3680 087d 01       		.uleb128 0x1
 3681 087e 50       		.byte	0x50
 3682 087f 01       		.uleb128 0x1
 3683 0880 31       		.byte	0x31
 3684 0881 00       		.byte	0
 3685 0882 2A       		.uleb128 0x2a
 3686 0883 A4000000 		.4byte	.LVL104
 3687 0887 A5070000 		.4byte	0x7a5
 3688 088b 95080000 		.4byte	0x895
 3689 088f 2B       		.uleb128 0x2b
 3690 0890 01       		.uleb128 0x1
 3691 0891 50       		.byte	0x50
 3692 0892 01       		.uleb128 0x1
 3693 0893 31       		.byte	0x31
 3694 0894 00       		.byte	0
 3695 0895 2C       		.uleb128 0x2c
 3696 0896 B8000000 		.4byte	.LVL105
 3697 089a B40E0000 		.4byte	0xeb4
 3698 089e 2B       		.uleb128 0x2b
 3699 089f 01       		.uleb128 0x1
 3700 08a0 50       		.byte	0x50
 3701 08a1 04       		.uleb128 0x4
 3702 08a2 91       		.byte	0x91
 3703 08a3 5C       		.sleb128 -36
 3704 08a4 94       		.byte	0x94
 3705 08a5 01       		.byte	0x1
 3706 08a6 00       		.byte	0
 3707 08a7 00       		.byte	0
 3708 08a8 16       		.uleb128 0x16
 3709 08a9 08000000 		.4byte	.LVL85
 3710 08ad D50E0000 		.4byte	0xed5
 3711 08b1 00       		.byte	0
 3712 08b2 15       		.uleb128 0x15
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 136


 3713 08b3 A1070000 		.4byte	.LASF74
 3714 08b7 01       		.byte	0x1
 3715 08b8 69       		.byte	0x69
 3716 08b9 00000000 		.4byte	.LFB1
 3717 08bd 18000000 		.4byte	.LFE1-.LFB1
 3718 08c1 01       		.uleb128 0x1
 3719 08c2 9C       		.byte	0x9c
 3720 08c3 D1080000 		.4byte	0x8d1
 3721 08c7 16       		.uleb128 0x16
 3722 08c8 12000000 		.4byte	.LVL106
 3723 08cc 0D010000 		.4byte	0x10d
 3724 08d0 00       		.byte	0
 3725 08d1 12       		.uleb128 0x12
 3726 08d2 CD030000 		.4byte	.LASF75
 3727 08d6 01       		.byte	0x1
 3728 08d7 3103     		.2byte	0x331
 3729 08d9 00000000 		.4byte	.LFB10
 3730 08dd 80000000 		.4byte	.LFE10-.LFB10
 3731 08e1 01       		.uleb128 0x1
 3732 08e2 9C       		.byte	0x9c
 3733 08e3 6A090000 		.4byte	0x96a
 3734 08e7 18       		.uleb128 0x18
 3735 08e8 66010000 		.4byte	.LASF23
 3736 08ec 01       		.byte	0x1
 3737 08ed 3103     		.2byte	0x331
 3738 08ef 83000000 		.4byte	0x83
 3739 08f3 1F050000 		.4byte	.LLST40
 3740 08f7 1D       		.uleb128 0x1d
 3741 08f8 ED000000 		.4byte	.LASF76
 3742 08fc 01       		.byte	0x1
 3743 08fd 3403     		.2byte	0x334
 3744 08ff 7A090000 		.4byte	0x97a
 3745 0903 02       		.uleb128 0x2
 3746 0904 91       		.byte	0x91
 3747 0905 58       		.sleb128 -40
 3748 0906 1D       		.uleb128 0x1d
 3749 0907 D5010000 		.4byte	.LASF77
 3750 090b 01       		.byte	0x1
 3751 090c 3503     		.2byte	0x335
 3752 090e 8F090000 		.4byte	0x98f
 3753 0912 02       		.uleb128 0x2
 3754 0913 91       		.byte	0x91
 3755 0914 60       		.sleb128 -32
 3756 0915 14       		.uleb128 0x14
 3757 0916 B7010000 		.4byte	.LASF78
 3758 091a 01       		.byte	0x1
 3759 091b 3E03     		.2byte	0x33e
 3760 091d 83000000 		.4byte	0x83
 3761 0921 4B050000 		.4byte	.LLST41
 3762 0925 14       		.uleb128 0x14
 3763 0926 77010000 		.4byte	.LASF24
 3764 092a 01       		.byte	0x1
 3765 092b 4503     		.2byte	0x345
 3766 092d 6B000000 		.4byte	0x6b
 3767 0931 76050000 		.4byte	.LLST42
 3768 0935 16       		.uleb128 0x16
 3769 0936 0A000000 		.4byte	.LVL108
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 137


 3770 093a A90E0000 		.4byte	0xea9
 3771 093e 16       		.uleb128 0x16
 3772 093f 10000000 		.4byte	.LVL110
 3773 0943 54020000 		.4byte	0x254
 3774 0947 16       		.uleb128 0x16
 3775 0948 1A000000 		.4byte	.LVL112
 3776 094c 00020000 		.4byte	0x200
 3777 0950 16       		.uleb128 0x16
 3778 0951 56000000 		.4byte	.LVL115
 3779 0955 0D010000 		.4byte	0x10d
 3780 0959 2C       		.uleb128 0x2c
 3781 095a 5C000000 		.4byte	.LVL116
 3782 095e B40E0000 		.4byte	0xeb4
 3783 0962 2B       		.uleb128 0x2b
 3784 0963 01       		.uleb128 0x1
 3785 0964 50       		.byte	0x50
 3786 0965 02       		.uleb128 0x2
 3787 0966 75       		.byte	0x75
 3788 0967 00       		.sleb128 0
 3789 0968 00       		.byte	0
 3790 0969 00       		.byte	0
 3791 096a 2D       		.uleb128 0x2d
 3792 096b C1000000 		.4byte	0xc1
 3793 096f 7A090000 		.4byte	0x97a
 3794 0973 2E       		.uleb128 0x2e
 3795 0974 E0000000 		.4byte	0xe0
 3796 0978 01       		.byte	0x1
 3797 0979 00       		.byte	0
 3798 097a 05       		.uleb128 0x5
 3799 097b 6A090000 		.4byte	0x96a
 3800 097f 2D       		.uleb128 0x2d
 3801 0980 C1000000 		.4byte	0xc1
 3802 0984 8F090000 		.4byte	0x98f
 3803 0988 2E       		.uleb128 0x2e
 3804 0989 E0000000 		.4byte	0xe0
 3805 098d 03       		.byte	0x3
 3806 098e 00       		.byte	0
 3807 098f 05       		.uleb128 0x5
 3808 0990 7F090000 		.4byte	0x97f
 3809 0994 12       		.uleb128 0x12
 3810 0995 7A060000 		.4byte	.LASF79
 3811 0999 01       		.byte	0x1
 3812 099a 360C     		.2byte	0xc36
 3813 099c 00000000 		.4byte	.LFB32
 3814 09a0 14000000 		.4byte	.LFE32-.LFB32
 3815 09a4 01       		.uleb128 0x1
 3816 09a5 9C       		.byte	0x9c
 3817 09a6 C4090000 		.4byte	0x9c4
 3818 09aa 18       		.uleb128 0x18
 3819 09ab E9070000 		.4byte	.LASF80
 3820 09af 01       		.byte	0x1
 3821 09b0 360C     		.2byte	0xc36
 3822 09b2 77000000 		.4byte	0x77
 3823 09b6 89050000 		.4byte	.LLST43
 3824 09ba 16       		.uleb128 0x16
 3825 09bb 0C000000 		.4byte	.LVL120
 3826 09bf BF0E0000 		.4byte	0xebf
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 138


 3827 09c3 00       		.byte	0
 3828 09c4 12       		.uleb128 0x12
 3829 09c5 BC050000 		.4byte	.LASF81
 3830 09c9 01       		.byte	0x1
 3831 09ca 660A     		.2byte	0xa66
 3832 09cc 00000000 		.4byte	.LFB11
 3833 09d0 44000000 		.4byte	.LFE11-.LFB11
 3834 09d4 01       		.uleb128 0x1
 3835 09d5 9C       		.byte	0x9c
 3836 09d6 0C0A0000 		.4byte	0xa0c
 3837 09da 18       		.uleb128 0x18
 3838 09db 0C060000 		.4byte	.LASF82
 3839 09df 01       		.byte	0x1
 3840 09e0 660A     		.2byte	0xa66
 3841 09e2 83000000 		.4byte	0x83
 3842 09e6 AA050000 		.4byte	.LLST44
 3843 09ea 2F       		.uleb128 0x2f
 3844 09eb 5A010000 		.4byte	0x15a
 3845 09ef 2C000000 		.4byte	.LBB48
 3846 09f3 00000000 		.4byte	.Ldebug_ranges0+0
 3847 09f7 01       		.byte	0x1
 3848 09f8 760A     		.2byte	0xa76
 3849 09fa 2C       		.uleb128 0x2c
 3850 09fb 2C000000 		.4byte	.LVL123
 3851 09ff 94090000 		.4byte	0x994
 3852 0a03 2B       		.uleb128 0x2b
 3853 0a04 01       		.uleb128 0x1
 3854 0a05 50       		.byte	0x50
 3855 0a06 03       		.uleb128 0x3
 3856 0a07 0A       		.byte	0xa
 3857 0a08 E803     		.2byte	0x3e8
 3858 0a0a 00       		.byte	0
 3859 0a0b 00       		.byte	0
 3860 0a0c 30       		.uleb128 0x30
 3861 0a0d 6B010000 		.4byte	.LASF83
 3862 0a11 01       		.byte	0x1
 3863 0a12 440C     		.2byte	0xc44
 3864 0a14 00000000 		.4byte	.LFB33
 3865 0a18 48000000 		.4byte	.LFE33-.LFB33
 3866 0a1c 01       		.uleb128 0x1
 3867 0a1d 9C       		.byte	0x9c
 3868 0a1e 330A0000 		.4byte	0xa33
 3869 0a22 18       		.uleb128 0x18
 3870 0a23 66010000 		.4byte	.LASF23
 3871 0a27 01       		.byte	0x1
 3872 0a28 440C     		.2byte	0xc44
 3873 0a2a 83000000 		.4byte	0x83
 3874 0a2e CB050000 		.4byte	.LLST45
 3875 0a32 00       		.byte	0
 3876 0a33 30       		.uleb128 0x30
 3877 0a34 8F020000 		.4byte	.LASF84
 3878 0a38 01       		.byte	0x1
 3879 0a39 810C     		.2byte	0xc81
 3880 0a3b 00000000 		.4byte	.LFB35
 3881 0a3f 54000000 		.4byte	.LFE35-.LFB35
 3882 0a43 01       		.uleb128 0x1
 3883 0a44 9C       		.byte	0x9c
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 139


 3884 0a45 F20A0000 		.4byte	0xaf2
 3885 0a49 13       		.uleb128 0x13
 3886 0a4a 6900     		.ascii	"i\000"
 3887 0a4c 01       		.byte	0x1
 3888 0a4d 830C     		.2byte	0xc83
 3889 0a4f 83000000 		.4byte	0x83
 3890 0a53 EC050000 		.4byte	.LLST46
 3891 0a57 31       		.uleb128 0x31
 3892 0a58 63010000 		.4byte	0x163
 3893 0a5c 04000000 		.4byte	.LBB62
 3894 0a60 18000000 		.4byte	.Ldebug_ranges0+0x18
 3895 0a64 01       		.byte	0x1
 3896 0a65 8D0C     		.2byte	0xc8d
 3897 0a67 840A0000 		.4byte	0xa84
 3898 0a6b 1F       		.uleb128 0x1f
 3899 0a6c 70010000 		.4byte	0x170
 3900 0a70 30060000 		.4byte	.LLST47
 3901 0a74 32       		.uleb128 0x32
 3902 0a75 18000000 		.4byte	.Ldebug_ranges0+0x18
 3903 0a79 1F       		.uleb128 0x1f
 3904 0a7a 70010000 		.4byte	0x170
 3905 0a7e 30060000 		.4byte	.LLST47
 3906 0a82 00       		.byte	0
 3907 0a83 00       		.byte	0
 3908 0a84 31       		.uleb128 0x31
 3909 0a85 B8010000 		.4byte	0x1b8
 3910 0a89 08000000 		.4byte	.LBB69
 3911 0a8d 38000000 		.4byte	.Ldebug_ranges0+0x38
 3912 0a91 01       		.byte	0x1
 3913 0a92 8A0C     		.2byte	0xc8a
 3914 0a94 C30A0000 		.4byte	0xac3
 3915 0a98 1F       		.uleb128 0x1f
 3916 0a99 D5010000 		.4byte	0x1d5
 3917 0a9d 44060000 		.4byte	.LLST49
 3918 0aa1 1F       		.uleb128 0x1f
 3919 0aa2 C9010000 		.4byte	0x1c9
 3920 0aa6 5C060000 		.4byte	.LLST50
 3921 0aaa 32       		.uleb128 0x32
 3922 0aab 38000000 		.4byte	.Ldebug_ranges0+0x38
 3923 0aaf 29       		.uleb128 0x29
 3924 0ab0 E1010000 		.4byte	0x1e1
 3925 0ab4 70060000 		.4byte	.LLST51
 3926 0ab8 22       		.uleb128 0x22
 3927 0ab9 ED010000 		.4byte	0x1ed
 3928 0abd 00000020 		.4byte	0x20000000
 3929 0ac1 00       		.byte	0
 3930 0ac2 00       		.byte	0
 3931 0ac3 25       		.uleb128 0x25
 3932 0ac4 9E010000 		.4byte	0x19e
 3933 0ac8 2C000000 		.4byte	.LBB77
 3934 0acc 04000000 		.4byte	.LBE77-.LBB77
 3935 0ad0 01       		.byte	0x1
 3936 0ad1 900C     		.2byte	0xc90
 3937 0ad3 E10A0000 		.4byte	0xae1
 3938 0ad7 1F       		.uleb128 0x1f
 3939 0ad8 AB010000 		.4byte	0x1ab
 3940 0adc 93060000 		.4byte	.LLST52
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 140


 3941 0ae0 00       		.byte	0
 3942 0ae1 33       		.uleb128 0x33
 3943 0ae2 95010000 		.4byte	0x195
 3944 0ae6 30000000 		.4byte	.LBB79
 3945 0aea 04000000 		.4byte	.LBE79-.LBB79
 3946 0aee 01       		.byte	0x1
 3947 0aef 910C     		.2byte	0xc91
 3948 0af1 00       		.byte	0
 3949 0af2 1B       		.uleb128 0x1b
 3950 0af3 8B070000 		.4byte	.LASF85
 3951 0af7 01       		.byte	0x1
 3952 0af8 B00C     		.2byte	0xcb0
 3953 0afa 00000000 		.4byte	.LFB37
 3954 0afe 10000000 		.4byte	.LFE37-.LFB37
 3955 0b02 01       		.uleb128 0x1
 3956 0b03 9C       		.byte	0x9c
 3957 0b04 1B       		.uleb128 0x1b
 3958 0b05 25010000 		.4byte	.LASF86
 3959 0b09 01       		.byte	0x1
 3960 0b0a C00C     		.2byte	0xcc0
 3961 0b0c 00000000 		.4byte	.LFB38
 3962 0b10 10000000 		.4byte	.LFE38-.LFB38
 3963 0b14 01       		.uleb128 0x1
 3964 0b15 9C       		.byte	0x9c
 3965 0b16 12       		.uleb128 0x12
 3966 0b17 9D060000 		.4byte	.LASF87
 3967 0b1b 01       		.byte	0x1
 3968 0b1c 9F0C     		.2byte	0xc9f
 3969 0b1e 00000000 		.4byte	.LFB36
 3970 0b22 18000000 		.4byte	.LFE36-.LFB36
 3971 0b26 01       		.uleb128 0x1
 3972 0b27 9C       		.byte	0x9c
 3973 0b28 360B0000 		.4byte	0xb36
 3974 0b2c 16       		.uleb128 0x16
 3975 0b2d 06000000 		.4byte	.LVL138
 3976 0b31 040B0000 		.4byte	0xb04
 3977 0b35 00       		.byte	0
 3978 0b36 12       		.uleb128 0x12
 3979 0b37 33040000 		.4byte	.LASF88
 3980 0b3b 01       		.byte	0x1
 3981 0b3c 640C     		.2byte	0xc64
 3982 0b3e 00000000 		.4byte	.LFB34
 3983 0b42 1C000000 		.4byte	.LFE34-.LFB34
 3984 0b46 01       		.uleb128 0x1
 3985 0b47 9C       		.byte	0x9c
 3986 0b48 5F0B0000 		.4byte	0xb5f
 3987 0b4c 16       		.uleb128 0x16
 3988 0b4d 0E000000 		.4byte	.LVL139
 3989 0b51 330A0000 		.4byte	0xa33
 3990 0b55 16       		.uleb128 0x16
 3991 0b56 16000000 		.4byte	.LVL140
 3992 0b5a 160B0000 		.4byte	0xb16
 3993 0b5e 00       		.byte	0
 3994 0b5f 1B       		.uleb128 0x1b
 3995 0b60 21070000 		.4byte	.LASF89
 3996 0b64 01       		.byte	0x1
 3997 0b65 D00C     		.2byte	0xcd0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 141


 3998 0b67 00000000 		.4byte	.LFB39
 3999 0b6b 10000000 		.4byte	.LFE39-.LFB39
 4000 0b6f 01       		.uleb128 0x1
 4001 0b70 9C       		.byte	0x9c
 4002 0b71 1E       		.uleb128 0x1e
 4003 0b72 9E010000 		.4byte	0x19e
 4004 0b76 00000000 		.4byte	.LFB40
 4005 0b7a 10000000 		.4byte	.LFE40-.LFB40
 4006 0b7e 01       		.uleb128 0x1
 4007 0b7f 9C       		.byte	0x9c
 4008 0b80 8E0B0000 		.4byte	0xb8e
 4009 0b84 1F       		.uleb128 0x1f
 4010 0b85 AB010000 		.4byte	0x1ab
 4011 0b89 A6060000 		.4byte	.LLST53
 4012 0b8d 00       		.byte	0
 4013 0b8e 17       		.uleb128 0x17
 4014 0b8f 8E010000 		.4byte	.LASF90
 4015 0b93 01       		.byte	0x1
 4016 0b94 F10C     		.2byte	0xcf1
 4017 0b96 83000000 		.4byte	0x83
 4018 0b9a 00000000 		.4byte	.LFB41
 4019 0b9e 10000000 		.4byte	.LFE41-.LFB41
 4020 0ba2 01       		.uleb128 0x1
 4021 0ba3 9C       		.byte	0x9c
 4022 0ba4 17       		.uleb128 0x17
 4023 0ba5 6F050000 		.4byte	.LASF91
 4024 0ba9 01       		.byte	0x1
 4025 0baa 010D     		.2byte	0xd01
 4026 0bac 83000000 		.4byte	0x83
 4027 0bb0 00000000 		.4byte	.LFB42
 4028 0bb4 10000000 		.4byte	.LFE42-.LFB42
 4029 0bb8 01       		.uleb128 0x1
 4030 0bb9 9C       		.byte	0x9c
 4031 0bba 1E       		.uleb128 0x1e
 4032 0bbb 63010000 		.4byte	0x163
 4033 0bbf 00000000 		.4byte	.LFB43
 4034 0bc3 18000000 		.4byte	.LFE43-.LFB43
 4035 0bc7 01       		.uleb128 0x1
 4036 0bc8 9C       		.byte	0x9c
 4037 0bc9 E40B0000 		.4byte	0xbe4
 4038 0bcd 20       		.uleb128 0x20
 4039 0bce 70010000 		.4byte	0x170
 4040 0bd2 01       		.uleb128 0x1
 4041 0bd3 50       		.byte	0x50
 4042 0bd4 32       		.uleb128 0x32
 4043 0bd5 58000000 		.4byte	.Ldebug_ranges0+0x58
 4044 0bd9 1F       		.uleb128 0x1f
 4045 0bda 70010000 		.4byte	0x170
 4046 0bde C7060000 		.4byte	.LLST54
 4047 0be2 00       		.byte	0
 4048 0be3 00       		.byte	0
 4049 0be4 17       		.uleb128 0x17
 4050 0be5 09070000 		.4byte	.LASF92
 4051 0be9 01       		.byte	0x1
 4052 0bea 3A0D     		.2byte	0xd3a
 4053 0bec 83000000 		.4byte	0x83
 4054 0bf0 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 142


 4055 0bf4 10000000 		.4byte	.LFE44-.LFB44
 4056 0bf8 01       		.uleb128 0x1
 4057 0bf9 9C       		.byte	0x9c
 4058 0bfa 17       		.uleb128 0x17
 4059 0bfb BD020000 		.4byte	.LASF93
 4060 0bff 01       		.byte	0x1
 4061 0c00 510D     		.2byte	0xd51
 4062 0c02 83000000 		.4byte	0x83
 4063 0c06 00000000 		.4byte	.LFB45
 4064 0c0a 10000000 		.4byte	.LFE45-.LFB45
 4065 0c0e 01       		.uleb128 0x1
 4066 0c0f 9C       		.byte	0x9c
 4067 0c10 34       		.uleb128 0x34
 4068 0c11 7D010000 		.4byte	0x17d
 4069 0c15 00000000 		.4byte	.LFB49
 4070 0c19 24000000 		.4byte	.LFE49-.LFB49
 4071 0c1d 01       		.uleb128 0x1
 4072 0c1e 9C       		.byte	0x9c
 4073 0c1f 450C0000 		.4byte	0xc45
 4074 0c23 26       		.uleb128 0x26
 4075 0c24 8A010000 		.4byte	0x18a
 4076 0c28 28       		.uleb128 0x28
 4077 0c29 0C000000 		.4byte	.LBB89
 4078 0c2d 10000000 		.4byte	.LBE89-.LBB89
 4079 0c31 3B0C0000 		.4byte	0xc3b
 4080 0c35 26       		.uleb128 0x26
 4081 0c36 8A010000 		.4byte	0x18a
 4082 0c3a 00       		.byte	0
 4083 0c3b 16       		.uleb128 0x16
 4084 0c3c 06000000 		.4byte	.LVL146
 4085 0c40 FA0B0000 		.4byte	0xbfa
 4086 0c44 00       		.byte	0
 4087 0c45 1C       		.uleb128 0x1c
 4088 0c46 95010000 		.4byte	0x195
 4089 0c4a 00000000 		.4byte	.LFB46
 4090 0c4e 0C000000 		.4byte	.LFE46-.LFB46
 4091 0c52 01       		.uleb128 0x1
 4092 0c53 9C       		.byte	0x9c
 4093 0c54 1A       		.uleb128 0x1a
 4094 0c55 C4060000 		.4byte	.LASF94
 4095 0c59 01       		.byte	0x1
 4096 0c5a 810D     		.2byte	0xd81
 4097 0c5c E7000000 		.4byte	0xe7
 4098 0c60 00000000 		.4byte	.LFB47
 4099 0c64 10000000 		.4byte	.LFE47-.LFB47
 4100 0c68 01       		.uleb128 0x1
 4101 0c69 9C       		.byte	0x9c
 4102 0c6a 9B0C0000 		.4byte	0xc9b
 4103 0c6e 18       		.uleb128 0x18
 4104 0c6f BD030000 		.4byte	.LASF35
 4105 0c73 01       		.byte	0x1
 4106 0c74 810D     		.2byte	0xd81
 4107 0c76 83000000 		.4byte	0x83
 4108 0c7a DB060000 		.4byte	.LLST55
 4109 0c7e 19       		.uleb128 0x19
 4110 0c7f 55050000 		.4byte	.LASF95
 4111 0c83 01       		.byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 143


 4112 0c84 810D     		.2byte	0xd81
 4113 0c86 E7000000 		.4byte	0xe7
 4114 0c8a 01       		.uleb128 0x1
 4115 0c8b 51       		.byte	0x51
 4116 0c8c 1D       		.uleb128 0x1d
 4117 0c8d 52000000 		.4byte	.LASF96
 4118 0c91 01       		.byte	0x1
 4119 0c92 830D     		.2byte	0xd83
 4120 0c94 E7000000 		.4byte	0xe7
 4121 0c98 01       		.uleb128 0x1
 4122 0c99 50       		.byte	0x50
 4123 0c9a 00       		.byte	0
 4124 0c9b 1A       		.uleb128 0x1a
 4125 0c9c 53030000 		.4byte	.LASF97
 4126 0ca0 01       		.byte	0x1
 4127 0ca1 990D     		.2byte	0xd99
 4128 0ca3 E7000000 		.4byte	0xe7
 4129 0ca7 00000000 		.4byte	.LFB48
 4130 0cab 0C000000 		.4byte	.LFE48-.LFB48
 4131 0caf 01       		.uleb128 0x1
 4132 0cb0 9C       		.byte	0x9c
 4133 0cb1 C60C0000 		.4byte	0xcc6
 4134 0cb5 18       		.uleb128 0x18
 4135 0cb6 BD030000 		.4byte	.LASF35
 4136 0cba 01       		.byte	0x1
 4137 0cbb 990D     		.2byte	0xd99
 4138 0cbd 83000000 		.4byte	0x83
 4139 0cc1 FC060000 		.4byte	.LLST56
 4140 0cc5 00       		.byte	0
 4141 0cc6 12       		.uleb128 0x12
 4142 0cc7 AF020000 		.4byte	.LASF98
 4143 0ccb 01       		.byte	0x1
 4144 0ccc C60D     		.2byte	0xdc6
 4145 0cce 00000000 		.4byte	.LFB50
 4146 0cd2 74000000 		.4byte	.LFE50-.LFB50
 4147 0cd6 01       		.uleb128 0x1
 4148 0cd7 9C       		.byte	0x9c
 4149 0cd8 EB0C0000 		.4byte	0xceb
 4150 0cdc 19       		.uleb128 0x19
 4151 0cdd EC060000 		.4byte	.LASF99
 4152 0ce1 01       		.byte	0x1
 4153 0ce2 C60D     		.2byte	0xdc6
 4154 0ce4 EB0C0000 		.4byte	0xceb
 4155 0ce8 01       		.uleb128 0x1
 4156 0ce9 50       		.byte	0x50
 4157 0cea 00       		.byte	0
 4158 0ceb 06       		.uleb128 0x6
 4159 0cec 04       		.byte	0x4
 4160 0ced 83000000 		.4byte	0x83
 4161 0cf1 12       		.uleb128 0x12
 4162 0cf2 1D060000 		.4byte	.LASF100
 4163 0cf6 01       		.byte	0x1
 4164 0cf7 F30D     		.2byte	0xdf3
 4165 0cf9 00000000 		.4byte	.LFB51
 4166 0cfd 20000000 		.4byte	.LFE51-.LFB51
 4167 0d01 01       		.uleb128 0x1
 4168 0d02 9C       		.byte	0x9c
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 144


 4169 0d03 280D0000 		.4byte	0xd28
 4170 0d07 18       		.uleb128 0x18
 4171 0d08 4F040000 		.4byte	.LASF101
 4172 0d0c 01       		.byte	0x1
 4173 0d0d F30D     		.2byte	0xdf3
 4174 0d0f 83000000 		.4byte	0x83
 4175 0d13 1D070000 		.4byte	.LLST57
 4176 0d17 14       		.uleb128 0x14
 4177 0d18 8F030000 		.4byte	.LASF25
 4178 0d1c 01       		.byte	0x1
 4179 0d1d F50D     		.2byte	0xdf5
 4180 0d1f 83000000 		.4byte	0x83
 4181 0d23 3E070000 		.4byte	.LLST58
 4182 0d27 00       		.byte	0
 4183 0d28 12       		.uleb128 0x12
 4184 0d29 E2030000 		.4byte	.LASF102
 4185 0d2d 01       		.byte	0x1
 4186 0d2e 0F0E     		.2byte	0xe0f
 4187 0d30 00000000 		.4byte	.LFB52
 4188 0d34 20000000 		.4byte	.LFE52-.LFB52
 4189 0d38 01       		.uleb128 0x1
 4190 0d39 9C       		.byte	0x9c
 4191 0d3a 5F0D0000 		.4byte	0xd5f
 4192 0d3e 18       		.uleb128 0x18
 4193 0d3f 4F040000 		.4byte	.LASF101
 4194 0d43 01       		.byte	0x1
 4195 0d44 0F0E     		.2byte	0xe0f
 4196 0d46 83000000 		.4byte	0x83
 4197 0d4a 5C070000 		.4byte	.LLST59
 4198 0d4e 14       		.uleb128 0x14
 4199 0d4f 8F030000 		.4byte	.LASF25
 4200 0d53 01       		.byte	0x1
 4201 0d54 110E     		.2byte	0xe11
 4202 0d56 83000000 		.4byte	0x83
 4203 0d5a 7D070000 		.4byte	.LLST60
 4204 0d5e 00       		.byte	0
 4205 0d5f 12       		.uleb128 0x12
 4206 0d60 6D070000 		.4byte	.LASF103
 4207 0d64 01       		.byte	0x1
 4208 0d65 2B0E     		.2byte	0xe2b
 4209 0d67 00000000 		.4byte	.LFB53
 4210 0d6b 20000000 		.4byte	.LFE53-.LFB53
 4211 0d6f 01       		.uleb128 0x1
 4212 0d70 9C       		.byte	0x9c
 4213 0d71 960D0000 		.4byte	0xd96
 4214 0d75 18       		.uleb128 0x18
 4215 0d76 4F040000 		.4byte	.LASF101
 4216 0d7a 01       		.byte	0x1
 4217 0d7b 2B0E     		.2byte	0xe2b
 4218 0d7d 83000000 		.4byte	0x83
 4219 0d81 9B070000 		.4byte	.LLST61
 4220 0d85 14       		.uleb128 0x14
 4221 0d86 8F030000 		.4byte	.LASF25
 4222 0d8a 01       		.byte	0x1
 4223 0d8b 2D0E     		.2byte	0xe2d
 4224 0d8d 83000000 		.4byte	0x83
 4225 0d91 BC070000 		.4byte	.LLST62
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 145


 4226 0d95 00       		.byte	0
 4227 0d96 12       		.uleb128 0x12
 4228 0d97 70040000 		.4byte	.LASF104
 4229 0d9b 01       		.byte	0x1
 4230 0d9c 490E     		.2byte	0xe49
 4231 0d9e 00000000 		.4byte	.LFB54
 4232 0da2 40000000 		.4byte	.LFE54-.LFB54
 4233 0da6 01       		.uleb128 0x1
 4234 0da7 9C       		.byte	0x9c
 4235 0da8 F70D0000 		.4byte	0xdf7
 4236 0dac 18       		.uleb128 0x18
 4237 0dad 05010000 		.4byte	.LASF105
 4238 0db1 01       		.byte	0x1
 4239 0db2 490E     		.2byte	0xe49
 4240 0db4 83000000 		.4byte	0x83
 4241 0db8 DA070000 		.4byte	.LLST63
 4242 0dbc 18       		.uleb128 0x18
 4243 0dbd 4F040000 		.4byte	.LASF101
 4244 0dc1 01       		.byte	0x1
 4245 0dc2 490E     		.2byte	0xe49
 4246 0dc4 83000000 		.4byte	0x83
 4247 0dc8 46080000 		.4byte	.LLST64
 4248 0dcc 14       		.uleb128 0x14
 4249 0dcd 8F030000 		.4byte	.LASF25
 4250 0dd1 01       		.byte	0x1
 4251 0dd2 4B0E     		.2byte	0xe4b
 4252 0dd4 83000000 		.4byte	0x83
 4253 0dd8 80080000 		.4byte	.LLST65
 4254 0ddc 23       		.uleb128 0x23
 4255 0ddd F3000000 		.4byte	0xf3
 4256 0de1 2A000000 		.4byte	.LBB90
 4257 0de5 02000000 		.4byte	.LBE90-.LBB90
 4258 0de9 01       		.byte	0x1
 4259 0dea 650E     		.2byte	0xe65
 4260 0dec 1F       		.uleb128 0x1f
 4261 0ded 00010000 		.4byte	0x100
 4262 0df1 9E080000 		.4byte	.LLST66
 4263 0df5 00       		.byte	0
 4264 0df6 00       		.byte	0
 4265 0df7 2D       		.uleb128 0x2d
 4266 0df8 E7000000 		.4byte	0xe7
 4267 0dfc 070E0000 		.4byte	0xe07
 4268 0e00 2E       		.uleb128 0x2e
 4269 0e01 E0000000 		.4byte	0xe0
 4270 0e05 04       		.byte	0x4
 4271 0e06 00       		.byte	0
 4272 0e07 35       		.uleb128 0x35
 4273 0e08 D9060000 		.4byte	.LASF106
 4274 0e0c 01       		.byte	0x1
 4275 0e0d 22       		.byte	0x22
 4276 0e0e F70D0000 		.4byte	0xdf7
 4277 0e12 05       		.uleb128 0x5
 4278 0e13 03       		.byte	0x3
 4279 0e14 00000000 		.4byte	CySysTickCallbacks
 4280 0e18 36       		.uleb128 0x36
 4281 0e19 81050000 		.4byte	.LASF107
 4282 0e1d 01       		.byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 146


 4283 0e1e 1B       		.byte	0x1b
 4284 0e1f 83000000 		.4byte	0x83
 4285 0e23 05       		.uleb128 0x5
 4286 0e24 03       		.byte	0x3
 4287 0e25 00000000 		.4byte	cydelayFreqHz
 4288 0e29 36       		.uleb128 0x36
 4289 0e2a FA010000 		.4byte	.LASF108
 4290 0e2e 01       		.byte	0x1
 4291 0e2f 1C       		.byte	0x1c
 4292 0e30 83000000 		.4byte	0x83
 4293 0e34 05       		.uleb128 0x5
 4294 0e35 03       		.byte	0x3
 4295 0e36 00000000 		.4byte	cydelayFreqKhz
 4296 0e3a 36       		.uleb128 0x36
 4297 0e3b 4B070000 		.4byte	.LASF109
 4298 0e3f 01       		.byte	0x1
 4299 0e40 1D       		.byte	0x1d
 4300 0e41 6B000000 		.4byte	0x6b
 4301 0e45 05       		.uleb128 0x5
 4302 0e46 03       		.byte	0x3
 4303 0e47 00000000 		.4byte	cydelayFreqMhz
 4304 0e4b 36       		.uleb128 0x36
 4305 0e4c 82020000 		.4byte	.LASF110
 4306 0e50 01       		.byte	0x1
 4307 0e51 1E       		.byte	0x1e
 4308 0e52 83000000 		.4byte	0x83
 4309 0e56 05       		.uleb128 0x5
 4310 0e57 03       		.byte	0x3
 4311 0e58 00000000 		.4byte	cydelay32kMs
 4312 0e5c 36       		.uleb128 0x36
 4313 0e5d 5F040000 		.4byte	.LASF111
 4314 0e61 01       		.byte	0x1
 4315 0e62 36       		.byte	0x36
 4316 0e63 83000000 		.4byte	0x83
 4317 0e67 05       		.uleb128 0x5
 4318 0e68 03       		.byte	0x3
 4319 0e69 00000000 		.4byte	CySysTickInitVar
 4320 0e6d 2D       		.uleb128 0x2d
 4321 0e6e 7D0E0000 		.4byte	0xe7d
 4322 0e72 7D0E0000 		.4byte	0xe7d
 4323 0e76 2E       		.uleb128 0x2e
 4324 0e77 E0000000 		.4byte	0xe0
 4325 0e7b 2D       		.byte	0x2d
 4326 0e7c 00       		.byte	0
 4327 0e7d 37       		.uleb128 0x37
 4328 0e7e 6B000000 		.4byte	0x6b
 4329 0e82 36       		.uleb128 0x36
 4330 0e83 5E050000 		.4byte	.LASF112
 4331 0e87 01       		.byte	0x1
 4332 0e88 3B       		.byte	0x3b
 4333 0e89 930E0000 		.4byte	0xe93
 4334 0e8d 05       		.uleb128 0x5
 4335 0e8e 03       		.byte	0x3
 4336 0e8f 00000000 		.4byte	cyImoFreqMhz2Reg
 4337 0e93 37       		.uleb128 0x37
 4338 0e94 6D0E0000 		.4byte	0xe6d
 4339 0e98 36       		.uleb128 0x36
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 147


 4340 0e99 38000000 		.4byte	.LASF113
 4341 0e9d 01       		.byte	0x1
 4342 0e9e 58       		.byte	0x58
 4343 0e9f 83000000 		.4byte	0x83
 4344 0ea3 05       		.uleb128 0x5
 4345 0ea4 03       		.byte	0x3
 4346 0ea5 00000000 		.4byte	CySysClkPumpConfig
 4347 0ea9 38       		.uleb128 0x38
 4348 0eaa 2C030000 		.4byte	.LASF114
 4349 0eae 2C030000 		.4byte	.LASF114
 4350 0eb2 03       		.byte	0x3
 4351 0eb3 F8       		.byte	0xf8
 4352 0eb4 38       		.uleb128 0x38
 4353 0eb5 A6050000 		.4byte	.LASF115
 4354 0eb9 A6050000 		.4byte	.LASF115
 4355 0ebd 03       		.byte	0x3
 4356 0ebe F9       		.byte	0xf9
 4357 0ebf 38       		.uleb128 0x38
 4358 0ec0 F9050000 		.4byte	.LASF116
 4359 0ec4 F9050000 		.4byte	.LASF116
 4360 0ec8 03       		.byte	0x3
 4361 0ec9 EF       		.byte	0xef
 4362 0eca 38       		.uleb128 0x38
 4363 0ecb B2070000 		.4byte	.LASF117
 4364 0ecf B2070000 		.4byte	.LASF117
 4365 0ed3 04       		.byte	0x4
 4366 0ed4 52       		.byte	0x52
 4367 0ed5 38       		.uleb128 0x38
 4368 0ed6 5A070000 		.4byte	.LASF118
 4369 0eda 5A070000 		.4byte	.LASF118
 4370 0ede 05       		.byte	0x5
 4371 0edf 54       		.byte	0x54
 4372 0ee0 00       		.byte	0
 4373              		.section	.debug_abbrev,"",%progbits
 4374              	.Ldebug_abbrev0:
 4375 0000 01       		.uleb128 0x1
 4376 0001 11       		.uleb128 0x11
 4377 0002 01       		.byte	0x1
 4378 0003 25       		.uleb128 0x25
 4379 0004 0E       		.uleb128 0xe
 4380 0005 13       		.uleb128 0x13
 4381 0006 0B       		.uleb128 0xb
 4382 0007 03       		.uleb128 0x3
 4383 0008 0E       		.uleb128 0xe
 4384 0009 1B       		.uleb128 0x1b
 4385 000a 0E       		.uleb128 0xe
 4386 000b 55       		.uleb128 0x55
 4387 000c 17       		.uleb128 0x17
 4388 000d 11       		.uleb128 0x11
 4389 000e 01       		.uleb128 0x1
 4390 000f 10       		.uleb128 0x10
 4391 0010 17       		.uleb128 0x17
 4392 0011 00       		.byte	0
 4393 0012 00       		.byte	0
 4394 0013 02       		.uleb128 0x2
 4395 0014 24       		.uleb128 0x24
 4396 0015 00       		.byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 148


 4397 0016 0B       		.uleb128 0xb
 4398 0017 0B       		.uleb128 0xb
 4399 0018 3E       		.uleb128 0x3e
 4400 0019 0B       		.uleb128 0xb
 4401 001a 03       		.uleb128 0x3
 4402 001b 0E       		.uleb128 0xe
 4403 001c 00       		.byte	0
 4404 001d 00       		.byte	0
 4405 001e 03       		.uleb128 0x3
 4406 001f 24       		.uleb128 0x24
 4407 0020 00       		.byte	0
 4408 0021 0B       		.uleb128 0xb
 4409 0022 0B       		.uleb128 0xb
 4410 0023 3E       		.uleb128 0x3e
 4411 0024 0B       		.uleb128 0xb
 4412 0025 03       		.uleb128 0x3
 4413 0026 08       		.uleb128 0x8
 4414 0027 00       		.byte	0
 4415 0028 00       		.byte	0
 4416 0029 04       		.uleb128 0x4
 4417 002a 16       		.uleb128 0x16
 4418 002b 00       		.byte	0
 4419 002c 03       		.uleb128 0x3
 4420 002d 0E       		.uleb128 0xe
 4421 002e 3A       		.uleb128 0x3a
 4422 002f 0B       		.uleb128 0xb
 4423 0030 3B       		.uleb128 0x3b
 4424 0031 05       		.uleb128 0x5
 4425 0032 49       		.uleb128 0x49
 4426 0033 13       		.uleb128 0x13
 4427 0034 00       		.byte	0
 4428 0035 00       		.byte	0
 4429 0036 05       		.uleb128 0x5
 4430 0037 35       		.uleb128 0x35
 4431 0038 00       		.byte	0
 4432 0039 49       		.uleb128 0x49
 4433 003a 13       		.uleb128 0x13
 4434 003b 00       		.byte	0
 4435 003c 00       		.byte	0
 4436 003d 06       		.uleb128 0x6
 4437 003e 0F       		.uleb128 0xf
 4438 003f 00       		.byte	0
 4439 0040 0B       		.uleb128 0xb
 4440 0041 0B       		.uleb128 0xb
 4441 0042 49       		.uleb128 0x49
 4442 0043 13       		.uleb128 0x13
 4443 0044 00       		.byte	0
 4444 0045 00       		.byte	0
 4445 0046 07       		.uleb128 0x7
 4446 0047 15       		.uleb128 0x15
 4447 0048 00       		.byte	0
 4448 0049 27       		.uleb128 0x27
 4449 004a 19       		.uleb128 0x19
 4450 004b 00       		.byte	0
 4451 004c 00       		.byte	0
 4452 004d 08       		.uleb128 0x8
 4453 004e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 149


 4454 004f 01       		.byte	0x1
 4455 0050 3F       		.uleb128 0x3f
 4456 0051 19       		.uleb128 0x19
 4457 0052 03       		.uleb128 0x3
 4458 0053 0E       		.uleb128 0xe
 4459 0054 3A       		.uleb128 0x3a
 4460 0055 0B       		.uleb128 0xb
 4461 0056 3B       		.uleb128 0x3b
 4462 0057 05       		.uleb128 0x5
 4463 0058 27       		.uleb128 0x27
 4464 0059 19       		.uleb128 0x19
 4465 005a 20       		.uleb128 0x20
 4466 005b 0B       		.uleb128 0xb
 4467 005c 01       		.uleb128 0x1
 4468 005d 13       		.uleb128 0x13
 4469 005e 00       		.byte	0
 4470 005f 00       		.byte	0
 4471 0060 09       		.uleb128 0x9
 4472 0061 05       		.uleb128 0x5
 4473 0062 00       		.byte	0
 4474 0063 03       		.uleb128 0x3
 4475 0064 0E       		.uleb128 0xe
 4476 0065 3A       		.uleb128 0x3a
 4477 0066 0B       		.uleb128 0xb
 4478 0067 3B       		.uleb128 0x3b
 4479 0068 05       		.uleb128 0x5
 4480 0069 49       		.uleb128 0x49
 4481 006a 13       		.uleb128 0x13
 4482 006b 00       		.byte	0
 4483 006c 00       		.byte	0
 4484 006d 0A       		.uleb128 0xa
 4485 006e 2E       		.uleb128 0x2e
 4486 006f 01       		.byte	0x1
 4487 0070 3F       		.uleb128 0x3f
 4488 0071 19       		.uleb128 0x19
 4489 0072 03       		.uleb128 0x3
 4490 0073 0E       		.uleb128 0xe
 4491 0074 3A       		.uleb128 0x3a
 4492 0075 0B       		.uleb128 0xb
 4493 0076 3B       		.uleb128 0x3b
 4494 0077 0B       		.uleb128 0xb
 4495 0078 27       		.uleb128 0x27
 4496 0079 19       		.uleb128 0x19
 4497 007a 20       		.uleb128 0x20
 4498 007b 0B       		.uleb128 0xb
 4499 007c 01       		.uleb128 0x1
 4500 007d 13       		.uleb128 0x13
 4501 007e 00       		.byte	0
 4502 007f 00       		.byte	0
 4503 0080 0B       		.uleb128 0xb
 4504 0081 34       		.uleb128 0x34
 4505 0082 00       		.byte	0
 4506 0083 03       		.uleb128 0x3
 4507 0084 08       		.uleb128 0x8
 4508 0085 3A       		.uleb128 0x3a
 4509 0086 0B       		.uleb128 0xb
 4510 0087 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 150


 4511 0088 0B       		.uleb128 0xb
 4512 0089 49       		.uleb128 0x49
 4513 008a 13       		.uleb128 0x13
 4514 008b 00       		.byte	0
 4515 008c 00       		.byte	0
 4516 008d 0C       		.uleb128 0xc
 4517 008e 34       		.uleb128 0x34
 4518 008f 00       		.byte	0
 4519 0090 03       		.uleb128 0x3
 4520 0091 0E       		.uleb128 0xe
 4521 0092 3A       		.uleb128 0x3a
 4522 0093 0B       		.uleb128 0xb
 4523 0094 3B       		.uleb128 0x3b
 4524 0095 0B       		.uleb128 0xb
 4525 0096 49       		.uleb128 0x49
 4526 0097 13       		.uleb128 0x13
 4527 0098 00       		.byte	0
 4528 0099 00       		.byte	0
 4529 009a 0D       		.uleb128 0xd
 4530 009b 2E       		.uleb128 0x2e
 4531 009c 00       		.byte	0
 4532 009d 3F       		.uleb128 0x3f
 4533 009e 19       		.uleb128 0x19
 4534 009f 03       		.uleb128 0x3
 4535 00a0 0E       		.uleb128 0xe
 4536 00a1 3A       		.uleb128 0x3a
 4537 00a2 0B       		.uleb128 0xb
 4538 00a3 3B       		.uleb128 0x3b
 4539 00a4 05       		.uleb128 0x5
 4540 00a5 27       		.uleb128 0x27
 4541 00a6 19       		.uleb128 0x19
 4542 00a7 20       		.uleb128 0x20
 4543 00a8 0B       		.uleb128 0xb
 4544 00a9 00       		.byte	0
 4545 00aa 00       		.byte	0
 4546 00ab 0E       		.uleb128 0xe
 4547 00ac 2E       		.uleb128 0x2e
 4548 00ad 01       		.byte	0x1
 4549 00ae 03       		.uleb128 0x3
 4550 00af 0E       		.uleb128 0xe
 4551 00b0 3A       		.uleb128 0x3a
 4552 00b1 0B       		.uleb128 0xb
 4553 00b2 3B       		.uleb128 0x3b
 4554 00b3 05       		.uleb128 0x5
 4555 00b4 27       		.uleb128 0x27
 4556 00b5 19       		.uleb128 0x19
 4557 00b6 20       		.uleb128 0x20
 4558 00b7 0B       		.uleb128 0xb
 4559 00b8 01       		.uleb128 0x1
 4560 00b9 13       		.uleb128 0x13
 4561 00ba 00       		.byte	0
 4562 00bb 00       		.byte	0
 4563 00bc 0F       		.uleb128 0xf
 4564 00bd 34       		.uleb128 0x34
 4565 00be 00       		.byte	0
 4566 00bf 03       		.uleb128 0x3
 4567 00c0 08       		.uleb128 0x8
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 151


 4568 00c1 3A       		.uleb128 0x3a
 4569 00c2 0B       		.uleb128 0xb
 4570 00c3 3B       		.uleb128 0x3b
 4571 00c4 05       		.uleb128 0x5
 4572 00c5 49       		.uleb128 0x49
 4573 00c6 13       		.uleb128 0x13
 4574 00c7 00       		.byte	0
 4575 00c8 00       		.byte	0
 4576 00c9 10       		.uleb128 0x10
 4577 00ca 2E       		.uleb128 0x2e
 4578 00cb 01       		.byte	0x1
 4579 00cc 3F       		.uleb128 0x3f
 4580 00cd 19       		.uleb128 0x19
 4581 00ce 03       		.uleb128 0x3
 4582 00cf 0E       		.uleb128 0xe
 4583 00d0 3A       		.uleb128 0x3a
 4584 00d1 0B       		.uleb128 0xb
 4585 00d2 3B       		.uleb128 0x3b
 4586 00d3 05       		.uleb128 0x5
 4587 00d4 27       		.uleb128 0x27
 4588 00d5 19       		.uleb128 0x19
 4589 00d6 49       		.uleb128 0x49
 4590 00d7 13       		.uleb128 0x13
 4591 00d8 20       		.uleb128 0x20
 4592 00d9 0B       		.uleb128 0xb
 4593 00da 01       		.uleb128 0x1
 4594 00db 13       		.uleb128 0x13
 4595 00dc 00       		.byte	0
 4596 00dd 00       		.byte	0
 4597 00de 11       		.uleb128 0x11
 4598 00df 34       		.uleb128 0x34
 4599 00e0 00       		.byte	0
 4600 00e1 03       		.uleb128 0x3
 4601 00e2 0E       		.uleb128 0xe
 4602 00e3 3A       		.uleb128 0x3a
 4603 00e4 0B       		.uleb128 0xb
 4604 00e5 3B       		.uleb128 0x3b
 4605 00e6 05       		.uleb128 0x5
 4606 00e7 49       		.uleb128 0x49
 4607 00e8 13       		.uleb128 0x13
 4608 00e9 00       		.byte	0
 4609 00ea 00       		.byte	0
 4610 00eb 12       		.uleb128 0x12
 4611 00ec 2E       		.uleb128 0x2e
 4612 00ed 01       		.byte	0x1
 4613 00ee 3F       		.uleb128 0x3f
 4614 00ef 19       		.uleb128 0x19
 4615 00f0 03       		.uleb128 0x3
 4616 00f1 0E       		.uleb128 0xe
 4617 00f2 3A       		.uleb128 0x3a
 4618 00f3 0B       		.uleb128 0xb
 4619 00f4 3B       		.uleb128 0x3b
 4620 00f5 05       		.uleb128 0x5
 4621 00f6 27       		.uleb128 0x27
 4622 00f7 19       		.uleb128 0x19
 4623 00f8 11       		.uleb128 0x11
 4624 00f9 01       		.uleb128 0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 152


 4625 00fa 12       		.uleb128 0x12
 4626 00fb 06       		.uleb128 0x6
 4627 00fc 40       		.uleb128 0x40
 4628 00fd 18       		.uleb128 0x18
 4629 00fe 9742     		.uleb128 0x2117
 4630 0100 19       		.uleb128 0x19
 4631 0101 01       		.uleb128 0x1
 4632 0102 13       		.uleb128 0x13
 4633 0103 00       		.byte	0
 4634 0104 00       		.byte	0
 4635 0105 13       		.uleb128 0x13
 4636 0106 34       		.uleb128 0x34
 4637 0107 00       		.byte	0
 4638 0108 03       		.uleb128 0x3
 4639 0109 08       		.uleb128 0x8
 4640 010a 3A       		.uleb128 0x3a
 4641 010b 0B       		.uleb128 0xb
 4642 010c 3B       		.uleb128 0x3b
 4643 010d 05       		.uleb128 0x5
 4644 010e 49       		.uleb128 0x49
 4645 010f 13       		.uleb128 0x13
 4646 0110 02       		.uleb128 0x2
 4647 0111 17       		.uleb128 0x17
 4648 0112 00       		.byte	0
 4649 0113 00       		.byte	0
 4650 0114 14       		.uleb128 0x14
 4651 0115 34       		.uleb128 0x34
 4652 0116 00       		.byte	0
 4653 0117 03       		.uleb128 0x3
 4654 0118 0E       		.uleb128 0xe
 4655 0119 3A       		.uleb128 0x3a
 4656 011a 0B       		.uleb128 0xb
 4657 011b 3B       		.uleb128 0x3b
 4658 011c 05       		.uleb128 0x5
 4659 011d 49       		.uleb128 0x49
 4660 011e 13       		.uleb128 0x13
 4661 011f 02       		.uleb128 0x2
 4662 0120 17       		.uleb128 0x17
 4663 0121 00       		.byte	0
 4664 0122 00       		.byte	0
 4665 0123 15       		.uleb128 0x15
 4666 0124 2E       		.uleb128 0x2e
 4667 0125 01       		.byte	0x1
 4668 0126 3F       		.uleb128 0x3f
 4669 0127 19       		.uleb128 0x19
 4670 0128 03       		.uleb128 0x3
 4671 0129 0E       		.uleb128 0xe
 4672 012a 3A       		.uleb128 0x3a
 4673 012b 0B       		.uleb128 0xb
 4674 012c 3B       		.uleb128 0x3b
 4675 012d 0B       		.uleb128 0xb
 4676 012e 27       		.uleb128 0x27
 4677 012f 19       		.uleb128 0x19
 4678 0130 11       		.uleb128 0x11
 4679 0131 01       		.uleb128 0x1
 4680 0132 12       		.uleb128 0x12
 4681 0133 06       		.uleb128 0x6
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 153


 4682 0134 40       		.uleb128 0x40
 4683 0135 18       		.uleb128 0x18
 4684 0136 9742     		.uleb128 0x2117
 4685 0138 19       		.uleb128 0x19
 4686 0139 01       		.uleb128 0x1
 4687 013a 13       		.uleb128 0x13
 4688 013b 00       		.byte	0
 4689 013c 00       		.byte	0
 4690 013d 16       		.uleb128 0x16
 4691 013e 898201   		.uleb128 0x4109
 4692 0141 00       		.byte	0
 4693 0142 11       		.uleb128 0x11
 4694 0143 01       		.uleb128 0x1
 4695 0144 31       		.uleb128 0x31
 4696 0145 13       		.uleb128 0x13
 4697 0146 00       		.byte	0
 4698 0147 00       		.byte	0
 4699 0148 17       		.uleb128 0x17
 4700 0149 2E       		.uleb128 0x2e
 4701 014a 00       		.byte	0
 4702 014b 3F       		.uleb128 0x3f
 4703 014c 19       		.uleb128 0x19
 4704 014d 03       		.uleb128 0x3
 4705 014e 0E       		.uleb128 0xe
 4706 014f 3A       		.uleb128 0x3a
 4707 0150 0B       		.uleb128 0xb
 4708 0151 3B       		.uleb128 0x3b
 4709 0152 05       		.uleb128 0x5
 4710 0153 27       		.uleb128 0x27
 4711 0154 19       		.uleb128 0x19
 4712 0155 49       		.uleb128 0x49
 4713 0156 13       		.uleb128 0x13
 4714 0157 11       		.uleb128 0x11
 4715 0158 01       		.uleb128 0x1
 4716 0159 12       		.uleb128 0x12
 4717 015a 06       		.uleb128 0x6
 4718 015b 40       		.uleb128 0x40
 4719 015c 18       		.uleb128 0x18
 4720 015d 9742     		.uleb128 0x2117
 4721 015f 19       		.uleb128 0x19
 4722 0160 00       		.byte	0
 4723 0161 00       		.byte	0
 4724 0162 18       		.uleb128 0x18
 4725 0163 05       		.uleb128 0x5
 4726 0164 00       		.byte	0
 4727 0165 03       		.uleb128 0x3
 4728 0166 0E       		.uleb128 0xe
 4729 0167 3A       		.uleb128 0x3a
 4730 0168 0B       		.uleb128 0xb
 4731 0169 3B       		.uleb128 0x3b
 4732 016a 05       		.uleb128 0x5
 4733 016b 49       		.uleb128 0x49
 4734 016c 13       		.uleb128 0x13
 4735 016d 02       		.uleb128 0x2
 4736 016e 17       		.uleb128 0x17
 4737 016f 00       		.byte	0
 4738 0170 00       		.byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 154


 4739 0171 19       		.uleb128 0x19
 4740 0172 05       		.uleb128 0x5
 4741 0173 00       		.byte	0
 4742 0174 03       		.uleb128 0x3
 4743 0175 0E       		.uleb128 0xe
 4744 0176 3A       		.uleb128 0x3a
 4745 0177 0B       		.uleb128 0xb
 4746 0178 3B       		.uleb128 0x3b
 4747 0179 05       		.uleb128 0x5
 4748 017a 49       		.uleb128 0x49
 4749 017b 13       		.uleb128 0x13
 4750 017c 02       		.uleb128 0x2
 4751 017d 18       		.uleb128 0x18
 4752 017e 00       		.byte	0
 4753 017f 00       		.byte	0
 4754 0180 1A       		.uleb128 0x1a
 4755 0181 2E       		.uleb128 0x2e
 4756 0182 01       		.byte	0x1
 4757 0183 3F       		.uleb128 0x3f
 4758 0184 19       		.uleb128 0x19
 4759 0185 03       		.uleb128 0x3
 4760 0186 0E       		.uleb128 0xe
 4761 0187 3A       		.uleb128 0x3a
 4762 0188 0B       		.uleb128 0xb
 4763 0189 3B       		.uleb128 0x3b
 4764 018a 05       		.uleb128 0x5
 4765 018b 27       		.uleb128 0x27
 4766 018c 19       		.uleb128 0x19
 4767 018d 49       		.uleb128 0x49
 4768 018e 13       		.uleb128 0x13
 4769 018f 11       		.uleb128 0x11
 4770 0190 01       		.uleb128 0x1
 4771 0191 12       		.uleb128 0x12
 4772 0192 06       		.uleb128 0x6
 4773 0193 40       		.uleb128 0x40
 4774 0194 18       		.uleb128 0x18
 4775 0195 9742     		.uleb128 0x2117
 4776 0197 19       		.uleb128 0x19
 4777 0198 01       		.uleb128 0x1
 4778 0199 13       		.uleb128 0x13
 4779 019a 00       		.byte	0
 4780 019b 00       		.byte	0
 4781 019c 1B       		.uleb128 0x1b
 4782 019d 2E       		.uleb128 0x2e
 4783 019e 00       		.byte	0
 4784 019f 3F       		.uleb128 0x3f
 4785 01a0 19       		.uleb128 0x19
 4786 01a1 03       		.uleb128 0x3
 4787 01a2 0E       		.uleb128 0xe
 4788 01a3 3A       		.uleb128 0x3a
 4789 01a4 0B       		.uleb128 0xb
 4790 01a5 3B       		.uleb128 0x3b
 4791 01a6 05       		.uleb128 0x5
 4792 01a7 27       		.uleb128 0x27
 4793 01a8 19       		.uleb128 0x19
 4794 01a9 11       		.uleb128 0x11
 4795 01aa 01       		.uleb128 0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 155


 4796 01ab 12       		.uleb128 0x12
 4797 01ac 06       		.uleb128 0x6
 4798 01ad 40       		.uleb128 0x40
 4799 01ae 18       		.uleb128 0x18
 4800 01af 9742     		.uleb128 0x2117
 4801 01b1 19       		.uleb128 0x19
 4802 01b2 00       		.byte	0
 4803 01b3 00       		.byte	0
 4804 01b4 1C       		.uleb128 0x1c
 4805 01b5 2E       		.uleb128 0x2e
 4806 01b6 00       		.byte	0
 4807 01b7 31       		.uleb128 0x31
 4808 01b8 13       		.uleb128 0x13
 4809 01b9 11       		.uleb128 0x11
 4810 01ba 01       		.uleb128 0x1
 4811 01bb 12       		.uleb128 0x12
 4812 01bc 06       		.uleb128 0x6
 4813 01bd 40       		.uleb128 0x40
 4814 01be 18       		.uleb128 0x18
 4815 01bf 9742     		.uleb128 0x2117
 4816 01c1 19       		.uleb128 0x19
 4817 01c2 00       		.byte	0
 4818 01c3 00       		.byte	0
 4819 01c4 1D       		.uleb128 0x1d
 4820 01c5 34       		.uleb128 0x34
 4821 01c6 00       		.byte	0
 4822 01c7 03       		.uleb128 0x3
 4823 01c8 0E       		.uleb128 0xe
 4824 01c9 3A       		.uleb128 0x3a
 4825 01ca 0B       		.uleb128 0xb
 4826 01cb 3B       		.uleb128 0x3b
 4827 01cc 05       		.uleb128 0x5
 4828 01cd 49       		.uleb128 0x49
 4829 01ce 13       		.uleb128 0x13
 4830 01cf 02       		.uleb128 0x2
 4831 01d0 18       		.uleb128 0x18
 4832 01d1 00       		.byte	0
 4833 01d2 00       		.byte	0
 4834 01d3 1E       		.uleb128 0x1e
 4835 01d4 2E       		.uleb128 0x2e
 4836 01d5 01       		.byte	0x1
 4837 01d6 31       		.uleb128 0x31
 4838 01d7 13       		.uleb128 0x13
 4839 01d8 11       		.uleb128 0x11
 4840 01d9 01       		.uleb128 0x1
 4841 01da 12       		.uleb128 0x12
 4842 01db 06       		.uleb128 0x6
 4843 01dc 40       		.uleb128 0x40
 4844 01dd 18       		.uleb128 0x18
 4845 01de 9742     		.uleb128 0x2117
 4846 01e0 19       		.uleb128 0x19
 4847 01e1 01       		.uleb128 0x1
 4848 01e2 13       		.uleb128 0x13
 4849 01e3 00       		.byte	0
 4850 01e4 00       		.byte	0
 4851 01e5 1F       		.uleb128 0x1f
 4852 01e6 05       		.uleb128 0x5
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 156


 4853 01e7 00       		.byte	0
 4854 01e8 31       		.uleb128 0x31
 4855 01e9 13       		.uleb128 0x13
 4856 01ea 02       		.uleb128 0x2
 4857 01eb 17       		.uleb128 0x17
 4858 01ec 00       		.byte	0
 4859 01ed 00       		.byte	0
 4860 01ee 20       		.uleb128 0x20
 4861 01ef 05       		.uleb128 0x5
 4862 01f0 00       		.byte	0
 4863 01f1 31       		.uleb128 0x31
 4864 01f2 13       		.uleb128 0x13
 4865 01f3 02       		.uleb128 0x2
 4866 01f4 18       		.uleb128 0x18
 4867 01f5 00       		.byte	0
 4868 01f6 00       		.byte	0
 4869 01f7 21       		.uleb128 0x21
 4870 01f8 34       		.uleb128 0x34
 4871 01f9 00       		.byte	0
 4872 01fa 31       		.uleb128 0x31
 4873 01fb 13       		.uleb128 0x13
 4874 01fc 02       		.uleb128 0x2
 4875 01fd 18       		.uleb128 0x18
 4876 01fe 00       		.byte	0
 4877 01ff 00       		.byte	0
 4878 0200 22       		.uleb128 0x22
 4879 0201 34       		.uleb128 0x34
 4880 0202 00       		.byte	0
 4881 0203 31       		.uleb128 0x31
 4882 0204 13       		.uleb128 0x13
 4883 0205 1C       		.uleb128 0x1c
 4884 0206 06       		.uleb128 0x6
 4885 0207 00       		.byte	0
 4886 0208 00       		.byte	0
 4887 0209 23       		.uleb128 0x23
 4888 020a 1D       		.uleb128 0x1d
 4889 020b 01       		.byte	0x1
 4890 020c 31       		.uleb128 0x31
 4891 020d 13       		.uleb128 0x13
 4892 020e 11       		.uleb128 0x11
 4893 020f 01       		.uleb128 0x1
 4894 0210 12       		.uleb128 0x12
 4895 0211 06       		.uleb128 0x6
 4896 0212 58       		.uleb128 0x58
 4897 0213 0B       		.uleb128 0xb
 4898 0214 59       		.uleb128 0x59
 4899 0215 05       		.uleb128 0x5
 4900 0216 00       		.byte	0
 4901 0217 00       		.byte	0
 4902 0218 24       		.uleb128 0x24
 4903 0219 34       		.uleb128 0x34
 4904 021a 00       		.byte	0
 4905 021b 03       		.uleb128 0x3
 4906 021c 0E       		.uleb128 0xe
 4907 021d 3A       		.uleb128 0x3a
 4908 021e 0B       		.uleb128 0xb
 4909 021f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 157


 4910 0220 05       		.uleb128 0x5
 4911 0221 49       		.uleb128 0x49
 4912 0222 13       		.uleb128 0x13
 4913 0223 1C       		.uleb128 0x1c
 4914 0224 06       		.uleb128 0x6
 4915 0225 00       		.byte	0
 4916 0226 00       		.byte	0
 4917 0227 25       		.uleb128 0x25
 4918 0228 1D       		.uleb128 0x1d
 4919 0229 01       		.byte	0x1
 4920 022a 31       		.uleb128 0x31
 4921 022b 13       		.uleb128 0x13
 4922 022c 11       		.uleb128 0x11
 4923 022d 01       		.uleb128 0x1
 4924 022e 12       		.uleb128 0x12
 4925 022f 06       		.uleb128 0x6
 4926 0230 58       		.uleb128 0x58
 4927 0231 0B       		.uleb128 0xb
 4928 0232 59       		.uleb128 0x59
 4929 0233 05       		.uleb128 0x5
 4930 0234 01       		.uleb128 0x1
 4931 0235 13       		.uleb128 0x13
 4932 0236 00       		.byte	0
 4933 0237 00       		.byte	0
 4934 0238 26       		.uleb128 0x26
 4935 0239 34       		.uleb128 0x34
 4936 023a 00       		.byte	0
 4937 023b 31       		.uleb128 0x31
 4938 023c 13       		.uleb128 0x13
 4939 023d 00       		.byte	0
 4940 023e 00       		.byte	0
 4941 023f 27       		.uleb128 0x27
 4942 0240 34       		.uleb128 0x34
 4943 0241 00       		.byte	0
 4944 0242 31       		.uleb128 0x31
 4945 0243 13       		.uleb128 0x13
 4946 0244 1C       		.uleb128 0x1c
 4947 0245 0B       		.uleb128 0xb
 4948 0246 00       		.byte	0
 4949 0247 00       		.byte	0
 4950 0248 28       		.uleb128 0x28
 4951 0249 0B       		.uleb128 0xb
 4952 024a 01       		.byte	0x1
 4953 024b 11       		.uleb128 0x11
 4954 024c 01       		.uleb128 0x1
 4955 024d 12       		.uleb128 0x12
 4956 024e 06       		.uleb128 0x6
 4957 024f 01       		.uleb128 0x1
 4958 0250 13       		.uleb128 0x13
 4959 0251 00       		.byte	0
 4960 0252 00       		.byte	0
 4961 0253 29       		.uleb128 0x29
 4962 0254 34       		.uleb128 0x34
 4963 0255 00       		.byte	0
 4964 0256 31       		.uleb128 0x31
 4965 0257 13       		.uleb128 0x13
 4966 0258 02       		.uleb128 0x2
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 158


 4967 0259 17       		.uleb128 0x17
 4968 025a 00       		.byte	0
 4969 025b 00       		.byte	0
 4970 025c 2A       		.uleb128 0x2a
 4971 025d 898201   		.uleb128 0x4109
 4972 0260 01       		.byte	0x1
 4973 0261 11       		.uleb128 0x11
 4974 0262 01       		.uleb128 0x1
 4975 0263 31       		.uleb128 0x31
 4976 0264 13       		.uleb128 0x13
 4977 0265 01       		.uleb128 0x1
 4978 0266 13       		.uleb128 0x13
 4979 0267 00       		.byte	0
 4980 0268 00       		.byte	0
 4981 0269 2B       		.uleb128 0x2b
 4982 026a 8A8201   		.uleb128 0x410a
 4983 026d 00       		.byte	0
 4984 026e 02       		.uleb128 0x2
 4985 026f 18       		.uleb128 0x18
 4986 0270 9142     		.uleb128 0x2111
 4987 0272 18       		.uleb128 0x18
 4988 0273 00       		.byte	0
 4989 0274 00       		.byte	0
 4990 0275 2C       		.uleb128 0x2c
 4991 0276 898201   		.uleb128 0x4109
 4992 0279 01       		.byte	0x1
 4993 027a 11       		.uleb128 0x11
 4994 027b 01       		.uleb128 0x1
 4995 027c 31       		.uleb128 0x31
 4996 027d 13       		.uleb128 0x13
 4997 027e 00       		.byte	0
 4998 027f 00       		.byte	0
 4999 0280 2D       		.uleb128 0x2d
 5000 0281 01       		.uleb128 0x1
 5001 0282 01       		.byte	0x1
 5002 0283 49       		.uleb128 0x49
 5003 0284 13       		.uleb128 0x13
 5004 0285 01       		.uleb128 0x1
 5005 0286 13       		.uleb128 0x13
 5006 0287 00       		.byte	0
 5007 0288 00       		.byte	0
 5008 0289 2E       		.uleb128 0x2e
 5009 028a 21       		.uleb128 0x21
 5010 028b 00       		.byte	0
 5011 028c 49       		.uleb128 0x49
 5012 028d 13       		.uleb128 0x13
 5013 028e 2F       		.uleb128 0x2f
 5014 028f 0B       		.uleb128 0xb
 5015 0290 00       		.byte	0
 5016 0291 00       		.byte	0
 5017 0292 2F       		.uleb128 0x2f
 5018 0293 1D       		.uleb128 0x1d
 5019 0294 00       		.byte	0
 5020 0295 31       		.uleb128 0x31
 5021 0296 13       		.uleb128 0x13
 5022 0297 52       		.uleb128 0x52
 5023 0298 01       		.uleb128 0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 159


 5024 0299 55       		.uleb128 0x55
 5025 029a 17       		.uleb128 0x17
 5026 029b 58       		.uleb128 0x58
 5027 029c 0B       		.uleb128 0xb
 5028 029d 59       		.uleb128 0x59
 5029 029e 05       		.uleb128 0x5
 5030 029f 00       		.byte	0
 5031 02a0 00       		.byte	0
 5032 02a1 30       		.uleb128 0x30
 5033 02a2 2E       		.uleb128 0x2e
 5034 02a3 01       		.byte	0x1
 5035 02a4 3F       		.uleb128 0x3f
 5036 02a5 19       		.uleb128 0x19
 5037 02a6 03       		.uleb128 0x3
 5038 02a7 0E       		.uleb128 0xe
 5039 02a8 3A       		.uleb128 0x3a
 5040 02a9 0B       		.uleb128 0xb
 5041 02aa 3B       		.uleb128 0x3b
 5042 02ab 05       		.uleb128 0x5
 5043 02ac 27       		.uleb128 0x27
 5044 02ad 19       		.uleb128 0x19
 5045 02ae 11       		.uleb128 0x11
 5046 02af 01       		.uleb128 0x1
 5047 02b0 12       		.uleb128 0x12
 5048 02b1 06       		.uleb128 0x6
 5049 02b2 40       		.uleb128 0x40
 5050 02b3 18       		.uleb128 0x18
 5051 02b4 9642     		.uleb128 0x2116
 5052 02b6 19       		.uleb128 0x19
 5053 02b7 01       		.uleb128 0x1
 5054 02b8 13       		.uleb128 0x13
 5055 02b9 00       		.byte	0
 5056 02ba 00       		.byte	0
 5057 02bb 31       		.uleb128 0x31
 5058 02bc 1D       		.uleb128 0x1d
 5059 02bd 01       		.byte	0x1
 5060 02be 31       		.uleb128 0x31
 5061 02bf 13       		.uleb128 0x13
 5062 02c0 52       		.uleb128 0x52
 5063 02c1 01       		.uleb128 0x1
 5064 02c2 55       		.uleb128 0x55
 5065 02c3 17       		.uleb128 0x17
 5066 02c4 58       		.uleb128 0x58
 5067 02c5 0B       		.uleb128 0xb
 5068 02c6 59       		.uleb128 0x59
 5069 02c7 05       		.uleb128 0x5
 5070 02c8 01       		.uleb128 0x1
 5071 02c9 13       		.uleb128 0x13
 5072 02ca 00       		.byte	0
 5073 02cb 00       		.byte	0
 5074 02cc 32       		.uleb128 0x32
 5075 02cd 0B       		.uleb128 0xb
 5076 02ce 01       		.byte	0x1
 5077 02cf 55       		.uleb128 0x55
 5078 02d0 17       		.uleb128 0x17
 5079 02d1 00       		.byte	0
 5080 02d2 00       		.byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 160


 5081 02d3 33       		.uleb128 0x33
 5082 02d4 1D       		.uleb128 0x1d
 5083 02d5 00       		.byte	0
 5084 02d6 31       		.uleb128 0x31
 5085 02d7 13       		.uleb128 0x13
 5086 02d8 11       		.uleb128 0x11
 5087 02d9 01       		.uleb128 0x1
 5088 02da 12       		.uleb128 0x12
 5089 02db 06       		.uleb128 0x6
 5090 02dc 58       		.uleb128 0x58
 5091 02dd 0B       		.uleb128 0xb
 5092 02de 59       		.uleb128 0x59
 5093 02df 05       		.uleb128 0x5
 5094 02e0 00       		.byte	0
 5095 02e1 00       		.byte	0
 5096 02e2 34       		.uleb128 0x34
 5097 02e3 2E       		.uleb128 0x2e
 5098 02e4 01       		.byte	0x1
 5099 02e5 31       		.uleb128 0x31
 5100 02e6 13       		.uleb128 0x13
 5101 02e7 11       		.uleb128 0x11
 5102 02e8 01       		.uleb128 0x1
 5103 02e9 12       		.uleb128 0x12
 5104 02ea 06       		.uleb128 0x6
 5105 02eb 40       		.uleb128 0x40
 5106 02ec 18       		.uleb128 0x18
 5107 02ed 9642     		.uleb128 0x2116
 5108 02ef 19       		.uleb128 0x19
 5109 02f0 01       		.uleb128 0x1
 5110 02f1 13       		.uleb128 0x13
 5111 02f2 00       		.byte	0
 5112 02f3 00       		.byte	0
 5113 02f4 35       		.uleb128 0x35
 5114 02f5 34       		.uleb128 0x34
 5115 02f6 00       		.byte	0
 5116 02f7 03       		.uleb128 0x3
 5117 02f8 0E       		.uleb128 0xe
 5118 02f9 3A       		.uleb128 0x3a
 5119 02fa 0B       		.uleb128 0xb
 5120 02fb 3B       		.uleb128 0x3b
 5121 02fc 0B       		.uleb128 0xb
 5122 02fd 49       		.uleb128 0x49
 5123 02fe 13       		.uleb128 0x13
 5124 02ff 02       		.uleb128 0x2
 5125 0300 18       		.uleb128 0x18
 5126 0301 00       		.byte	0
 5127 0302 00       		.byte	0
 5128 0303 36       		.uleb128 0x36
 5129 0304 34       		.uleb128 0x34
 5130 0305 00       		.byte	0
 5131 0306 03       		.uleb128 0x3
 5132 0307 0E       		.uleb128 0xe
 5133 0308 3A       		.uleb128 0x3a
 5134 0309 0B       		.uleb128 0xb
 5135 030a 3B       		.uleb128 0x3b
 5136 030b 0B       		.uleb128 0xb
 5137 030c 49       		.uleb128 0x49
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 161


 5138 030d 13       		.uleb128 0x13
 5139 030e 3F       		.uleb128 0x3f
 5140 030f 19       		.uleb128 0x19
 5141 0310 02       		.uleb128 0x2
 5142 0311 18       		.uleb128 0x18
 5143 0312 00       		.byte	0
 5144 0313 00       		.byte	0
 5145 0314 37       		.uleb128 0x37
 5146 0315 26       		.uleb128 0x26
 5147 0316 00       		.byte	0
 5148 0317 49       		.uleb128 0x49
 5149 0318 13       		.uleb128 0x13
 5150 0319 00       		.byte	0
 5151 031a 00       		.byte	0
 5152 031b 38       		.uleb128 0x38
 5153 031c 2E       		.uleb128 0x2e
 5154 031d 00       		.byte	0
 5155 031e 3F       		.uleb128 0x3f
 5156 031f 19       		.uleb128 0x19
 5157 0320 3C       		.uleb128 0x3c
 5158 0321 19       		.uleb128 0x19
 5159 0322 6E       		.uleb128 0x6e
 5160 0323 0E       		.uleb128 0xe
 5161 0324 03       		.uleb128 0x3
 5162 0325 0E       		.uleb128 0xe
 5163 0326 3A       		.uleb128 0x3a
 5164 0327 0B       		.uleb128 0xb
 5165 0328 3B       		.uleb128 0x3b
 5166 0329 0B       		.uleb128 0xb
 5167 032a 00       		.byte	0
 5168 032b 00       		.byte	0
 5169 032c 00       		.byte	0
 5170              		.section	.debug_loc,"",%progbits
 5171              	.Ldebug_loc0:
 5172              	.LLST0:
 5173 0000 00000000 		.4byte	.LVL0
 5174 0004 0A000000 		.4byte	.LVL1
 5175 0008 0200     		.2byte	0x2
 5176 000a 30       		.byte	0x30
 5177 000b 9F       		.byte	0x9f
 5178 000c 0A000000 		.4byte	.LVL1
 5179 0010 16000000 		.4byte	.LVL2
 5180 0014 0100     		.2byte	0x1
 5181 0016 53       		.byte	0x53
 5182 0017 16000000 		.4byte	.LVL2
 5183 001b 18000000 		.4byte	.LVL3
 5184 001f 0300     		.2byte	0x3
 5185 0021 73       		.byte	0x73
 5186 0022 7D       		.sleb128 -3
 5187 0023 9F       		.byte	0x9f
 5188 0024 18000000 		.4byte	.LVL3
 5189 0028 20000000 		.4byte	.LVL5
 5190 002c 0100     		.2byte	0x1
 5191 002e 53       		.byte	0x53
 5192 002f 00000000 		.4byte	0
 5193 0033 00000000 		.4byte	0
 5194              	.LLST1:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 162


 5195 0037 00000000 		.4byte	.LVL0
 5196 003b 16000000 		.4byte	.LVL2
 5197 003f 0200     		.2byte	0x2
 5198 0041 33       		.byte	0x33
 5199 0042 9F       		.byte	0x9f
 5200 0043 16000000 		.4byte	.LVL2
 5201 0047 18000000 		.4byte	.LVL3
 5202 004b 0100     		.2byte	0x1
 5203 004d 53       		.byte	0x53
 5204 004e 18000000 		.4byte	.LVL3
 5205 0052 20000000 		.4byte	.LVL5
 5206 0056 0200     		.2byte	0x2
 5207 0058 33       		.byte	0x33
 5208 0059 9F       		.byte	0x9f
 5209 005a 20000000 		.4byte	.LVL5
 5210 005e 2E000000 		.4byte	.LVL6
 5211 0062 0100     		.2byte	0x1
 5212 0064 53       		.byte	0x53
 5213 0065 2E000000 		.4byte	.LVL6
 5214 0069 30000000 		.4byte	.LVL7
 5215 006d 0700     		.2byte	0x7
 5216 006f 73       		.byte	0x73
 5217 0070 B39C8080 		.sleb128 -268431821
 5217      7F
 5218 0075 9F       		.byte	0x9f
 5219 0076 00000000 		.4byte	0
 5220 007a 00000000 		.4byte	0
 5221              	.LLST2:
 5222 007e 00000000 		.4byte	.LVL9
 5223 0082 07000000 		.4byte	.LVL10-1
 5224 0086 0100     		.2byte	0x1
 5225 0088 50       		.byte	0x50
 5226 0089 07000000 		.4byte	.LVL10-1
 5227 008d 1A000000 		.4byte	.LVL14
 5228 0091 0100     		.2byte	0x1
 5229 0093 54       		.byte	0x54
 5230 0094 1A000000 		.4byte	.LVL14
 5231 0098 20000000 		.4byte	.LFE6
 5232 009c 0400     		.2byte	0x4
 5233 009e F3       		.byte	0xf3
 5234 009f 01       		.uleb128 0x1
 5235 00a0 50       		.byte	0x50
 5236 00a1 9F       		.byte	0x9f
 5237 00a2 00000000 		.4byte	0
 5238 00a6 00000000 		.4byte	0
 5239              	.LLST3:
 5240 00aa 08000000 		.4byte	.LVL10
 5241 00ae 19000000 		.4byte	.LVL13-1
 5242 00b2 0100     		.2byte	0x1
 5243 00b4 50       		.byte	0x50
 5244 00b5 00000000 		.4byte	0
 5245 00b9 00000000 		.4byte	0
 5246              	.LLST4:
 5247 00bd 10000000 		.4byte	.LVL11
 5248 00c1 14000000 		.4byte	.LVL12
 5249 00c5 0100     		.2byte	0x1
 5250 00c7 52       		.byte	0x52
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 163


 5251 00c8 14000000 		.4byte	.LVL12
 5252 00cc 19000000 		.4byte	.LVL13-1
 5253 00d0 0100     		.2byte	0x1
 5254 00d2 53       		.byte	0x53
 5255 00d3 00000000 		.4byte	0
 5256 00d7 00000000 		.4byte	0
 5257              	.LLST5:
 5258 00db 06000000 		.4byte	.LVL16
 5259 00df 0D000000 		.4byte	.LVL18-1
 5260 00e3 0100     		.2byte	0x1
 5261 00e5 50       		.byte	0x50
 5262 00e6 00000000 		.4byte	0
 5263 00ea 00000000 		.4byte	0
 5264              	.LLST6:
 5265 00ee 0A000000 		.4byte	.LVL17
 5266 00f2 12000000 		.4byte	.LVL19
 5267 00f6 0500     		.2byte	0x5
 5268 00f8 74       		.byte	0x74
 5269 00f9 00       		.sleb128 0
 5270 00fa 37       		.byte	0x37
 5271 00fb 1A       		.byte	0x1a
 5272 00fc 9F       		.byte	0x9f
 5273 00fd 12000000 		.4byte	.LVL19
 5274 0101 18000000 		.4byte	.LFE8
 5275 0105 0100     		.2byte	0x1
 5276 0107 50       		.byte	0x50
 5277 0108 00000000 		.4byte	0
 5278 010c 00000000 		.4byte	0
 5279              	.LLST7:
 5280 0110 00000000 		.4byte	.LVL20
 5281 0114 07000000 		.4byte	.LVL21-1
 5282 0118 0100     		.2byte	0x1
 5283 011a 50       		.byte	0x50
 5284 011b 07000000 		.4byte	.LVL21-1
 5285 011f 0C000000 		.4byte	.LVL22
 5286 0123 0100     		.2byte	0x1
 5287 0125 54       		.byte	0x54
 5288 0126 0C000000 		.4byte	.LVL22
 5289 012a 2C000000 		.4byte	.LFE9
 5290 012e 0400     		.2byte	0x4
 5291 0130 F3       		.byte	0xf3
 5292 0131 01       		.uleb128 0x1
 5293 0132 50       		.byte	0x50
 5294 0133 9F       		.byte	0x9f
 5295 0134 00000000 		.4byte	0
 5296 0138 00000000 		.4byte	0
 5297              	.LLST8:
 5298 013c 08000000 		.4byte	.LVL21
 5299 0140 21000000 		.4byte	.LVL23-1
 5300 0144 0100     		.2byte	0x1
 5301 0146 50       		.byte	0x50
 5302 0147 00000000 		.4byte	0
 5303 014b 00000000 		.4byte	0
 5304              	.LLST9:
 5305 014f 00000000 		.4byte	.LVL24
 5306 0153 08000000 		.4byte	.LVL25
 5307 0157 0100     		.2byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 164


 5308 0159 50       		.byte	0x50
 5309 015a 08000000 		.4byte	.LVL25
 5310 015e 14000000 		.4byte	.LFE15
 5311 0162 0100     		.2byte	0x1
 5312 0164 52       		.byte	0x52
 5313 0165 00000000 		.4byte	0
 5314 0169 00000000 		.4byte	0
 5315              	.LLST10:
 5316 016d 0A000000 		.4byte	.LVL26
 5317 0171 0C000000 		.4byte	.LVL27
 5318 0175 0500     		.2byte	0x5
 5319 0177 70       		.byte	0x70
 5320 0178 00       		.sleb128 0
 5321 0179 49       		.byte	0x49
 5322 017a 1A       		.byte	0x1a
 5323 017b 9F       		.byte	0x9f
 5324 017c 0C000000 		.4byte	.LVL27
 5325 0180 14000000 		.4byte	.LFE15
 5326 0184 0100     		.2byte	0x1
 5327 0186 50       		.byte	0x50
 5328 0187 00000000 		.4byte	0
 5329 018b 00000000 		.4byte	0
 5330              	.LLST11:
 5331 018f 00000000 		.4byte	.LVL30
 5332 0193 0A000000 		.4byte	.LVL33
 5333 0197 0100     		.2byte	0x1
 5334 0199 50       		.byte	0x50
 5335 019a 0A000000 		.4byte	.LVL33
 5336 019e 14000000 		.4byte	.LFE18
 5337 01a2 0400     		.2byte	0x4
 5338 01a4 F3       		.byte	0xf3
 5339 01a5 01       		.uleb128 0x1
 5340 01a6 50       		.byte	0x50
 5341 01a7 9F       		.byte	0x9f
 5342 01a8 00000000 		.4byte	0
 5343 01ac 00000000 		.4byte	0
 5344              	.LLST12:
 5345 01b0 04000000 		.4byte	.LVL31
 5346 01b4 06000000 		.4byte	.LVL32
 5347 01b8 0200     		.2byte	0x2
 5348 01ba 30       		.byte	0x30
 5349 01bb 9F       		.byte	0x9f
 5350 01bc 00000000 		.4byte	0
 5351 01c0 00000000 		.4byte	0
 5352              	.LLST13:
 5353 01c4 00000000 		.4byte	.LVL35
 5354 01c8 0A000000 		.4byte	.LVL38
 5355 01cc 0100     		.2byte	0x1
 5356 01ce 50       		.byte	0x50
 5357 01cf 0A000000 		.4byte	.LVL38
 5358 01d3 12000000 		.4byte	.LFE19
 5359 01d7 0400     		.2byte	0x4
 5360 01d9 F3       		.byte	0xf3
 5361 01da 01       		.uleb128 0x1
 5362 01db 50       		.byte	0x50
 5363 01dc 9F       		.byte	0x9f
 5364 01dd 00000000 		.4byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 165


 5365 01e1 00000000 		.4byte	0
 5366              	.LLST14:
 5367 01e5 04000000 		.4byte	.LVL36
 5368 01e9 06000000 		.4byte	.LVL37
 5369 01ed 0200     		.2byte	0x2
 5370 01ef 30       		.byte	0x30
 5371 01f0 9F       		.byte	0x9f
 5372 01f1 00000000 		.4byte	0
 5373 01f5 00000000 		.4byte	0
 5374              	.LLST15:
 5375 01f9 00000000 		.4byte	.LVL39
 5376 01fd 0A000000 		.4byte	.LVL42
 5377 0201 0100     		.2byte	0x1
 5378 0203 50       		.byte	0x50
 5379 0204 0A000000 		.4byte	.LVL42
 5380 0208 18000000 		.4byte	.LFE20
 5381 020c 0400     		.2byte	0x4
 5382 020e F3       		.byte	0xf3
 5383 020f 01       		.uleb128 0x1
 5384 0210 50       		.byte	0x50
 5385 0211 9F       		.byte	0x9f
 5386 0212 00000000 		.4byte	0
 5387 0216 00000000 		.4byte	0
 5388              	.LLST16:
 5389 021a 04000000 		.4byte	.LVL40
 5390 021e 06000000 		.4byte	.LVL41
 5391 0222 0200     		.2byte	0x2
 5392 0224 30       		.byte	0x30
 5393 0225 9F       		.byte	0x9f
 5394 0226 00000000 		.4byte	0
 5395 022a 00000000 		.4byte	0
 5396              	.LLST17:
 5397 022e 00000000 		.4byte	.LVL44
 5398 0232 0A000000 		.4byte	.LVL47
 5399 0236 0100     		.2byte	0x1
 5400 0238 50       		.byte	0x50
 5401 0239 0A000000 		.4byte	.LVL47
 5402 023d 14000000 		.4byte	.LFE21
 5403 0241 0400     		.2byte	0x4
 5404 0243 F3       		.byte	0xf3
 5405 0244 01       		.uleb128 0x1
 5406 0245 50       		.byte	0x50
 5407 0246 9F       		.byte	0x9f
 5408 0247 00000000 		.4byte	0
 5409 024b 00000000 		.4byte	0
 5410              	.LLST18:
 5411 024f 04000000 		.4byte	.LVL45
 5412 0253 06000000 		.4byte	.LVL46
 5413 0257 0200     		.2byte	0x2
 5414 0259 30       		.byte	0x30
 5415 025a 9F       		.byte	0x9f
 5416 025b 00000000 		.4byte	0
 5417 025f 00000000 		.4byte	0
 5418              	.LLST19:
 5419 0263 00000000 		.4byte	.LVL48
 5420 0267 23000000 		.4byte	.LVL54-1
 5421 026b 0100     		.2byte	0x1
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 166


 5422 026d 50       		.byte	0x50
 5423 026e 23000000 		.4byte	.LVL54-1
 5424 0272 40000000 		.4byte	.LFE22
 5425 0276 0400     		.2byte	0x4
 5426 0278 F3       		.byte	0xf3
 5427 0279 01       		.uleb128 0x1
 5428 027a 50       		.byte	0x50
 5429 027b 9F       		.byte	0x9f
 5430 027c 00000000 		.4byte	0
 5431 0280 00000000 		.4byte	0
 5432              	.LLST20:
 5433 0284 00000000 		.4byte	.LVL48
 5434 0288 23000000 		.4byte	.LVL54-1
 5435 028c 0100     		.2byte	0x1
 5436 028e 51       		.byte	0x51
 5437 028f 23000000 		.4byte	.LVL54-1
 5438 0293 40000000 		.4byte	.LFE22
 5439 0297 0400     		.2byte	0x4
 5440 0299 F3       		.byte	0xf3
 5441 029a 01       		.uleb128 0x1
 5442 029b 51       		.byte	0x51
 5443 029c 9F       		.byte	0x9f
 5444 029d 00000000 		.4byte	0
 5445 02a1 00000000 		.4byte	0
 5446              	.LLST21:
 5447 02a5 24000000 		.4byte	.LVL54
 5448 02a9 37000000 		.4byte	.LVL58-1
 5449 02ad 0100     		.2byte	0x1
 5450 02af 50       		.byte	0x50
 5451 02b0 00000000 		.4byte	0
 5452 02b4 00000000 		.4byte	0
 5453              	.LLST22:
 5454 02b8 1C000000 		.4byte	.LVL53
 5455 02bc 38000000 		.4byte	.LVL59
 5456 02c0 0100     		.2byte	0x1
 5457 02c2 55       		.byte	0x55
 5458 02c3 00000000 		.4byte	0
 5459 02c7 00000000 		.4byte	0
 5460              	.LLST23:
 5461 02cb 2E000000 		.4byte	.LVL55
 5462 02cf 32000000 		.4byte	.LVL57
 5463 02d3 0100     		.2byte	0x1
 5464 02d5 53       		.byte	0x53
 5465 02d6 32000000 		.4byte	.LVL57
 5466 02da 38000000 		.4byte	.LVL60
 5467 02de 0100     		.2byte	0x1
 5468 02e0 56       		.byte	0x56
 5469 02e1 00000000 		.4byte	0
 5470 02e5 00000000 		.4byte	0
 5471              	.LLST24:
 5472 02e9 0A000000 		.4byte	.LVL49
 5473 02ed 0C000000 		.4byte	.LVL50
 5474 02f1 0200     		.2byte	0x2
 5475 02f3 30       		.byte	0x30
 5476 02f4 9F       		.byte	0x9f
 5477 02f5 00000000 		.4byte	0
 5478 02f9 00000000 		.4byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 167


 5479              	.LLST25:
 5480 02fd 10000000 		.4byte	.LVL51
 5481 0301 12000000 		.4byte	.LVL52
 5482 0305 0200     		.2byte	0x2
 5483 0307 30       		.byte	0x30
 5484 0308 9F       		.byte	0x9f
 5485 0309 00000000 		.4byte	0
 5486 030d 00000000 		.4byte	0
 5487              	.LLST26:
 5488 0311 00000000 		.4byte	.LVL61
 5489 0315 1E000000 		.4byte	.LVL66
 5490 0319 0100     		.2byte	0x1
 5491 031b 50       		.byte	0x50
 5492 031c 1E000000 		.4byte	.LVL66
 5493 0320 28000000 		.4byte	.LFE23
 5494 0324 0400     		.2byte	0x4
 5495 0326 F3       		.byte	0xf3
 5496 0327 01       		.uleb128 0x1
 5497 0328 50       		.byte	0x50
 5498 0329 9F       		.byte	0x9f
 5499 032a 00000000 		.4byte	0
 5500 032e 00000000 		.4byte	0
 5501              	.LLST27:
 5502 0332 10000000 		.4byte	.LVL64
 5503 0336 1C000000 		.4byte	.LVL65
 5504 033a 0F00     		.2byte	0xf
 5505 033c 71       		.byte	0x71
 5506 033d 00       		.sleb128 0
 5507 033e 70       		.byte	0x70
 5508 033f 00       		.sleb128 0
 5509 0340 33       		.byte	0x33
 5510 0341 1A       		.byte	0x1a
 5511 0342 08       		.byte	0x8
 5512 0343 FF       		.byte	0xff
 5513 0344 1A       		.byte	0x1a
 5514 0345 33       		.byte	0x33
 5515 0346 24       		.byte	0x24
 5516 0347 23       		.byte	0x23
 5517 0348 06       		.uleb128 0x6
 5518 0349 25       		.byte	0x25
 5519 034a 9F       		.byte	0x9f
 5520 034b 00000000 		.4byte	0
 5521 034f 00000000 		.4byte	0
 5522              	.LLST28:
 5523 0353 04000000 		.4byte	.LVL62
 5524 0357 06000000 		.4byte	.LVL63
 5525 035b 0200     		.2byte	0x2
 5526 035d 30       		.byte	0x30
 5527 035e 9F       		.byte	0x9f
 5528 035f 00000000 		.4byte	0
 5529 0363 00000000 		.4byte	0
 5530              	.LLST29:
 5531 0367 00000000 		.4byte	.LVL67
 5532 036b 04000000 		.4byte	.LVL68
 5533 036f 0100     		.2byte	0x1
 5534 0371 50       		.byte	0x50
 5535 0372 04000000 		.4byte	.LVL68
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 168


 5536 0376 14000000 		.4byte	.LFE24
 5537 037a 0400     		.2byte	0x4
 5538 037c F3       		.byte	0xf3
 5539 037d 01       		.uleb128 0x1
 5540 037e 50       		.byte	0x50
 5541 037f 9F       		.byte	0x9f
 5542 0380 00000000 		.4byte	0
 5543 0384 00000000 		.4byte	0
 5544              	.LLST30:
 5545 0388 00000000 		.4byte	.LVL69
 5546 038c 06000000 		.4byte	.LVL70
 5547 0390 0100     		.2byte	0x1
 5548 0392 50       		.byte	0x50
 5549 0393 06000000 		.4byte	.LVL70
 5550 0397 18000000 		.4byte	.LFE25
 5551 039b 0400     		.2byte	0x4
 5552 039d F3       		.byte	0xf3
 5553 039e 01       		.uleb128 0x1
 5554 039f 50       		.byte	0x50
 5555 03a0 9F       		.byte	0x9f
 5556 03a1 00000000 		.4byte	0
 5557 03a5 00000000 		.4byte	0
 5558              	.LLST31:
 5559 03a9 00000000 		.4byte	.LVL71
 5560 03ad 04000000 		.4byte	.LVL72
 5561 03b1 0100     		.2byte	0x1
 5562 03b3 50       		.byte	0x50
 5563 03b4 04000000 		.4byte	.LVL72
 5564 03b8 14000000 		.4byte	.LFE26
 5565 03bc 0400     		.2byte	0x4
 5566 03be F3       		.byte	0xf3
 5567 03bf 01       		.uleb128 0x1
 5568 03c0 50       		.byte	0x50
 5569 03c1 9F       		.byte	0x9f
 5570 03c2 00000000 		.4byte	0
 5571 03c6 00000000 		.4byte	0
 5572              	.LLST32:
 5573 03ca 00000000 		.4byte	.LVL73
 5574 03ce 04000000 		.4byte	.LVL74
 5575 03d2 0100     		.2byte	0x1
 5576 03d4 50       		.byte	0x50
 5577 03d5 04000000 		.4byte	.LVL74
 5578 03d9 14000000 		.4byte	.LFE27
 5579 03dd 0400     		.2byte	0x4
 5580 03df F3       		.byte	0xf3
 5581 03e0 01       		.uleb128 0x1
 5582 03e1 50       		.byte	0x50
 5583 03e2 9F       		.byte	0x9f
 5584 03e3 00000000 		.4byte	0
 5585 03e7 00000000 		.4byte	0
 5586              	.LLST33:
 5587 03eb 00000000 		.4byte	.LVL75
 5588 03ef 04000000 		.4byte	.LVL76
 5589 03f3 0100     		.2byte	0x1
 5590 03f5 50       		.byte	0x50
 5591 03f6 04000000 		.4byte	.LVL76
 5592 03fa 14000000 		.4byte	.LFE28
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 169


 5593 03fe 0400     		.2byte	0x4
 5594 0400 F3       		.byte	0xf3
 5595 0401 01       		.uleb128 0x1
 5596 0402 50       		.byte	0x50
 5597 0403 9F       		.byte	0x9f
 5598 0404 00000000 		.4byte	0
 5599 0408 00000000 		.4byte	0
 5600              	.LLST34:
 5601 040c 00000000 		.4byte	.LVL78
 5602 0410 08000000 		.4byte	.LVL79
 5603 0414 0100     		.2byte	0x1
 5604 0416 50       		.byte	0x50
 5605 0417 08000000 		.4byte	.LVL79
 5606 041b 22000000 		.4byte	.LVL83
 5607 041f 0100     		.2byte	0x1
 5608 0421 54       		.byte	0x54
 5609 0422 00000000 		.4byte	0
 5610 0426 00000000 		.4byte	0
 5611              	.LLST35:
 5612 042a 14000000 		.4byte	.LVL87
 5613 042e 1A000000 		.4byte	.LVL88
 5614 0432 0200     		.2byte	0x2
 5615 0434 30       		.byte	0x30
 5616 0435 9F       		.byte	0x9f
 5617 0436 1A000000 		.4byte	.LVL88
 5618 043a 26000000 		.4byte	.LVL89
 5619 043e 0100     		.2byte	0x1
 5620 0440 53       		.byte	0x53
 5621 0441 26000000 		.4byte	.LVL89
 5622 0445 28000000 		.4byte	.LVL90
 5623 0449 0300     		.2byte	0x3
 5624 044b 73       		.byte	0x73
 5625 044c 7D       		.sleb128 -3
 5626 044d 9F       		.byte	0x9f
 5627 044e 28000000 		.4byte	.LVL90
 5628 0452 30000000 		.4byte	.LVL92
 5629 0456 0100     		.2byte	0x1
 5630 0458 53       		.byte	0x53
 5631 0459 00000000 		.4byte	0
 5632 045d 00000000 		.4byte	0
 5633              	.LLST36:
 5634 0461 14000000 		.4byte	.LVL87
 5635 0465 26000000 		.4byte	.LVL89
 5636 0469 0200     		.2byte	0x2
 5637 046b 33       		.byte	0x33
 5638 046c 9F       		.byte	0x9f
 5639 046d 26000000 		.4byte	.LVL89
 5640 0471 28000000 		.4byte	.LVL90
 5641 0475 0100     		.2byte	0x1
 5642 0477 53       		.byte	0x53
 5643 0478 28000000 		.4byte	.LVL90
 5644 047c 30000000 		.4byte	.LVL92
 5645 0480 0200     		.2byte	0x2
 5646 0482 33       		.byte	0x33
 5647 0483 9F       		.byte	0x9f
 5648 0484 30000000 		.4byte	.LVL92
 5649 0488 60000000 		.4byte	.LVL96
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 170


 5650 048c 0100     		.2byte	0x1
 5651 048e 53       		.byte	0x53
 5652 048f 00000000 		.4byte	0
 5653 0493 00000000 		.4byte	0
 5654              	.LLST37:
 5655 0497 14000000 		.4byte	.LVL87
 5656 049b B8000000 		.4byte	.LVL105
 5657 049f 0200     		.2byte	0x2
 5658 04a1 91       		.byte	0x91
 5659 04a2 5C       		.sleb128 -36
 5660 04a3 00000000 		.4byte	0
 5661 04a7 00000000 		.4byte	0
 5662              	.LLST38:
 5663 04ab 50000000 		.4byte	.LVL93
 5664 04af 54000000 		.4byte	.LVL94
 5665 04b3 0A00     		.2byte	0xa
 5666 04b5 71       		.byte	0x71
 5667 04b6 00       		.sleb128 0
 5668 04b7 11       		.byte	0x11
 5669 04b8 80F08380 		.sleb128 -1073678336
 5669      7C
 5670 04bd 1A       		.byte	0x1a
 5671 04be 9F       		.byte	0x9f
 5672 04bf 54000000 		.4byte	.LVL94
 5673 04c3 5A000000 		.4byte	.LVL95
 5674 04c7 0100     		.2byte	0x1
 5675 04c9 51       		.byte	0x51
 5676 04ca 6C000000 		.4byte	.LVL97
 5677 04ce 70000000 		.4byte	.LVL98
 5678 04d2 0100     		.2byte	0x1
 5679 04d4 53       		.byte	0x53
 5680 04d5 70000000 		.4byte	.LVL98
 5681 04d9 74000000 		.4byte	.LVL99
 5682 04dd 0200     		.2byte	0x2
 5683 04df 74       		.byte	0x74
 5684 04e0 00       		.sleb128 0
 5685 04e1 8C000000 		.4byte	.LVL101
 5686 04e5 B8000000 		.4byte	.LVL105
 5687 04e9 0100     		.2byte	0x1
 5688 04eb 57       		.byte	0x57
 5689 04ec 00000000 		.4byte	0
 5690 04f0 00000000 		.4byte	0
 5691              	.LLST39:
 5692 04f4 8C000000 		.4byte	.LVL101
 5693 04f8 90000000 		.4byte	.LVL102
 5694 04fc 0100     		.2byte	0x1
 5695 04fe 55       		.byte	0x55
 5696 04ff 90000000 		.4byte	.LVL102
 5697 0503 94000000 		.4byte	.LVL103
 5698 0507 0300     		.2byte	0x3
 5699 0509 75       		.byte	0x75
 5700 050a 70       		.sleb128 -16
 5701 050b 9F       		.byte	0x9f
 5702 050c 94000000 		.4byte	.LVL103
 5703 0510 B8000000 		.4byte	.LVL105
 5704 0514 0100     		.2byte	0x1
 5705 0516 55       		.byte	0x55
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 171


 5706 0517 00000000 		.4byte	0
 5707 051b 00000000 		.4byte	0
 5708              	.LLST40:
 5709 051f 00000000 		.4byte	.LVL107
 5710 0523 09000000 		.4byte	.LVL108-1
 5711 0527 0100     		.2byte	0x1
 5712 0529 50       		.byte	0x50
 5713 052a 09000000 		.4byte	.LVL108-1
 5714 052e 30000000 		.4byte	.LVL114
 5715 0532 0100     		.2byte	0x1
 5716 0534 54       		.byte	0x54
 5717 0535 30000000 		.4byte	.LVL114
 5718 0539 80000000 		.4byte	.LFE10
 5719 053d 0400     		.2byte	0x4
 5720 053f F3       		.byte	0xf3
 5721 0540 01       		.uleb128 0x1
 5722 0541 50       		.byte	0x50
 5723 0542 9F       		.byte	0x9f
 5724 0543 00000000 		.4byte	0
 5725 0547 00000000 		.4byte	0
 5726              	.LLST41:
 5727 054b 00000000 		.4byte	.LVL107
 5728 054f 16000000 		.4byte	.LVL111
 5729 0553 0200     		.2byte	0x2
 5730 0555 30       		.byte	0x30
 5731 0556 9F       		.byte	0x9f
 5732 0557 16000000 		.4byte	.LVL111
 5733 055b 1C000000 		.4byte	.LVL113
 5734 055f 0200     		.2byte	0x2
 5735 0561 31       		.byte	0x31
 5736 0562 9F       		.byte	0x9f
 5737 0563 1C000000 		.4byte	.LVL113
 5738 0567 55000000 		.4byte	.LVL115-1
 5739 056b 0100     		.2byte	0x1
 5740 056d 52       		.byte	0x52
 5741 056e 00000000 		.4byte	0
 5742 0572 00000000 		.4byte	0
 5743              	.LLST42:
 5744 0576 0C000000 		.4byte	.LVL109
 5745 057a 5E000000 		.4byte	.LVL117
 5746 057e 0100     		.2byte	0x1
 5747 0580 55       		.byte	0x55
 5748 0581 00000000 		.4byte	0
 5749 0585 00000000 		.4byte	0
 5750              	.LLST43:
 5751 0589 00000000 		.4byte	.LVL118
 5752 058d 08000000 		.4byte	.LVL119
 5753 0591 0100     		.2byte	0x1
 5754 0593 50       		.byte	0x50
 5755 0594 08000000 		.4byte	.LVL119
 5756 0598 14000000 		.4byte	.LFE32
 5757 059c 0400     		.2byte	0x4
 5758 059e F3       		.byte	0xf3
 5759 059f 01       		.uleb128 0x1
 5760 05a0 50       		.byte	0x50
 5761 05a1 9F       		.byte	0x9f
 5762 05a2 00000000 		.4byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 172


 5763 05a6 00000000 		.4byte	0
 5764              	.LLST44:
 5765 05aa 00000000 		.4byte	.LVL121
 5766 05ae 0E000000 		.4byte	.LVL122
 5767 05b2 0100     		.2byte	0x1
 5768 05b4 50       		.byte	0x50
 5769 05b5 0E000000 		.4byte	.LVL122
 5770 05b9 44000000 		.4byte	.LFE11
 5771 05bd 0400     		.2byte	0x4
 5772 05bf F3       		.byte	0xf3
 5773 05c0 01       		.uleb128 0x1
 5774 05c1 50       		.byte	0x50
 5775 05c2 9F       		.byte	0x9f
 5776 05c3 00000000 		.4byte	0
 5777 05c7 00000000 		.4byte	0
 5778              	.LLST45:
 5779 05cb 00000000 		.4byte	.LVL124
 5780 05cf 18000000 		.4byte	.LVL125
 5781 05d3 0100     		.2byte	0x1
 5782 05d5 50       		.byte	0x50
 5783 05d6 18000000 		.4byte	.LVL125
 5784 05da 48000000 		.4byte	.LFE33
 5785 05de 0400     		.2byte	0x4
 5786 05e0 F3       		.byte	0xf3
 5787 05e1 01       		.uleb128 0x1
 5788 05e2 50       		.byte	0x50
 5789 05e3 9F       		.byte	0x9f
 5790 05e4 00000000 		.4byte	0
 5791 05e8 00000000 		.4byte	0
 5792              	.LLST46:
 5793 05ec 00000000 		.4byte	.LVL128
 5794 05f0 0C000000 		.4byte	.LVL129
 5795 05f4 0200     		.2byte	0x2
 5796 05f6 30       		.byte	0x30
 5797 05f7 9F       		.byte	0x9f
 5798 05f8 0C000000 		.4byte	.LVL129
 5799 05fc 10000000 		.4byte	.LVL130
 5800 0600 0200     		.2byte	0x2
 5801 0602 31       		.byte	0x31
 5802 0603 9F       		.byte	0x9f
 5803 0604 10000000 		.4byte	.LVL130
 5804 0608 12000000 		.4byte	.LVL131
 5805 060c 0200     		.2byte	0x2
 5806 060e 32       		.byte	0x32
 5807 060f 9F       		.byte	0x9f
 5808 0610 12000000 		.4byte	.LVL131
 5809 0614 14000000 		.4byte	.LVL132
 5810 0618 0200     		.2byte	0x2
 5811 061a 33       		.byte	0x33
 5812 061b 9F       		.byte	0x9f
 5813 061c 14000000 		.4byte	.LVL132
 5814 0620 54000000 		.4byte	.LFE35
 5815 0624 0200     		.2byte	0x2
 5816 0626 35       		.byte	0x35
 5817 0627 9F       		.byte	0x9f
 5818 0628 00000000 		.4byte	0
 5819 062c 00000000 		.4byte	0
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 173


 5820              	.LLST47:
 5821 0630 18000000 		.4byte	.LVL134
 5822 0634 22000000 		.4byte	.LVL135
 5823 0638 0200     		.2byte	0x2
 5824 063a 31       		.byte	0x31
 5825 063b 9F       		.byte	0x9f
 5826 063c 00000000 		.4byte	0
 5827 0640 00000000 		.4byte	0
 5828              	.LLST49:
 5829 0644 14000000 		.4byte	.LVL132
 5830 0648 18000000 		.4byte	.LVL134
 5831 064c 0600     		.2byte	0x6
 5832 064e 03       		.byte	0x3
 5833 064f 00000000 		.4byte	CySysTickServiceCallbacks
 5834 0653 9F       		.byte	0x9f
 5835 0654 00000000 		.4byte	0
 5836 0658 00000000 		.4byte	0
 5837              	.LLST50:
 5838 065c 14000000 		.4byte	.LVL132
 5839 0660 18000000 		.4byte	.LVL134
 5840 0664 0200     		.2byte	0x2
 5841 0666 3F       		.byte	0x3f
 5842 0667 9F       		.byte	0x9f
 5843 0668 00000000 		.4byte	0
 5844 066c 00000000 		.4byte	0
 5845              	.LLST51:
 5846 0670 14000000 		.4byte	.LVL132
 5847 0674 16000000 		.4byte	.LVL133
 5848 0678 0500     		.2byte	0x5
 5849 067a 0C       		.byte	0xc
 5850 067b 3C000020 		.4byte	0x2000003c
 5851 067f 16000000 		.4byte	.LVL133
 5852 0683 18000000 		.4byte	.LVL134
 5853 0687 0200     		.2byte	0x2
 5854 0689 73       		.byte	0x73
 5855 068a 00       		.sleb128 0
 5856 068b 00000000 		.4byte	0
 5857 068f 00000000 		.4byte	0
 5858              	.LLST52:
 5859 0693 2C000000 		.4byte	.LVL136
 5860 0697 30000000 		.4byte	.LVL137
 5861 069b 0100     		.2byte	0x1
 5862 069d 50       		.byte	0x50
 5863 069e 00000000 		.4byte	0
 5864 06a2 00000000 		.4byte	0
 5865              	.LLST53:
 5866 06a6 00000000 		.4byte	.LVL141
 5867 06aa 04000000 		.4byte	.LVL142
 5868 06ae 0100     		.2byte	0x1
 5869 06b0 50       		.byte	0x50
 5870 06b1 04000000 		.4byte	.LVL142
 5871 06b5 10000000 		.4byte	.LFE40
 5872 06b9 0400     		.2byte	0x4
 5873 06bb F3       		.byte	0xf3
 5874 06bc 01       		.uleb128 0x1
 5875 06bd 50       		.byte	0x50
 5876 06be 9F       		.byte	0x9f
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 174


 5877 06bf 00000000 		.4byte	0
 5878 06c3 00000000 		.4byte	0
 5879              	.LLST54:
 5880 06c7 0A000000 		.4byte	.LVL144
 5881 06cb 0E000000 		.4byte	.LVL145
 5882 06cf 0200     		.2byte	0x2
 5883 06d1 31       		.byte	0x31
 5884 06d2 9F       		.byte	0x9f
 5885 06d3 00000000 		.4byte	0
 5886 06d7 00000000 		.4byte	0
 5887              	.LLST55:
 5888 06db 00000000 		.4byte	.LVL148
 5889 06df 06000000 		.4byte	.LVL149
 5890 06e3 0100     		.2byte	0x1
 5891 06e5 50       		.byte	0x50
 5892 06e6 06000000 		.4byte	.LVL149
 5893 06ea 10000000 		.4byte	.LFE47
 5894 06ee 0400     		.2byte	0x4
 5895 06f0 F3       		.byte	0xf3
 5896 06f1 01       		.uleb128 0x1
 5897 06f2 50       		.byte	0x50
 5898 06f3 9F       		.byte	0x9f
 5899 06f4 00000000 		.4byte	0
 5900 06f8 00000000 		.4byte	0
 5901              	.LLST56:
 5902 06fc 00000000 		.4byte	.LVL150
 5903 0700 04000000 		.4byte	.LVL151
 5904 0704 0100     		.2byte	0x1
 5905 0706 50       		.byte	0x50
 5906 0707 04000000 		.4byte	.LVL151
 5907 070b 0C000000 		.4byte	.LFE48
 5908 070f 0400     		.2byte	0x4
 5909 0711 F3       		.byte	0xf3
 5910 0712 01       		.uleb128 0x1
 5911 0713 50       		.byte	0x50
 5912 0714 9F       		.byte	0x9f
 5913 0715 00000000 		.4byte	0
 5914 0719 00000000 		.4byte	0
 5915              	.LLST57:
 5916 071d 00000000 		.4byte	.LVL153
 5917 0721 08000000 		.4byte	.LVL154
 5918 0725 0100     		.2byte	0x1
 5919 0727 50       		.byte	0x50
 5920 0728 08000000 		.4byte	.LVL154
 5921 072c 20000000 		.4byte	.LFE51
 5922 0730 0400     		.2byte	0x4
 5923 0732 F3       		.byte	0xf3
 5924 0733 01       		.uleb128 0x1
 5925 0734 50       		.byte	0x50
 5926 0735 9F       		.byte	0x9f
 5927 0736 00000000 		.4byte	0
 5928 073a 00000000 		.4byte	0
 5929              	.LLST58:
 5930 073e 0A000000 		.4byte	.LVL155
 5931 0742 12000000 		.4byte	.LVL156
 5932 0746 0100     		.2byte	0x1
 5933 0748 53       		.byte	0x53
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 175


 5934 0749 12000000 		.4byte	.LVL156
 5935 074d 20000000 		.4byte	.LFE51
 5936 0751 0100     		.2byte	0x1
 5937 0753 50       		.byte	0x50
 5938 0754 00000000 		.4byte	0
 5939 0758 00000000 		.4byte	0
 5940              	.LLST59:
 5941 075c 00000000 		.4byte	.LVL157
 5942 0760 08000000 		.4byte	.LVL158
 5943 0764 0100     		.2byte	0x1
 5944 0766 50       		.byte	0x50
 5945 0767 08000000 		.4byte	.LVL158
 5946 076b 20000000 		.4byte	.LFE52
 5947 076f 0400     		.2byte	0x4
 5948 0771 F3       		.byte	0xf3
 5949 0772 01       		.uleb128 0x1
 5950 0773 50       		.byte	0x50
 5951 0774 9F       		.byte	0x9f
 5952 0775 00000000 		.4byte	0
 5953 0779 00000000 		.4byte	0
 5954              	.LLST60:
 5955 077d 0A000000 		.4byte	.LVL159
 5956 0781 12000000 		.4byte	.LVL160
 5957 0785 0100     		.2byte	0x1
 5958 0787 53       		.byte	0x53
 5959 0788 12000000 		.4byte	.LVL160
 5960 078c 20000000 		.4byte	.LFE52
 5961 0790 0100     		.2byte	0x1
 5962 0792 50       		.byte	0x50
 5963 0793 00000000 		.4byte	0
 5964 0797 00000000 		.4byte	0
 5965              	.LLST61:
 5966 079b 00000000 		.4byte	.LVL161
 5967 079f 08000000 		.4byte	.LVL162
 5968 07a3 0100     		.2byte	0x1
 5969 07a5 50       		.byte	0x50
 5970 07a6 08000000 		.4byte	.LVL162
 5971 07aa 20000000 		.4byte	.LFE53
 5972 07ae 0400     		.2byte	0x4
 5973 07b0 F3       		.byte	0xf3
 5974 07b1 01       		.uleb128 0x1
 5975 07b2 50       		.byte	0x50
 5976 07b3 9F       		.byte	0x9f
 5977 07b4 00000000 		.4byte	0
 5978 07b8 00000000 		.4byte	0
 5979              	.LLST62:
 5980 07bc 0A000000 		.4byte	.LVL163
 5981 07c0 12000000 		.4byte	.LVL164
 5982 07c4 0100     		.2byte	0x1
 5983 07c6 53       		.byte	0x53
 5984 07c7 12000000 		.4byte	.LVL164
 5985 07cb 20000000 		.4byte	.LFE53
 5986 07cf 0100     		.2byte	0x1
 5987 07d1 50       		.byte	0x50
 5988 07d2 00000000 		.4byte	0
 5989 07d6 00000000 		.4byte	0
 5990              	.LLST63:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 176


 5991 07da 00000000 		.4byte	.LVL165
 5992 07de 06000000 		.4byte	.LVL166
 5993 07e2 0100     		.2byte	0x1
 5994 07e4 50       		.byte	0x50
 5995 07e5 06000000 		.4byte	.LVL166
 5996 07e9 08000000 		.4byte	.LVL167
 5997 07ed 0400     		.2byte	0x4
 5998 07ef F3       		.byte	0xf3
 5999 07f0 01       		.uleb128 0x1
 6000 07f1 50       		.byte	0x50
 6001 07f2 9F       		.byte	0x9f
 6002 07f3 08000000 		.4byte	.LVL167
 6003 07f7 0E000000 		.4byte	.LVL168
 6004 07fb 0100     		.2byte	0x1
 6005 07fd 50       		.byte	0x50
 6006 07fe 0E000000 		.4byte	.LVL168
 6007 0802 10000000 		.4byte	.LVL169
 6008 0806 0400     		.2byte	0x4
 6009 0808 F3       		.byte	0xf3
 6010 0809 01       		.uleb128 0x1
 6011 080a 50       		.byte	0x50
 6012 080b 9F       		.byte	0x9f
 6013 080c 10000000 		.4byte	.LVL169
 6014 0810 16000000 		.4byte	.LVL170
 6015 0814 0100     		.2byte	0x1
 6016 0816 50       		.byte	0x50
 6017 0817 16000000 		.4byte	.LVL170
 6018 081b 2A000000 		.4byte	.LVL174
 6019 081f 0400     		.2byte	0x4
 6020 0821 F3       		.byte	0xf3
 6021 0822 01       		.uleb128 0x1
 6022 0823 50       		.byte	0x50
 6023 0824 9F       		.byte	0x9f
 6024 0825 2A000000 		.4byte	.LVL174
 6025 0829 2C000000 		.4byte	.LVL175
 6026 082d 0100     		.2byte	0x1
 6027 082f 50       		.byte	0x50
 6028 0830 2C000000 		.4byte	.LVL175
 6029 0834 40000000 		.4byte	.LFE54
 6030 0838 0400     		.2byte	0x4
 6031 083a F3       		.byte	0xf3
 6032 083b 01       		.uleb128 0x1
 6033 083c 50       		.byte	0x50
 6034 083d 9F       		.byte	0x9f
 6035 083e 00000000 		.4byte	0
 6036 0842 00000000 		.4byte	0
 6037              	.LLST64:
 6038 0846 00000000 		.4byte	.LVL165
 6039 084a 1C000000 		.4byte	.LVL171
 6040 084e 0100     		.2byte	0x1
 6041 0850 51       		.byte	0x51
 6042 0851 1C000000 		.4byte	.LVL171
 6043 0855 2A000000 		.4byte	.LVL174
 6044 0859 0400     		.2byte	0x4
 6045 085b F3       		.byte	0xf3
 6046 085c 01       		.uleb128 0x1
 6047 085d 51       		.byte	0x51
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 177


 6048 085e 9F       		.byte	0x9f
 6049 085f 2A000000 		.4byte	.LVL174
 6050 0863 2C000000 		.4byte	.LVL175
 6051 0867 0100     		.2byte	0x1
 6052 0869 51       		.byte	0x51
 6053 086a 2C000000 		.4byte	.LVL175
 6054 086e 40000000 		.4byte	.LFE54
 6055 0872 0400     		.2byte	0x4
 6056 0874 F3       		.byte	0xf3
 6057 0875 01       		.uleb128 0x1
 6058 0876 51       		.byte	0x51
 6059 0877 9F       		.byte	0x9f
 6060 0878 00000000 		.4byte	0
 6061 087c 00000000 		.4byte	0
 6062              	.LLST65:
 6063 0880 1E000000 		.4byte	.LVL172
 6064 0884 26000000 		.4byte	.LVL173
 6065 0888 0100     		.2byte	0x1
 6066 088a 53       		.byte	0x53
 6067 088b 26000000 		.4byte	.LVL173
 6068 088f 2A000000 		.4byte	.LVL174
 6069 0893 0100     		.2byte	0x1
 6070 0895 51       		.byte	0x51
 6071 0896 00000000 		.4byte	0
 6072 089a 00000000 		.4byte	0
 6073              	.LLST66:
 6074 089e 2A000000 		.4byte	.LVL174
 6075 08a2 2C000000 		.4byte	.LVL175
 6076 08a6 0200     		.2byte	0x2
 6077 08a8 30       		.byte	0x30
 6078 08a9 9F       		.byte	0x9f
 6079 08aa 00000000 		.4byte	0
 6080 08ae 00000000 		.4byte	0
 6081              		.section	.debug_aranges,"",%progbits
 6082 0000 C4010000 		.4byte	0x1c4
 6083 0004 0200     		.2byte	0x2
 6084 0006 00000000 		.4byte	.Ldebug_info0
 6085 000a 04       		.byte	0x4
 6086 000b 00       		.byte	0
 6087 000c 0000     		.2byte	0
 6088 000e 0000     		.2byte	0
 6089 0010 00000000 		.4byte	.LFB4
 6090 0014 50000000 		.4byte	.LFE4-.LFB4
 6091 0018 00000000 		.4byte	.LFB2
 6092 001c 18000000 		.4byte	.LFE2-.LFB2
 6093 0020 00000000 		.4byte	.LFB5
 6094 0024 10000000 		.4byte	.LFE5-.LFB5
 6095 0028 00000000 		.4byte	.LFB6
 6096 002c 20000000 		.4byte	.LFE6-.LFB6
 6097 0030 00000000 		.4byte	.LFB7
 6098 0034 34000000 		.4byte	.LFE7-.LFB7
 6099 0038 00000000 		.4byte	.LFB8
 6100 003c 18000000 		.4byte	.LFE8-.LFB8
 6101 0040 00000000 		.4byte	.LFB9
 6102 0044 2C000000 		.4byte	.LFE9-.LFB9
 6103 0048 00000000 		.4byte	.LFB12
 6104 004c 20000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 178


 6105 0050 00000000 		.4byte	.LFB13
 6106 0054 10000000 		.4byte	.LFE13-.LFB13
 6107 0058 00000000 		.4byte	.LFB14
 6108 005c 0C000000 		.4byte	.LFE14-.LFB14
 6109 0060 00000000 		.4byte	.LFB15
 6110 0064 14000000 		.4byte	.LFE15-.LFB15
 6111 0068 00000000 		.4byte	.LFB16
 6112 006c 10000000 		.4byte	.LFE16-.LFB16
 6113 0070 00000000 		.4byte	.LFB17
 6114 0074 0C000000 		.4byte	.LFE17-.LFB17
 6115 0078 00000000 		.4byte	.LFB18
 6116 007c 14000000 		.4byte	.LFE18-.LFB18
 6117 0080 00000000 		.4byte	.LFB19
 6118 0084 12000000 		.4byte	.LFE19-.LFB19
 6119 0088 00000000 		.4byte	.LFB20
 6120 008c 18000000 		.4byte	.LFE20-.LFB20
 6121 0090 00000000 		.4byte	.LFB21
 6122 0094 14000000 		.4byte	.LFE21-.LFB21
 6123 0098 00000000 		.4byte	.LFB22
 6124 009c 40000000 		.4byte	.LFE22-.LFB22
 6125 00a0 00000000 		.4byte	.LFB23
 6126 00a4 28000000 		.4byte	.LFE23-.LFB23
 6127 00a8 00000000 		.4byte	.LFB24
 6128 00ac 14000000 		.4byte	.LFE24-.LFB24
 6129 00b0 00000000 		.4byte	.LFB25
 6130 00b4 18000000 		.4byte	.LFE25-.LFB25
 6131 00b8 00000000 		.4byte	.LFB26
 6132 00bc 14000000 		.4byte	.LFE26-.LFB26
 6133 00c0 00000000 		.4byte	.LFB27
 6134 00c4 14000000 		.4byte	.LFE27-.LFB27
 6135 00c8 00000000 		.4byte	.LFB28
 6136 00cc 14000000 		.4byte	.LFE28-.LFB28
 6137 00d0 00000000 		.4byte	.LFB29
 6138 00d4 04000000 		.4byte	.LFE29-.LFB29
 6139 00d8 00000000 		.4byte	.LFB30
 6140 00dc 18000000 		.4byte	.LFE30-.LFB30
 6141 00e0 00000000 		.4byte	.LFB31
 6142 00e4 2C000000 		.4byte	.LFE31-.LFB31
 6143 00e8 00000000 		.4byte	.LFB3
 6144 00ec E4000000 		.4byte	.LFE3-.LFB3
 6145 00f0 00000000 		.4byte	.LFB1
 6146 00f4 18000000 		.4byte	.LFE1-.LFB1
 6147 00f8 00000000 		.4byte	.LFB10
 6148 00fc 80000000 		.4byte	.LFE10-.LFB10
 6149 0100 00000000 		.4byte	.LFB32
 6150 0104 14000000 		.4byte	.LFE32-.LFB32
 6151 0108 00000000 		.4byte	.LFB11
 6152 010c 44000000 		.4byte	.LFE11-.LFB11
 6153 0110 00000000 		.4byte	.LFB33
 6154 0114 48000000 		.4byte	.LFE33-.LFB33
 6155 0118 00000000 		.4byte	.LFB35
 6156 011c 54000000 		.4byte	.LFE35-.LFB35
 6157 0120 00000000 		.4byte	.LFB37
 6158 0124 10000000 		.4byte	.LFE37-.LFB37
 6159 0128 00000000 		.4byte	.LFB38
 6160 012c 10000000 		.4byte	.LFE38-.LFB38
 6161 0130 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 179


 6162 0134 18000000 		.4byte	.LFE36-.LFB36
 6163 0138 00000000 		.4byte	.LFB34
 6164 013c 1C000000 		.4byte	.LFE34-.LFB34
 6165 0140 00000000 		.4byte	.LFB39
 6166 0144 10000000 		.4byte	.LFE39-.LFB39
 6167 0148 00000000 		.4byte	.LFB40
 6168 014c 10000000 		.4byte	.LFE40-.LFB40
 6169 0150 00000000 		.4byte	.LFB41
 6170 0154 10000000 		.4byte	.LFE41-.LFB41
 6171 0158 00000000 		.4byte	.LFB42
 6172 015c 10000000 		.4byte	.LFE42-.LFB42
 6173 0160 00000000 		.4byte	.LFB43
 6174 0164 18000000 		.4byte	.LFE43-.LFB43
 6175 0168 00000000 		.4byte	.LFB44
 6176 016c 10000000 		.4byte	.LFE44-.LFB44
 6177 0170 00000000 		.4byte	.LFB45
 6178 0174 10000000 		.4byte	.LFE45-.LFB45
 6179 0178 00000000 		.4byte	.LFB49
 6180 017c 24000000 		.4byte	.LFE49-.LFB49
 6181 0180 00000000 		.4byte	.LFB46
 6182 0184 0C000000 		.4byte	.LFE46-.LFB46
 6183 0188 00000000 		.4byte	.LFB47
 6184 018c 10000000 		.4byte	.LFE47-.LFB47
 6185 0190 00000000 		.4byte	.LFB48
 6186 0194 0C000000 		.4byte	.LFE48-.LFB48
 6187 0198 00000000 		.4byte	.LFB50
 6188 019c 74000000 		.4byte	.LFE50-.LFB50
 6189 01a0 00000000 		.4byte	.LFB51
 6190 01a4 20000000 		.4byte	.LFE51-.LFB51
 6191 01a8 00000000 		.4byte	.LFB52
 6192 01ac 20000000 		.4byte	.LFE52-.LFB52
 6193 01b0 00000000 		.4byte	.LFB53
 6194 01b4 20000000 		.4byte	.LFE53-.LFB53
 6195 01b8 00000000 		.4byte	.LFB54
 6196 01bc 40000000 		.4byte	.LFE54-.LFB54
 6197 01c0 00000000 		.4byte	0
 6198 01c4 00000000 		.4byte	0
 6199              		.section	.debug_ranges,"",%progbits
 6200              	.Ldebug_ranges0:
 6201 0000 2C000000 		.4byte	.LBB48
 6202 0004 2E000000 		.4byte	.LBE48
 6203 0008 2E000000 		.4byte	.LBB51
 6204 000c 30000000 		.4byte	.LBE51
 6205 0010 00000000 		.4byte	0
 6206 0014 00000000 		.4byte	0
 6207 0018 04000000 		.4byte	.LBB62
 6208 001c 06000000 		.4byte	.LBE62
 6209 0020 18000000 		.4byte	.LBB75
 6210 0024 1E000000 		.4byte	.LBE75
 6211 0028 20000000 		.4byte	.LBB76
 6212 002c 22000000 		.4byte	.LBE76
 6213 0030 00000000 		.4byte	0
 6214 0034 00000000 		.4byte	0
 6215 0038 08000000 		.4byte	.LBB69
 6216 003c 0A000000 		.4byte	.LBE69
 6217 0040 14000000 		.4byte	.LBB73
 6218 0044 16000000 		.4byte	.LBE73
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 180


 6219 0048 16000000 		.4byte	.LBB74
 6220 004c 18000000 		.4byte	.LBE74
 6221 0050 00000000 		.4byte	0
 6222 0054 00000000 		.4byte	0
 6223 0058 04000000 		.4byte	.LBB83
 6224 005c 06000000 		.4byte	.LBE83
 6225 0060 0A000000 		.4byte	.LBB86
 6226 0064 0E000000 		.4byte	.LBE86
 6227 0068 00000000 		.4byte	0
 6228 006c 00000000 		.4byte	0
 6229 0070 00000000 		.4byte	.LFB4
 6230 0074 50000000 		.4byte	.LFE4
 6231 0078 00000000 		.4byte	.LFB2
 6232 007c 18000000 		.4byte	.LFE2
 6233 0080 00000000 		.4byte	.LFB5
 6234 0084 10000000 		.4byte	.LFE5
 6235 0088 00000000 		.4byte	.LFB6
 6236 008c 20000000 		.4byte	.LFE6
 6237 0090 00000000 		.4byte	.LFB7
 6238 0094 34000000 		.4byte	.LFE7
 6239 0098 00000000 		.4byte	.LFB8
 6240 009c 18000000 		.4byte	.LFE8
 6241 00a0 00000000 		.4byte	.LFB9
 6242 00a4 2C000000 		.4byte	.LFE9
 6243 00a8 00000000 		.4byte	.LFB12
 6244 00ac 20000000 		.4byte	.LFE12
 6245 00b0 00000000 		.4byte	.LFB13
 6246 00b4 10000000 		.4byte	.LFE13
 6247 00b8 00000000 		.4byte	.LFB14
 6248 00bc 0C000000 		.4byte	.LFE14
 6249 00c0 00000000 		.4byte	.LFB15
 6250 00c4 14000000 		.4byte	.LFE15
 6251 00c8 00000000 		.4byte	.LFB16
 6252 00cc 10000000 		.4byte	.LFE16
 6253 00d0 00000000 		.4byte	.LFB17
 6254 00d4 0C000000 		.4byte	.LFE17
 6255 00d8 00000000 		.4byte	.LFB18
 6256 00dc 14000000 		.4byte	.LFE18
 6257 00e0 00000000 		.4byte	.LFB19
 6258 00e4 12000000 		.4byte	.LFE19
 6259 00e8 00000000 		.4byte	.LFB20
 6260 00ec 18000000 		.4byte	.LFE20
 6261 00f0 00000000 		.4byte	.LFB21
 6262 00f4 14000000 		.4byte	.LFE21
 6263 00f8 00000000 		.4byte	.LFB22
 6264 00fc 40000000 		.4byte	.LFE22
 6265 0100 00000000 		.4byte	.LFB23
 6266 0104 28000000 		.4byte	.LFE23
 6267 0108 00000000 		.4byte	.LFB24
 6268 010c 14000000 		.4byte	.LFE24
 6269 0110 00000000 		.4byte	.LFB25
 6270 0114 18000000 		.4byte	.LFE25
 6271 0118 00000000 		.4byte	.LFB26
 6272 011c 14000000 		.4byte	.LFE26
 6273 0120 00000000 		.4byte	.LFB27
 6274 0124 14000000 		.4byte	.LFE27
 6275 0128 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 181


 6276 012c 14000000 		.4byte	.LFE28
 6277 0130 00000000 		.4byte	.LFB29
 6278 0134 04000000 		.4byte	.LFE29
 6279 0138 00000000 		.4byte	.LFB30
 6280 013c 18000000 		.4byte	.LFE30
 6281 0140 00000000 		.4byte	.LFB31
 6282 0144 2C000000 		.4byte	.LFE31
 6283 0148 00000000 		.4byte	.LFB3
 6284 014c E4000000 		.4byte	.LFE3
 6285 0150 00000000 		.4byte	.LFB1
 6286 0154 18000000 		.4byte	.LFE1
 6287 0158 00000000 		.4byte	.LFB10
 6288 015c 80000000 		.4byte	.LFE10
 6289 0160 00000000 		.4byte	.LFB32
 6290 0164 14000000 		.4byte	.LFE32
 6291 0168 00000000 		.4byte	.LFB11
 6292 016c 44000000 		.4byte	.LFE11
 6293 0170 00000000 		.4byte	.LFB33
 6294 0174 48000000 		.4byte	.LFE33
 6295 0178 00000000 		.4byte	.LFB35
 6296 017c 54000000 		.4byte	.LFE35
 6297 0180 00000000 		.4byte	.LFB37
 6298 0184 10000000 		.4byte	.LFE37
 6299 0188 00000000 		.4byte	.LFB38
 6300 018c 10000000 		.4byte	.LFE38
 6301 0190 00000000 		.4byte	.LFB36
 6302 0194 18000000 		.4byte	.LFE36
 6303 0198 00000000 		.4byte	.LFB34
 6304 019c 1C000000 		.4byte	.LFE34
 6305 01a0 00000000 		.4byte	.LFB39
 6306 01a4 10000000 		.4byte	.LFE39
 6307 01a8 00000000 		.4byte	.LFB40
 6308 01ac 10000000 		.4byte	.LFE40
 6309 01b0 00000000 		.4byte	.LFB41
 6310 01b4 10000000 		.4byte	.LFE41
 6311 01b8 00000000 		.4byte	.LFB42
 6312 01bc 10000000 		.4byte	.LFE42
 6313 01c0 00000000 		.4byte	.LFB43
 6314 01c4 18000000 		.4byte	.LFE43
 6315 01c8 00000000 		.4byte	.LFB44
 6316 01cc 10000000 		.4byte	.LFE44
 6317 01d0 00000000 		.4byte	.LFB45
 6318 01d4 10000000 		.4byte	.LFE45
 6319 01d8 00000000 		.4byte	.LFB49
 6320 01dc 24000000 		.4byte	.LFE49
 6321 01e0 00000000 		.4byte	.LFB46
 6322 01e4 0C000000 		.4byte	.LFE46
 6323 01e8 00000000 		.4byte	.LFB47
 6324 01ec 10000000 		.4byte	.LFE47
 6325 01f0 00000000 		.4byte	.LFB48
 6326 01f4 0C000000 		.4byte	.LFE48
 6327 01f8 00000000 		.4byte	.LFB50
 6328 01fc 74000000 		.4byte	.LFE50
 6329 0200 00000000 		.4byte	.LFB51
 6330 0204 20000000 		.4byte	.LFE51
 6331 0208 00000000 		.4byte	.LFB52
 6332 020c 20000000 		.4byte	.LFE52
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 182


 6333 0210 00000000 		.4byte	.LFB53
 6334 0214 20000000 		.4byte	.LFE53
 6335 0218 00000000 		.4byte	.LFB54
 6336 021c 40000000 		.4byte	.LFE54
 6337 0220 00000000 		.4byte	0
 6338 0224 00000000 		.4byte	0
 6339              		.section	.debug_line,"",%progbits
 6340              	.Ldebug_line0:
 6341 0000 FA050000 		.section	.debug_str,"MS",%progbits,1
 6341      02006700 
 6341      00000201 
 6341      FB0E0D00 
 6341      01010101 
 6342              	.LASF38:
 6343 0000 72616D56 		.ascii	"ramVectorTable\000"
 6343      6563746F 
 6343      72546162 
 6343      6C6500
 6344              	.LASF10:
 6345 000f 75696E74 		.ascii	"uint16\000"
 6345      313600
 6346              	.LASF55:
 6347 0016 696E7453 		.ascii	"intState\000"
 6347      74617465 
 6347      00
 6348              	.LASF41:
 6349 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6349      73436C6B 
 6349      57726974 
 6349      65486663 
 6349      6C6B4469 
 6350              	.LASF113:
 6351 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 6351      73436C6B 
 6351      50756D70 
 6351      436F6E66 
 6351      696700
 6352              	.LASF37:
 6353 004b 6F6C6449 		.ascii	"oldIsr\000"
 6353      737200
 6354              	.LASF96:
 6355 0052 72657456 		.ascii	"retVal\000"
 6355      616C00
 6356              	.LASF54:
 6357 0059 43794469 		.ascii	"CyDisableInts\000"
 6357      7361626C 
 6357      65496E74 
 6357      7300
 6358              	.LASF121:
 6359 0067 433A5C55 		.ascii	"C:\\Users\\Melody\\Desktop\\Programming_Stuff\\FRUC"
 6359      73657273 
 6359      5C4D656C 
 6359      6F64795C 
 6359      4465736B 
 6360 0095 445C4461 		.ascii	"D\\Dashboard-Firmware-FE10\\Dashboard-Firmware-FE9\\"
 6360      7368626F 
 6360      6172642D 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 183


 6360      4669726D 
 6360      77617265 
 6361 00c6 44617368 		.ascii	"Dashboard.cydsn\000"
 6361      626F6172 
 6361      642E6379 
 6361      64736E00 
 6362              	.LASF7:
 6363 00d6 6C6F6E67 		.ascii	"long long unsigned int\000"
 6363      206C6F6E 
 6363      6720756E 
 6363      7369676E 
 6363      65642069 
 6364              	.LASF76:
 6365 00ed 70617261 		.ascii	"parameters\000"
 6365      6D657465 
 6365      727300
 6366              	.LASF56:
 6367 00f8 4379456E 		.ascii	"CyEnableInts\000"
 6367      61626C65 
 6367      496E7473 
 6367      00
 6368              	.LASF105:
 6369 0105 696E7465 		.ascii	"interfaceNumber\000"
 6369      72666163 
 6369      654E756D 
 6369      62657200 
 6370              	.LASF71:
 6371 0115 4379536F 		.ascii	"CySoftwareReset\000"
 6371      66747761 
 6371      72655265 
 6371      73657400 
 6372              	.LASF86:
 6373 0125 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6373      73546963 
 6373      6B456E61 
 6373      626C6549 
 6373      6E746572 
 6374              	.LASF66:
 6375 013e 4379496E 		.ascii	"CyIntGetState\000"
 6375      74476574 
 6375      53746174 
 6375      6500
 6376              	.LASF6:
 6377 014c 6C6F6E67 		.ascii	"long long int\000"
 6377      206C6F6E 
 6377      6720696E 
 6377      7400
 6378              	.LASF0:
 6379 015a 7369676E 		.ascii	"signed char\000"
 6379      65642063 
 6379      68617200 
 6380              	.LASF23:
 6381 0166 66726571 		.ascii	"freq\000"
 6381      00
 6382              	.LASF83:
 6383 016b 43794465 		.ascii	"CyDelayFreq\000"
 6383      6C617946 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 184


 6383      72657100 
 6384              	.LASF24:
 6385 0177 696E7465 		.ascii	"interruptState\000"
 6385      72727570 
 6385      74537461 
 6385      746500
 6386              	.LASF26:
 6387 0186 6C664C69 		.ascii	"lfLimit\000"
 6387      6D697400 
 6388              	.LASF90:
 6389 018e 43795379 		.ascii	"CySysTickGetReload\000"
 6389      73546963 
 6389      6B476574 
 6389      52656C6F 
 6389      616400
 6390              	.LASF49:
 6391 01a1 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6391      73436C6B 
 6391      496D6F47 
 6391      65745763 
 6391      6F4C6F63 
 6392              	.LASF78:
 6393 01b7 77636F4C 		.ascii	"wcoLock\000"
 6393      6F636B00 
 6394              	.LASF4:
 6395 01bf 6C6F6E67 		.ascii	"long int\000"
 6395      20696E74 
 6395      00
 6396              	.LASF67:
 6397 01c8 4379496E 		.ascii	"CyIntDisable\000"
 6397      74446973 
 6397      61626C65 
 6397      00
 6398              	.LASF77:
 6399 01d5 72656756 		.ascii	"regValues\000"
 6399      616C7565 
 6399      7300
 6400              	.LASF43:
 6401 01df 43795379 		.ascii	"CySysEnablePumpClock\000"
 6401      73456E61 
 6401      626C6550 
 6401      756D7043 
 6401      6C6F636B 
 6402              	.LASF9:
 6403 01f4 75696E74 		.ascii	"uint8\000"
 6403      3800
 6404              	.LASF108:
 6405 01fa 63796465 		.ascii	"cydelayFreqKhz\000"
 6405      6C617946 
 6405      7265714B 
 6405      687A00
 6406              	.LASF45:
 6407 0209 656E6162 		.ascii	"enable\000"
 6407      6C6500
 6408              	.LASF13:
 6409 0210 646F7562 		.ascii	"double\000"
 6409      6C6500
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 185


 6410              	.LASF63:
 6411 0217 73686966 		.ascii	"shift\000"
 6411      7400
 6412              	.LASF31:
 6413 021d 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6413      734C7664 
 6413      436C6561 
 6413      72496E74 
 6413      65727275 
 6414              	.LASF11:
 6415 0234 75696E74 		.ascii	"uint32\000"
 6415      333200
 6416              	.LASF57:
 6417 023b 6D61736B 		.ascii	"mask\000"
 6417      00
 6418              	.LASF51:
 6419 0240 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6419      73436C6B 
 6419      47657453 
 6419      7973636C 
 6419      6B536F75 
 6420              	.LASF22:
 6421 0258 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6421      73436C6B 
 6421      496D6F45 
 6421      6E61626C 
 6421      6557636F 
 6422              	.LASF64:
 6423 0271 4379496E 		.ascii	"CyIntGetPriority\000"
 6423      74476574 
 6423      5072696F 
 6423      72697479 
 6423      00
 6424              	.LASF110:
 6425 0282 63796465 		.ascii	"cydelay32kMs\000"
 6425      6C617933 
 6425      326B4D73 
 6425      00
 6426              	.LASF84:
 6427 028f 43795379 		.ascii	"CySysTickInit\000"
 6427      73546963 
 6427      6B496E69 
 6427      7400
 6428              	.LASF34:
 6429 029d 76616C75 		.ascii	"value\000"
 6429      6500
 6430              	.LASF30:
 6431 02a3 636C6F63 		.ascii	"clockSource\000"
 6431      6B536F75 
 6431      72636500 
 6432              	.LASF98:
 6433 02af 43794765 		.ascii	"CyGetUniqueId\000"
 6433      74556E69 
 6433      71756549 
 6433      6400
 6434              	.LASF93:
 6435 02bd 43795379 		.ascii	"CySysTickGetCountFlag\000"
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 186


 6435      73546963 
 6435      6B476574 
 6435      436F756E 
 6435      74466C61 
 6436              	.LASF8:
 6437 02d3 756E7369 		.ascii	"unsigned int\000"
 6437      676E6564 
 6437      20696E74 
 6437      00
 6438              	.LASF32:
 6439 02e0 43795379 		.ascii	"CySysTickClear\000"
 6439      73546963 
 6439      6B436C65 
 6439      617200
 6440              	.LASF5:
 6441 02ef 6C6F6E67 		.ascii	"long unsigned int\000"
 6441      20756E73 
 6441      69676E65 
 6441      6420696E 
 6441      7400
 6442              	.LASF50:
 6443 0301 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6443      734C7664 
 6443      47657449 
 6443      6E746572 
 6443      72757074 
 6444              	.LASF40:
 6445 031c 43795379 		.ascii	"CySysClkImoStop\000"
 6445      73436C6B 
 6445      496D6F53 
 6445      746F7000 
 6446              	.LASF114:
 6447 032c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6447      74657243 
 6447      72697469 
 6447      63616C53 
 6447      65637469 
 6448              	.LASF68:
 6449 0343 4379496E 		.ascii	"CyIntSetPending\000"
 6449      74536574 
 6449      50656E64 
 6449      696E6700 
 6450              	.LASF97:
 6451 0353 43795379 		.ascii	"CySysTickGetCallback\000"
 6451      73546963 
 6451      6B476574 
 6451      43616C6C 
 6451      6261636B 
 6452              	.LASF52:
 6453 0368 43795379 		.ascii	"CySysGetResetReason\000"
 6453      73476574 
 6453      52657365 
 6453      74526561 
 6453      736F6E00 
 6454              	.LASF3:
 6455 037c 73686F72 		.ascii	"short unsigned int\000"
 6455      7420756E 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 187


 6455      7369676E 
 6455      65642069 
 6455      6E7400
 6456              	.LASF25:
 6457 038f 72656754 		.ascii	"regTmp\000"
 6457      6D7000
 6458              	.LASF28:
 6459 0396 43795379 		.ascii	"CySysTickSetClockSource\000"
 6459      73546963 
 6459      6B536574 
 6459      436C6F63 
 6459      6B536F75 
 6460              	.LASF59:
 6461 03ae 4379496E 		.ascii	"CyIntSetVector\000"
 6461      74536574 
 6461      56656374 
 6461      6F7200
 6462              	.LASF35:
 6463 03bd 6E756D62 		.ascii	"number\000"
 6463      657200
 6464              	.LASF62:
 6465 03c4 7072696F 		.ascii	"priority\000"
 6465      72697479 
 6465      00
 6466              	.LASF75:
 6467 03cd 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6467      73436C6B 
 6467      57726974 
 6467      65496D6F 
 6467      46726571 
 6468              	.LASF102:
 6469 03e2 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6469      73536574 
 6469      466C6173 
 6469      68416363 
 6469      65737341 
 6470              	.LASF123:
 6471 0401 4379496E 		.ascii	"CyIntSetSysVector\000"
 6471      74536574 
 6471      53797356 
 6471      6563746F 
 6471      7200
 6472              	.LASF39:
 6473 0413 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6473      73436C6B 
 6473      496D6F44 
 6473      69736162 
 6473      6C655763 
 6474              	.LASF16:
 6475 042d 72656733 		.ascii	"reg32\000"
 6475      3200
 6476              	.LASF88:
 6477 0433 43795379 		.ascii	"CySysTickStart\000"
 6477      73546963 
 6477      6B537461 
 6477      727400
 6478              	.LASF53:
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 188


 6479 0442 72657475 		.ascii	"returnStatus\000"
 6479      726E5374 
 6479      61747573 
 6479      00
 6480              	.LASF101:
 6481 044f 736F7572 		.ascii	"source\000"
 6481      636500
 6482              	.LASF19:
 6483 0456 73697A65 		.ascii	"sizetype\000"
 6483      74797065 
 6483      00
 6484              	.LASF111:
 6485 045f 43795379 		.ascii	"CySysTickInitVar\000"
 6485      73546963 
 6485      6B496E69 
 6485      74566172 
 6485      00
 6486              	.LASF104:
 6487 0470 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6487      73536574 
 6487      50657269 
 6487      70686572 
 6487      616C4163 
 6488              	.LASF69:
 6489 0494 4379496E 		.ascii	"CyIntClearPending\000"
 6489      74436C65 
 6489      61725065 
 6489      6E64696E 
 6489      6700
 6490              	.LASF18:
 6491 04a6 6C6F6E67 		.ascii	"long double\000"
 6491      20646F75 
 6491      626C6500 
 6492              	.LASF36:
 6493 04b2 61646472 		.ascii	"address\000"
 6493      65737300 
 6494              	.LASF119:
 6495 04ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6495      43313120 
 6495      352E342E 
 6495      31203230 
 6495      31363036 
 6496 04ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6496      20726576 
 6496      6973696F 
 6496      6E203233 
 6496      37373135 
 6497 0520 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6497      66756E63 
 6497      74696F6E 
 6497      2D736563 
 6497      74696F6E 
 6498              	.LASF46:
 6499 0548 73797363 		.ascii	"sysclkSource\000"
 6499      6C6B536F 
 6499      75726365 
 6499      00
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 189


 6500              	.LASF95:
 6501 0555 66756E63 		.ascii	"function\000"
 6501      74696F6E 
 6501      00
 6502              	.LASF112:
 6503 055e 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6503      6F467265 
 6503      714D687A 
 6503      32526567 
 6503      00
 6504              	.LASF91:
 6505 056f 43795379 		.ascii	"CySysTickGetValue\000"
 6505      73546963 
 6505      6B476574 
 6505      56616C75 
 6505      6500
 6506              	.LASF107:
 6507 0581 63796465 		.ascii	"cydelayFreqHz\000"
 6507      6C617946 
 6507      72657148 
 6507      7A00
 6508              	.LASF61:
 6509 058f 4379496E 		.ascii	"CyIntSetPriority\000"
 6509      74536574 
 6509      5072696F 
 6509      72697479 
 6509      00
 6510              	.LASF12:
 6511 05a0 666C6F61 		.ascii	"float\000"
 6511      7400
 6512              	.LASF115:
 6513 05a6 43794578 		.ascii	"CyExitCriticalSection\000"
 6513      69744372 
 6513      69746963 
 6513      616C5365 
 6513      6374696F 
 6514              	.LASF81:
 6515 05bc 43795379 		.ascii	"CySysLvdEnable\000"
 6515      734C7664 
 6515      456E6162 
 6515      6C6500
 6516              	.LASF20:
 6517 05cb 63795379 		.ascii	"cySysTickCallback\000"
 6517      73546963 
 6517      6B43616C 
 6517      6C626163 
 6517      6B00
 6518              	.LASF60:
 6519 05dd 4379496E 		.ascii	"CyIntGetVector\000"
 6519      74476574 
 6519      56656374 
 6519      6F7200
 6520              	.LASF73:
 6521 05ec 6D696C6C 		.ascii	"milliseconds\000"
 6521      69736563 
 6521      6F6E6473 
 6521      00
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 190


 6522              	.LASF116:
 6523 05f9 43794465 		.ascii	"CyDelayCycles\000"
 6523      6C617943 
 6523      79636C65 
 6523      7300
 6524              	.LASF15:
 6525 0607 72656738 		.ascii	"reg8\000"
 6525      00
 6526              	.LASF82:
 6527 060c 74687265 		.ascii	"threshold\000"
 6527      73686F6C 
 6527      6400
 6528              	.LASF21:
 6529 0616 43794861 		.ascii	"CyHalt\000"
 6529      6C7400
 6530              	.LASF100:
 6531 061d 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6531      73536574 
 6531      52616D41 
 6531      63636573 
 6531      73417262 
 6532              	.LASF1:
 6533 063a 756E7369 		.ascii	"unsigned char\000"
 6533      676E6564 
 6533      20636861 
 6533      7200
 6534              	.LASF2:
 6535 0648 73686F72 		.ascii	"short int\000"
 6535      7420696E 
 6535      7400
 6536              	.LASF65:
 6537 0652 4379496E 		.ascii	"CyIntEnable\000"
 6537      74456E61 
 6537      626C6500 
 6538              	.LASF58:
 6539 065e 4379496E 		.ascii	"CyIntGetSysVector\000"
 6539      74476574 
 6539      53797356 
 6539      6563746F 
 6539      7200
 6540              	.LASF44:
 6541 0670 636C6B53 		.ascii	"clkSelect\000"
 6541      656C6563 
 6541      7400
 6542              	.LASF79:
 6543 067a 43794465 		.ascii	"CyDelayUs\000"
 6543      6C617955 
 6543      7300
 6544              	.LASF29:
 6545 0684 72656173 		.ascii	"reason\000"
 6545      6F6E00
 6546              	.LASF14:
 6547 068b 63686172 		.ascii	"char\000"
 6547      00
 6548              	.LASF17:
 6549 0690 63796973 		.ascii	"cyisraddress\000"
 6549      72616464 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 191


 6549      72657373 
 6549      00
 6550              	.LASF87:
 6551 069d 43795379 		.ascii	"CySysTickEnable\000"
 6551      73546963 
 6551      6B456E61 
 6551      626C6500 
 6552              	.LASF47:
 6553 06ad 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6553      73436C6B 
 6553      57726974 
 6553      65537973 
 6553      636C6B44 
 6554              	.LASF94:
 6555 06c4 43795379 		.ascii	"CySysTickSetCallback\000"
 6555      73546963 
 6555      6B536574 
 6555      43616C6C 
 6555      6261636B 
 6556              	.LASF106:
 6557 06d9 43795379 		.ascii	"CySysTickCallbacks\000"
 6557      73546963 
 6557      6B43616C 
 6557      6C626163 
 6557      6B7300
 6558              	.LASF99:
 6559 06ec 756E6971 		.ascii	"uniqueId\000"
 6559      75654964 
 6559      00
 6560              	.LASF27:
 6561 06f5 666C6173 		.ascii	"flashCtlReg\000"
 6561      6843746C 
 6561      52656700 
 6562              	.LASF72:
 6563 0701 43794465 		.ascii	"CyDelay\000"
 6563      6C617900 
 6564              	.LASF92:
 6565 0709 43795379 		.ascii	"CySysTickGetClockSource\000"
 6565      73546963 
 6565      6B476574 
 6565      436C6F63 
 6565      6B536F75 
 6566              	.LASF89:
 6567 0721 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6567      73546963 
 6567      6B446973 
 6567      61626C65 
 6567      496E7465 
 6568              	.LASF70:
 6569 073b 43795379 		.ascii	"CySysLvdDisable\000"
 6569      734C7664 
 6569      44697361 
 6569      626C6500 
 6570              	.LASF109:
 6571 074b 63796465 		.ascii	"cydelayFreqMhz\000"
 6571      6C617946 
 6571      7265714D 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 192


 6571      687A00
 6572              	.LASF118:
 6573 075a 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6573      73436C6B 
 6573      57636F45 
 6573      6E61626C 
 6573      656400
 6574              	.LASF103:
 6575 076d 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6575      73536574 
 6575      446D6163 
 6575      41636365 
 6575      73734172 
 6576              	.LASF85:
 6577 078b 43795379 		.ascii	"CySysTickStop\000"
 6577      73546963 
 6577      6B53746F 
 6577      7000
 6578              	.LASF48:
 6579 0799 64697669 		.ascii	"divider\000"
 6579      64657200 
 6580              	.LASF74:
 6581 07a1 43795379 		.ascii	"CySysClkImoStart\000"
 6581      73436C6B 
 6581      496D6F53 
 6581      74617274 
 6581      00
 6582              	.LASF117:
 6583 07b2 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6583      73466C61 
 6583      73685365 
 6583      74576169 
 6583      74437963 
 6584              	.LASF120:
 6585 07ca 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6585      72617465 
 6585      645F536F 
 6585      75726365 
 6585      5C50536F 
 6586              	.LASF80:
 6587 07e9 6D696372 		.ascii	"microseconds\000"
 6587      6F736563 
 6587      6F6E6473 
 6587      00
 6588              	.LASF42:
 6589 07f6 746D7052 		.ascii	"tmpReg\000"
 6589      656700
 6590              	.LASF33:
 6591 07fd 43795379 		.ascii	"CySysTickSetReload\000"
 6591      73546963 
 6591      6B536574 
 6591      52656C6F 
 6591      616400
 6592              	.LASF122:
 6593 0810 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6593      73546963 
 6593      6B536572 
ARM GAS  C:\Users\Melody\AppData\Local\Temp\ccmPrAnr.s 			page 193


 6593      76696365 
 6593      43616C6C 
 6594              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
